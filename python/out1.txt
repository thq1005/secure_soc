Testing the AES cipher model
============================
   AES Encipher tests
   ==================
Test 0 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x6bc1bee2, 0x2e409f96, 0xe93d7e11, 0x7393172a
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x6bc1bee2, 0x2e409f96, 0xe93d7e11, 0x7393172a
0x40bfabf4, 0x06ee4d30, 0x42ca6b99, 0x7a5c5816


  Round 01
  ---------
Inside substw:
b0 = 0x40, b1 = 0xbf, b2 = 0xab, b3 = 0xf4
s0 = 0x09, s1 = 0x08, s2 = 0x62, s3 = 0xbf
res = 0x090862bf
Inside substw:
b0 = 0x06, b1 = 0xee, b2 = 0x4d, b3 = 0x30
s0 = 0x6f, s1 = 0x28, s2 = 0xe3, s3 = 0x04
res = 0x6f28e304
Inside substw:
b0 = 0x42, b1 = 0xca, b2 = 0x6b, b3 = 0x99
s0 = 0x2c, s1 = 0x74, s2 = 0x7f, s3 = 0xee
res = 0x2c747fee
Inside substw:
b0 = 0x7a, b1 = 0x5c, b2 = 0x58, b3 = 0x16
s0 = 0xda, s1 = 0x4a, s2 = 0x6a, s3 = 0x47
res = 0xda4a6a47
SubBytes block in and block out:
0x40bfabf4, 0x06ee4d30, 0x42ca6b99, 0x7a5c5816
0x090862bf, 0x6f28e304, 0x2c747fee, 0xda4a6a47

ShiftRows block in and block out:
0x090862bf, 0x6f28e304, 0x2c747fee, 0xda4a6a47
0x09287f47, 0x6f746abf, 0x2c4a6204, 0xda08e3ee

MixColumns block in and block out:
0x09287f47, 0x6f746abf, 0x2c4a6204, 0xda08e3ee
0x529f16c2, 0x978615ca, 0xe01aae54, 0xba1a2659

AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0x529f16c2, 0x978615ca, 0xe01aae54, 0xba1a2659
0xf265e8d5, 0x1fd2397b, 0xc3b9976d, 0x9076505c


  Round 02
  ---------
Inside substw:
b0 = 0xf2, b1 = 0x65, b2 = 0xe8, b3 = 0xd5
s0 = 0x89, s1 = 0x4d, s2 = 0x9b, s3 = 0x03
res = 0x894d9b03
Inside substw:
b0 = 0x1f, b1 = 0xd2, b2 = 0x39, b3 = 0x7b
s0 = 0xc0, s1 = 0xb5, s2 = 0x12, s3 = 0x21
res = 0xc0b51221
Inside substw:
b0 = 0xc3, b1 = 0xb9, b2 = 0x97, b3 = 0x6d
s0 = 0x2e, s1 = 0x56, s2 = 0x88, s3 = 0x3c
res = 0x2e56883c
Inside substw:
b0 = 0x90, b1 = 0x76, b2 = 0x50, b3 = 0x5c
s0 = 0x60, s1 = 0x38, s2 = 0x53, s3 = 0x4a
res = 0x6038534a
SubBytes block in and block out:
0xf265e8d5, 0x1fd2397b, 0xc3b9976d, 0x9076505c
0x894d9b03, 0xc0b51221, 0x2e56883c, 0x6038534a

ShiftRows block in and block out:
0x894d9b03, 0xc0b51221, 0x2e56883c, 0x6038534a
0x89b5884a, 0xc0565303, 0x2e389b21, 0x604d123c

MixColumns block in and block out:
0x89b5884a, 0xc0565303, 0x2e389b21, 0x604d123c
0x0f31e929, 0x319a3558, 0xaec95893, 0x39f04d87

AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x0f31e929, 0x319a3558, 0xaec95893, 0x39f04d87
0xfdf37cdb, 0x4b0c8c1b, 0xf7fcd8e9, 0x4aa9bbf8


  Round 03
  ---------
Inside substw:
b0 = 0xfd, b1 = 0xf3, b2 = 0x7c, b3 = 0xdb
s0 = 0x54, s1 = 0x0d, s2 = 0x10, s3 = 0xb9
res = 0x540d10b9
Inside substw:
b0 = 0x4b, b1 = 0x0c, b2 = 0x8c, b3 = 0x1b
s0 = 0xb3, s1 = 0xfe, s2 = 0x64, s3 = 0xaf
res = 0xb3fe64af
Inside substw:
b0 = 0xf7, b1 = 0xfc, b2 = 0xd8, b3 = 0xe9
s0 = 0x68, s1 = 0xb0, s2 = 0x61, s3 = 0x1e
res = 0x68b0611e
Inside substw:
b0 = 0x4a, b1 = 0xa9, b2 = 0xbb, b3 = 0xf8
s0 = 0xd6, s1 = 0xd3, s2 = 0xea, s3 = 0x41
res = 0xd6d3ea41
SubBytes block in and block out:
0xfdf37cdb, 0x4b0c8c1b, 0xf7fcd8e9, 0x4aa9bbf8
0x540d10b9, 0xb3fe64af, 0x68b0611e, 0xd6d3ea41

ShiftRows block in and block out:
0x540d10b9, 0xb3fe64af, 0x68b0611e, 0xd6d3ea41
0x54fe6141, 0xb3b0eab9, 0x68d310af, 0xd60d641e

MixColumns block in and block out:
0x54fe6141, 0xb3b0eab9, 0x68d310af, 0xd60d641e
0x9151abe1, 0xe5541cfd, 0x014a713e, 0xda7e3134

AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0x9151abe1, 0xe5541cfd, 0x014a713e, 0xda7e3134
0xacd1ec9c, 0xa242e2c3, 0x1f690f7a, 0xb704b90f


  Round 04
  ---------
Inside substw:
b0 = 0xac, b1 = 0xd1, b2 = 0xec, b3 = 0x9c
s0 = 0x91, s1 = 0x3e, s2 = 0xce, s3 = 0xde
res = 0x913ecede
Inside substw:
b0 = 0xa2, b1 = 0x42, b2 = 0xe2, b3 = 0xc3
s0 = 0x3a, s1 = 0x2c, s2 = 0x98, s3 = 0x2e
res = 0x3a2c982e
Inside substw:
b0 = 0x1f, b1 = 0x69, b2 = 0x0f, b3 = 0x7a
s0 = 0xc0, s1 = 0xf9, s2 = 0x76, s3 = 0xda
res = 0xc0f976da
Inside substw:
b0 = 0xb7, b1 = 0x04, b2 = 0xb9, b3 = 0x0f
s0 = 0xa9, s1 = 0xf2, s2 = 0x56, s3 = 0x76
res = 0xa9f25676
SubBytes block in and block out:
0xacd1ec9c, 0xa242e2c3, 0x1f690f7a, 0xb704b90f
0x913ecede, 0x3a2c982e, 0xc0f976da, 0xa9f25676

ShiftRows block in and block out:
0x913ecede, 0x3a2c982e, 0xc0f976da, 0xa9f25676
0x912c7676, 0x3af956de, 0xc0f2ce2e, 0xa93e98da

MixColumns block in and block out:
0x912c7676, 0x3af956de, 0xc0f2ce2e, 0xa93e98da
0x4d25cb1e, 0xecf71646, 0x7658c73b, 0x49bcc9e9

AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0x4d25cb1e, 0xecf71646, 0x7658c73b, 0x49bcc9e9
0xa2616e5f, 0x44a54d39, 0xc029e200, 0x92b764e9


  Round 05
  ---------
Inside substw:
b0 = 0xa2, b1 = 0x61, b2 = 0x6e, b3 = 0x5f
s0 = 0x3a, s1 = 0xef, s2 = 0x9f, s3 = 0xcf
res = 0x3aef9fcf
Inside substw:
b0 = 0x44, b1 = 0xa5, b2 = 0x4d, b3 = 0x39
s0 = 0x1b, s1 = 0x06, s2 = 0xe3, s3 = 0x12
res = 0x1b06e312
Inside substw:
b0 = 0xc0, b1 = 0x29, b2 = 0xe2, b3 = 0x00
s0 = 0xba, s1 = 0xa5, s2 = 0x98, s3 = 0x63
res = 0xbaa59863
Inside substw:
b0 = 0x92, b1 = 0xb7, b2 = 0x64, b3 = 0xe9
s0 = 0x4f, s1 = 0xa9, s2 = 0x43, s3 = 0x1e
res = 0x4fa9431e
SubBytes block in and block out:
0xa2616e5f, 0x44a54d39, 0xc029e200, 0x92b764e9
0x3aef9fcf, 0x1b06e312, 0xbaa59863, 0x4fa9431e

ShiftRows block in and block out:
0x3aef9fcf, 0x1b06e312, 0xbaa59863, 0x4fa9431e
0x3a06981e, 0x1ba543cf, 0xbaa99f12, 0x4fefe363

MixColumns block in and block out:
0x3a06981e, 0x1ba543cf, 0xbaa99f12, 0x4fefe363
0xf89b35ec, 0x4e40724e, 0x025b00c7, 0x34d7d81b

AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0xf89b35ec, 0x4e40724e, 0x025b00c7, 0x34d7d81b
0x2c4af314, 0x32c3efc9, 0xc8a9b87b, 0x252ecda7


  Round 06
  ---------
Inside substw:
b0 = 0x2c, b1 = 0x4a, b2 = 0xf3, b3 = 0x14
s0 = 0x71, s1 = 0xd6, s2 = 0x0d, s3 = 0xfa
res = 0x71d60dfa
Inside substw:
b0 = 0x32, b1 = 0xc3, b2 = 0xef, b3 = 0xc9
s0 = 0x23, s1 = 0x2e, s2 = 0xdf, s3 = 0xdd
res = 0x232edfdd
Inside substw:
b0 = 0xc8, b1 = 0xa9, b2 = 0xb8, b3 = 0x7b
s0 = 0xe8, s1 = 0xd3, s2 = 0x6c, s3 = 0x21
res = 0xe8d36c21
Inside substw:
b0 = 0x25, b1 = 0x2e, b2 = 0xcd, b3 = 0xa7
s0 = 0x3f, s1 = 0x31, s2 = 0xbd, s3 = 0x5c
res = 0x3f31bd5c
SubBytes block in and block out:
0x2c4af314, 0x32c3efc9, 0xc8a9b87b, 0x252ecda7
0x71d60dfa, 0x232edfdd, 0xe8d36c21, 0x3f31bd5c

ShiftRows block in and block out:
0x71d60dfa, 0x232edfdd, 0xe8d36c21, 0x3f31bd5c
0x712e6c5c, 0x23d3bdfa, 0xe8310ddd, 0x3fd6df21

MixColumns block in and block out:
0x712e6c5c, 0x23d3bdfa, 0xe8310ddd, 0x3fd6df21
0xa0c56369, 0x6fb884e4, 0x4840bfbe, 0xe1d32f0a

AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0xa0c56369, 0x6fb884e4, 0x4840bfbe, 0xe1d32f0a
0xcd4dc013, 0x7eb3ba19, 0x93b939ff, 0x2bd3bcf7


  Round 07
  ---------
Inside substw:
b0 = 0xcd, b1 = 0x4d, b2 = 0xc0, b3 = 0x13
s0 = 0xbd, s1 = 0xe3, s2 = 0xba, s3 = 0x7d
res = 0xbde3ba7d
Inside substw:
b0 = 0x7e, b1 = 0xb3, b2 = 0xba, b3 = 0x19
s0 = 0xf3, s1 = 0x6d, s2 = 0xf4, s3 = 0xd4
res = 0xf36df4d4
Inside substw:
b0 = 0x93, b1 = 0xb9, b2 = 0x39, b3 = 0xff
s0 = 0xdc, s1 = 0x56, s2 = 0x12, s3 = 0x16
res = 0xdc561216
Inside substw:
b0 = 0x2b, b1 = 0xd3, b2 = 0xbc, b3 = 0xf7
s0 = 0xf1, s1 = 0x66, s2 = 0x65, s3 = 0x68
res = 0xf1666568
SubBytes block in and block out:
0xcd4dc013, 0x7eb3ba19, 0x93b939ff, 0x2bd3bcf7
0xbde3ba7d, 0xf36df4d4, 0xdc561216, 0xf1666568

ShiftRows block in and block out:
0xbde3ba7d, 0xf36df4d4, 0xdc561216, 0xf1666568
0xbd6d1268, 0xf356657d, 0xdc66bad4, 0xf1e3f416

MixColumns block in and block out:
0xbd6d1268, 0xf356657d, 0xdc66bad4, 0xf1e3f416
0xac394c73, 0x1f8de8c7, 0x6711b210, 0x253ddb33

AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xac394c73, 0x1f8de8c7, 0x6711b210, 0x253ddb33
0xe26dbb7d, 0x40d22134, 0xe3b7fda2, 0x6b9b077c


  Round 08
  ---------
Inside substw:
b0 = 0xe2, b1 = 0x6d, b2 = 0xbb, b3 = 0x7d
s0 = 0x98, s1 = 0x3c, s2 = 0xea, s3 = 0xff
res = 0x983ceaff
Inside substw:
b0 = 0x40, b1 = 0xd2, b2 = 0x21, b3 = 0x34
s0 = 0x09, s1 = 0xb5, s2 = 0xfd, s3 = 0x18
res = 0x09b5fd18
Inside substw:
b0 = 0xe3, b1 = 0xb7, b2 = 0xfd, b3 = 0xa2
s0 = 0x11, s1 = 0xa9, s2 = 0x54, s3 = 0x3a
res = 0x11a9543a
Inside substw:
b0 = 0x6b, b1 = 0x9b, b2 = 0x07, b3 = 0x7c
s0 = 0x7f, s1 = 0x14, s2 = 0xc5, s3 = 0x10
res = 0x7f14c510
SubBytes block in and block out:
0xe26dbb7d, 0x40d22134, 0xe3b7fda2, 0x6b9b077c
0x983ceaff, 0x09b5fd18, 0x11a9543a, 0x7f14c510

ShiftRows block in and block out:
0x983ceaff, 0x09b5fd18, 0x11a9543a, 0x7f14c510
0x98b55410, 0x09a9c5ff, 0x1114ea18, 0x7f3cfd3a

MixColumns block in and block out:
0x98b55410, 0x09a9c5ff, 0x1114ea18, 0x7f3cfd3a
0xab05b572, 0xc8eb2b92, 0xec04e2fd, 0x7d21ec34

AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xab05b572, 0xc8eb2b92, 0xec04e2fd, 0x7d21ec34
0x41d7c653, 0x7d669140, 0xdd2f179d, 0x02acc51b


  Round 09
  ---------
Inside substw:
b0 = 0x41, b1 = 0xd7, b2 = 0xc6, b3 = 0x53
s0 = 0x83, s1 = 0x0e, s2 = 0xb4, s3 = 0xed
res = 0x830eb4ed
Inside substw:
b0 = 0x7d, b1 = 0x66, b2 = 0x91, b3 = 0x40
s0 = 0xff, s1 = 0x33, s2 = 0x81, s3 = 0x09
res = 0xff338109
Inside substw:
b0 = 0xdd, b1 = 0x2f, b2 = 0x17, b3 = 0x9d
s0 = 0xc1, s1 = 0x15, s2 = 0xf0, s3 = 0x5e
res = 0xc115f05e
Inside substw:
b0 = 0x02, b1 = 0xac, b2 = 0xc5, b3 = 0x1b
s0 = 0x77, s1 = 0x91, s2 = 0xa6, s3 = 0xaf
res = 0x7791a6af
SubBytes block in and block out:
0x41d7c653, 0x7d669140, 0xdd2f179d, 0x02acc51b
0x830eb4ed, 0xff338109, 0xc115f05e, 0x7791a6af

ShiftRows block in and block out:
0x830eb4ed, 0xff338109, 0xc115f05e, 0x7791a6af
0x8333f0af, 0xff15a6ed, 0xc191b409, 0x770e815e

MixColumns block in and block out:
0x8333f0af, 0xff15a6ed, 0xc191b409, 0x770e815e
0x1741a118, 0x91c99168, 0x8c36386f, 0x23ad82aa

AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0x1741a118, 0x91c99168, 0x8c36386f, 0x23ad82aa
0xbb36c7eb, 0x88334d49, 0xa4e7112e, 0x74f182c4

  Final round.
Inside substw:
b0 = 0xbb, b1 = 0x36, b2 = 0xc7, b3 = 0xeb
s0 = 0xea, s1 = 0x05, s2 = 0xc6, s3 = 0xe9
res = 0xea05c6e9
Inside substw:
b0 = 0x88, b1 = 0x33, b2 = 0x4d, b3 = 0x49
s0 = 0xc4, s1 = 0xc3, s2 = 0xe3, s3 = 0x3b
res = 0xc4c3e33b
Inside substw:
b0 = 0xa4, b1 = 0xe7, b2 = 0x11, b3 = 0x2e
s0 = 0x49, s1 = 0x94, s2 = 0x82, s3 = 0x31
res = 0x49948231
Inside substw:
b0 = 0x74, b1 = 0xf1, b2 = 0x82, b3 = 0xc4
s0 = 0x92, s1 = 0xa1, s2 = 0x13, s3 = 0x1c
res = 0x92a1131c
SubBytes block in and block out:
0xbb36c7eb, 0x88334d49, 0xa4e7112e, 0x74f182c4
0xea05c6e9, 0xc4c3e33b, 0x49948231, 0x92a1131c

ShiftRows block in and block out:
0xea05c6e9, 0xc4c3e33b, 0x49948231, 0x92a1131c
0xeac3821c, 0xc49413e9, 0x49a1c63b, 0x9205e331

AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0xeac3821c, 0xc49413e9, 0x49a1c63b, 0x9205e331
0x3ad77bb4, 0x0d7a3660, 0xa89ecaf3, 0x2466ef97

OK. Result matches expected.

Test 1 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xae2d8a57, 0x1e03ac9c, 0x9eb76fac, 0x45af8e51
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xae2d8a57, 0x1e03ac9c, 0x9eb76fac, 0x45af8e51
0x85539f41, 0x36ad7e3a, 0x35407a24, 0x4c60c16d


  Round 01
  ---------
Inside substw:
b0 = 0x85, b1 = 0x53, b2 = 0x9f, b3 = 0x41
s0 = 0x97, s1 = 0xed, s2 = 0xdb, s3 = 0x83
res = 0x97eddb83
Inside substw:
b0 = 0x36, b1 = 0xad, b2 = 0x7e, b3 = 0x3a
s0 = 0x05, s1 = 0x95, s2 = 0xf3, s3 = 0x80
res = 0x0595f380
Inside substw:
b0 = 0x35, b1 = 0x40, b2 = 0x7a, b3 = 0x24
s0 = 0x96, s1 = 0x09, s2 = 0xda, s3 = 0x36
res = 0x9609da36
Inside substw:
b0 = 0x4c, b1 = 0x60, b2 = 0xc1, b3 = 0x6d
s0 = 0x29, s1 = 0xd0, s2 = 0x78, s3 = 0x3c
res = 0x29d0783c
SubBytes block in and block out:
0x85539f41, 0x36ad7e3a, 0x35407a24, 0x4c60c16d
0x97eddb83, 0x0595f380, 0x9609da36, 0x29d0783c

ShiftRows block in and block out:
0x97eddb83, 0x0595f380, 0x9609da36, 0x29d0783c
0x9795da3c, 0x05097883, 0x96d0db80, 0x29edf336

MixColumns block in and block out:
0x9795da3c, 0x05097883, 0x96d0db80, 0x29edf336
0x77efe995, 0xea1c6263, 0x07db70b1, 0xbbd06309

AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0x77efe995, 0xea1c6263, 0x07db70b1, 0xbbd06309
0xd7151782, 0x62484ed2, 0x24784988, 0x91bc150c


  Round 02
  ---------
Inside substw:
b0 = 0xd7, b1 = 0x15, b2 = 0x17, b3 = 0x82
s0 = 0x0e, s1 = 0x59, s2 = 0xf0, s3 = 0x13
res = 0x0e59f013
Inside substw:
b0 = 0x62, b1 = 0x48, b2 = 0x4e, b3 = 0xd2
s0 = 0xaa, s1 = 0x52, s2 = 0x2f, s3 = 0xb5
res = 0xaa522fb5
Inside substw:
b0 = 0x24, b1 = 0x78, b2 = 0x49, b3 = 0x88
s0 = 0x36, s1 = 0xbc, s2 = 0x3b, s3 = 0xc4
res = 0x36bc3bc4
Inside substw:
b0 = 0x91, b1 = 0xbc, b2 = 0x15, b3 = 0x0c
s0 = 0x81, s1 = 0x65, s2 = 0x59, s3 = 0xfe
res = 0x816559fe
SubBytes block in and block out:
0xd7151782, 0x62484ed2, 0x24784988, 0x91bc150c
0x0e59f013, 0xaa522fb5, 0x36bc3bc4, 0x816559fe

ShiftRows block in and block out:
0x0e59f013, 0xaa522fb5, 0x36bc3bc4, 0x816559fe
0x0e523bfe, 0xaabc5913, 0x3665f0b5, 0x81592fc4

MixColumns block in and block out:
0x0e523bfe, 0xaabc5913, 0x3665f0b5, 0x81592fc4
0x2f19339c, 0xda319126, 0x86426cbe, 0x1986d17d

AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x2f19339c, 0xda319126, 0x86426cbe, 0x1986d17d
0xdddba66e, 0xa0a72865, 0xdf77ecc4, 0x6adf2702


  Round 03
  ---------
Inside substw:
b0 = 0xdd, b1 = 0xdb, b2 = 0xa6, b3 = 0x6e
s0 = 0xc1, s1 = 0xb9, s2 = 0x24, s3 = 0x9f
res = 0xc1b9249f
Inside substw:
b0 = 0xa0, b1 = 0xa7, b2 = 0x28, b3 = 0x65
s0 = 0xe0, s1 = 0x5c, s2 = 0x34, s3 = 0x4d
res = 0xe05c344d
Inside substw:
b0 = 0xdf, b1 = 0x77, b2 = 0xec, b3 = 0xc4
s0 = 0x9e, s1 = 0xf5, s2 = 0xce, s3 = 0x1c
res = 0x9ef5ce1c
Inside substw:
b0 = 0x6a, b1 = 0xdf, b2 = 0x27, b3 = 0x02
s0 = 0x02, s1 = 0x9e, s2 = 0xcc, s3 = 0x77
res = 0x029ecc77
SubBytes block in and block out:
0xdddba66e, 0xa0a72865, 0xdf77ecc4, 0x6adf2702
0xc1b9249f, 0xe05c344d, 0x9ef5ce1c, 0x029ecc77

ShiftRows block in and block out:
0xc1b9249f, 0xe05c344d, 0x9ef5ce1c, 0x029ecc77
0xc15cce77, 0xe0f5cc9f, 0x9e9e244d, 0x02b9341c

MixColumns block in and block out:
0xc15cce77, 0xe0f5cc9f, 0x9e9e244d, 0x02b9341c
0xc4478324, 0x8cc12c27, 0xf7989f99, 0xfc2bf7b3

AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xc4478324, 0x8cc12c27, 0xf7989f99, 0xfc2bf7b3
0xf9c7c459, 0xcbd7d219, 0xe9bbe1dd, 0x91517f88


  Round 04
  ---------
Inside substw:
b0 = 0xf9, b1 = 0xc7, b2 = 0xc4, b3 = 0x59
s0 = 0x99, s1 = 0xc6, s2 = 0x1c, s3 = 0xcb
res = 0x99c61ccb
Inside substw:
b0 = 0xcb, b1 = 0xd7, b2 = 0xd2, b3 = 0x19
s0 = 0x1f, s1 = 0x0e, s2 = 0xb5, s3 = 0xd4
res = 0x1f0eb5d4
Inside substw:
b0 = 0xe9, b1 = 0xbb, b2 = 0xe1, b3 = 0xdd
s0 = 0x1e, s1 = 0xea, s2 = 0xf8, s3 = 0xc1
res = 0x1eeaf8c1
Inside substw:
b0 = 0x91, b1 = 0x51, b2 = 0x7f, b3 = 0x88
s0 = 0x81, s1 = 0xd1, s2 = 0xd2, s3 = 0xc4
res = 0x81d1d2c4
SubBytes block in and block out:
0xf9c7c459, 0xcbd7d219, 0xe9bbe1dd, 0x91517f88
0x99c61ccb, 0x1f0eb5d4, 0x1eeaf8c1, 0x81d1d2c4

ShiftRows block in and block out:
0x99c61ccb, 0x1f0eb5d4, 0x1eeaf8c1, 0x81d1d2c4
0x990ef8c4, 0x1fead2cb, 0x1ed11cd4, 0x81c6b5c1

MixColumns block in and block out:
0x990ef8c4, 0x1fead2cb, 0x1ed11cd4, 0x81c6b5c1
0x07522bd5, 0x02760c94, 0x9c57905c, 0x3c136e72

AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0x07522bd5, 0x02760c94, 0x9c57905c, 0x3c136e72
0xe8168e94, 0xaa2457eb, 0x2a26b567, 0xe718c372


  Round 05
  ---------
Inside substw:
b0 = 0xe8, b1 = 0x16, b2 = 0x8e, b3 = 0x94
s0 = 0x9b, s1 = 0x47, s2 = 0x19, s3 = 0x22
res = 0x9b471922
Inside substw:
b0 = 0xaa, b1 = 0x24, b2 = 0x57, b3 = 0xeb
s0 = 0xac, s1 = 0x36, s2 = 0x5b, s3 = 0xe9
res = 0xac365be9
Inside substw:
b0 = 0x2a, b1 = 0x26, b2 = 0xb5, b3 = 0x67
s0 = 0xe5, s1 = 0xf7, s2 = 0xd5, s3 = 0x85
res = 0xe5f7d585
Inside substw:
b0 = 0xe7, b1 = 0x18, b2 = 0xc3, b3 = 0x72
s0 = 0x94, s1 = 0xad, s2 = 0x2e, s3 = 0x40
res = 0x94ad2e40
SubBytes block in and block out:
0xe8168e94, 0xaa2457eb, 0x2a26b567, 0xe718c372
0x9b471922, 0xac365be9, 0xe5f7d585, 0x94ad2e40

ShiftRows block in and block out:
0x9b471922, 0xac365be9, 0xe5f7d585, 0x94ad2e40
0x9b36d540, 0xacf72e22, 0xe5ad19e9, 0x94475b85

MixColumns block in and block out:
0x9b36d540, 0xacf72e22, 0xe5ad19e9, 0x94475b85
0xe2d3dcd5, 0x4d096172, 0xcd665a49, 0x2472f1aa

AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0xe2d3dcd5, 0x4d096172, 0xcd665a49, 0x2472f1aa
0x36021a2d, 0x318afcf5, 0x0794e2f5, 0x358be416


  Round 06
  ---------
Inside substw:
b0 = 0x36, b1 = 0x02, b2 = 0x1a, b3 = 0x2d
s0 = 0x05, s1 = 0x77, s2 = 0xa2, s3 = 0xd8
res = 0x0577a2d8
Inside substw:
b0 = 0x31, b1 = 0x8a, b2 = 0xfc, b3 = 0xf5
s0 = 0xc7, s1 = 0x7e, s2 = 0xb0, s3 = 0xe6
res = 0xc77eb0e6
Inside substw:
b0 = 0x07, b1 = 0x94, b2 = 0xe2, b3 = 0xf5
s0 = 0xc5, s1 = 0x22, s2 = 0x98, s3 = 0xe6
res = 0xc52298e6
Inside substw:
b0 = 0x35, b1 = 0x8b, b2 = 0xe4, b3 = 0x16
s0 = 0x96, s1 = 0x3d, s2 = 0x69, s3 = 0x47
res = 0x963d6947
SubBytes block in and block out:
0x36021a2d, 0x318afcf5, 0x0794e2f5, 0x358be416
0x0577a2d8, 0xc77eb0e6, 0xc52298e6, 0x963d6947

ShiftRows block in and block out:
0x0577a2d8, 0xc77eb0e6, 0xc52298e6, 0x963d6947
0x057e9847, 0xc72269d8, 0xc53da2e6, 0x9677b0e6

MixColumns block in and block out:
0x057e9847, 0xc72269d8, 0xc53da2e6, 0x9677b0e6
0x570d9967, 0x42e044b2, 0x92a4961c, 0xf855abb1

AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x570d9967, 0x42e044b2, 0x92a4961c, 0xf855abb1
0x3a853a1d, 0x53eb7a4f, 0x495d105d, 0x3255384c


  Round 07
  ---------
Inside substw:
b0 = 0x3a, b1 = 0x85, b2 = 0x3a, b3 = 0x1d
s0 = 0x80, s1 = 0x97, s2 = 0x80, s3 = 0xa4
res = 0x809780a4
Inside substw:
b0 = 0x53, b1 = 0xeb, b2 = 0x7a, b3 = 0x4f
s0 = 0xed, s1 = 0xe9, s2 = 0xda, s3 = 0x84
res = 0xede9da84
Inside substw:
b0 = 0x49, b1 = 0x5d, b2 = 0x10, b3 = 0x5d
s0 = 0x3b, s1 = 0x4c, s2 = 0xca, s3 = 0x4c
res = 0x3b4cca4c
Inside substw:
b0 = 0x32, b1 = 0x55, b2 = 0x38, b3 = 0x4c
s0 = 0x23, s1 = 0xfc, s2 = 0x07, s3 = 0x29
res = 0x23fc0729
SubBytes block in and block out:
0x3a853a1d, 0x53eb7a4f, 0x495d105d, 0x3255384c
0x809780a4, 0xede9da84, 0x3b4cca4c, 0x23fc0729

ShiftRows block in and block out:
0x809780a4, 0xede9da84, 0x3b4cca4c, 0x23fc0729
0x80e9ca29, 0xed4c07a4, 0x3bfc8084, 0x2397da4c

MixColumns block in and block out:
0x80e9ca29, 0xed4c07a4, 0x3bfc8084, 0x2397da4c
0xd8259dea, 0xb6d85834, 0x6dc74b22, 0x722fcfb0

AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xd8259dea, 0xb6d85834, 0x6dc74b22, 0x722fcfb0
0x96716ae4, 0xe98791c7, 0xe9610490, 0x3c8913ff


  Round 08
  ---------
Inside substw:
b0 = 0x96, b1 = 0x71, b2 = 0x6a, b3 = 0xe4
s0 = 0x90, s1 = 0xa3, s2 = 0x02, s3 = 0x69
res = 0x90a30269
Inside substw:
b0 = 0xe9, b1 = 0x87, b2 = 0x91, b3 = 0xc7
s0 = 0x1e, s1 = 0x17, s2 = 0x81, s3 = 0xc6
res = 0x1e1781c6
Inside substw:
b0 = 0xe9, b1 = 0x61, b2 = 0x04, b3 = 0x90
s0 = 0x1e, s1 = 0xef, s2 = 0xf2, s3 = 0x60
res = 0x1eeff260
Inside substw:
b0 = 0x3c, b1 = 0x89, b2 = 0x13, b3 = 0xff
s0 = 0xeb, s1 = 0xa7, s2 = 0x7d, s3 = 0x16
res = 0xeba77d16
SubBytes block in and block out:
0x96716ae4, 0xe98791c7, 0xe9610490, 0x3c8913ff
0x90a30269, 0x1e1781c6, 0x1eeff260, 0xeba77d16

ShiftRows block in and block out:
0x90a30269, 0x1e1781c6, 0x1eeff260, 0xeba77d16
0x9017f216, 0x1eef7d69, 0x1ea702c6, 0xeba38160

MixColumns block in and block out:
0x9017f216, 0x1eef7d69, 0x1ea702c6, 0xeba38160
0xe6a54262, 0x0235b062, 0x0a8bec10, 0xd24ef1c4

AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xe6a54262, 0x0235b062, 0x0a8bec10, 0xd24ef1c4
0x0c773143, 0xb7b80ab0, 0x3ba01970, 0xadc3d8eb


  Round 09
  ---------
Inside substw:
b0 = 0x0c, b1 = 0x77, b2 = 0x31, b3 = 0x43
s0 = 0xfe, s1 = 0xf5, s2 = 0xc7, s3 = 0x1a
res = 0xfef5c71a
Inside substw:
b0 = 0xb7, b1 = 0xb8, b2 = 0x0a, b3 = 0xb0
s0 = 0xa9, s1 = 0x6c, s2 = 0x67, s3 = 0xe7
res = 0xa96c67e7
Inside substw:
b0 = 0x3b, b1 = 0xa0, b2 = 0x19, b3 = 0x70
s0 = 0xe2, s1 = 0xe0, s2 = 0xd4, s3 = 0x51
res = 0xe2e0d451
Inside substw:
b0 = 0xad, b1 = 0xc3, b2 = 0xd8, b3 = 0xeb
s0 = 0x95, s1 = 0x2e, s2 = 0x61, s3 = 0xe9
res = 0x952e61e9
SubBytes block in and block out:
0x0c773143, 0xb7b80ab0, 0x3ba01970, 0xadc3d8eb
0xfef5c71a, 0xa96c67e7, 0xe2e0d451, 0x952e61e9

ShiftRows block in and block out:
0xfef5c71a, 0xa96c67e7, 0xe2e0d451, 0x952e61e9
0xfe6cd4e9, 0xa9e0611a, 0xe22ec7e7, 0x95f56751

MixColumns block in and block out:
0xfe6cd4e9, 0xa9e0611a, 0xe22ec7e7, 0x95f56751
0x6ea80168, 0x09cba555, 0x8d0b6b01, 0x039c5d94

AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0x6ea80168, 0x09cba555, 0x8d0b6b01, 0x039c5d94
0xc2df679b, 0x10317974, 0xa5da4240, 0x54c05dfa

  Final round.
Inside substw:
b0 = 0xc2, b1 = 0xdf, b2 = 0x67, b3 = 0x9b
s0 = 0x25, s1 = 0x9e, s2 = 0x85, s3 = 0x14
res = 0x259e8514
Inside substw:
b0 = 0x10, b1 = 0x31, b2 = 0x79, b3 = 0x74
s0 = 0xca, s1 = 0xc7, s2 = 0xb6, s3 = 0x92
res = 0xcac7b692
Inside substw:
b0 = 0xa5, b1 = 0xda, b2 = 0x42, b3 = 0x40
s0 = 0x06, s1 = 0x57, s2 = 0x2c, s3 = 0x09
res = 0x06572c09
Inside substw:
b0 = 0x54, b1 = 0xc0, b2 = 0x5d, b3 = 0xfa
s0 = 0x20, s1 = 0xba, s2 = 0x4c, s3 = 0x2d
res = 0x20ba4c2d
SubBytes block in and block out:
0xc2df679b, 0x10317974, 0xa5da4240, 0x54c05dfa
0x259e8514, 0xcac7b692, 0x06572c09, 0x20ba4c2d

ShiftRows block in and block out:
0x259e8514, 0xcac7b692, 0x06572c09, 0x20ba4c2d
0x25c72c2d, 0xca574c14, 0x06ba8592, 0x209eb609

AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0x25c72c2d, 0xca574c14, 0x06ba8592, 0x209eb609
0xf5d3d585, 0x03b9699d, 0xe785895a, 0x96fdbaaf

OK. Result matches expected.

Test 2 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x30c81c46, 0xa35ce411, 0xe5fbc119, 0x1a0a52ef
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x30c81c46, 0xa35ce411, 0xe5fbc119, 0x1a0a52ef
0x1bb60950, 0x8bf236b7, 0x4e0cd491, 0x13c51dd3


  Round 01
  ---------
Inside substw:
b0 = 0x1b, b1 = 0xb6, b2 = 0x09, b3 = 0x50
s0 = 0xaf, s1 = 0x4e, s2 = 0x01, s3 = 0x53
res = 0xaf4e0153
Inside substw:
b0 = 0x8b, b1 = 0xf2, b2 = 0x36, b3 = 0xb7
s0 = 0x3d, s1 = 0x89, s2 = 0x05, s3 = 0xa9
res = 0x3d8905a9
Inside substw:
b0 = 0x4e, b1 = 0x0c, b2 = 0xd4, b3 = 0x91
s0 = 0x2f, s1 = 0xfe, s2 = 0x48, s3 = 0x81
res = 0x2ffe4881
Inside substw:
b0 = 0x13, b1 = 0xc5, b2 = 0x1d, b3 = 0xd3
s0 = 0x7d, s1 = 0xa6, s2 = 0xa4, s3 = 0x66
res = 0x7da6a466
SubBytes block in and block out:
0x1bb60950, 0x8bf236b7, 0x4e0cd491, 0x13c51dd3
0xaf4e0153, 0x3d8905a9, 0x2ffe4881, 0x7da6a466

ShiftRows block in and block out:
0xaf4e0153, 0x3d8905a9, 0x2ffe4881, 0x7da6a466
0xaf894866, 0x3dfea453, 0x2fa601a9, 0x7d4e0581

MixColumns block in and block out:
0xaf894866, 0x3dfea453, 0x2fa601a9, 0x7d4e0581
0xeb181ce7, 0x947e65bb, 0x07d26b9f, 0xac6fa1d5

AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xeb181ce7, 0x947e65bb, 0x07d26b9f, 0xac6fa1d5
0x4be2e2f0, 0x1c2a490a, 0x247152a6, 0x8603d7d0


  Round 02
  ---------
Inside substw:
b0 = 0x4b, b1 = 0xe2, b2 = 0xe2, b3 = 0xf0
s0 = 0xb3, s1 = 0x98, s2 = 0x98, s3 = 0x8c
res = 0xb398988c
Inside substw:
b0 = 0x1c, b1 = 0x2a, b2 = 0x49, b3 = 0x0a
s0 = 0x9c, s1 = 0xe5, s2 = 0x3b, s3 = 0x67
res = 0x9ce53b67
Inside substw:
b0 = 0x24, b1 = 0x71, b2 = 0x52, b3 = 0xa6
s0 = 0x36, s1 = 0xa3, s2 = 0x00, s3 = 0x24
res = 0x36a30024
Inside substw:
b0 = 0x86, b1 = 0x03, b2 = 0xd7, b3 = 0xd0
s0 = 0x44, s1 = 0x7b, s2 = 0x0e, s3 = 0x70
res = 0x447b0e70
SubBytes block in and block out:
0x4be2e2f0, 0x1c2a490a, 0x247152a6, 0x8603d7d0
0xb398988c, 0x9ce53b67, 0x36a30024, 0x447b0e70

ShiftRows block in and block out:
0xb398988c, 0x9ce53b67, 0x36a30024, 0x447b0e70
0xb3e50070, 0x9ca30e8c, 0x367b9867, 0x44983b24

MixColumns block in and block out:
0xb3e50070, 0x9ca30e8c, 0x367b9867, 0x44983b24
0x3912c6cb, 0x5f5fac11, 0x1e14cf77, 0x2406c627

AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3912c6cb, 0x5f5fac11, 0x1e14cf77, 0x2406c627
0xcbd05339, 0x25c91552, 0x47214f0d, 0x575f3058


  Round 03
  ---------
Inside substw:
b0 = 0xcb, b1 = 0xd0, b2 = 0x53, b3 = 0x39
s0 = 0x1f, s1 = 0x70, s2 = 0xed, s3 = 0x12
res = 0x1f70ed12
Inside substw:
b0 = 0x25, b1 = 0xc9, b2 = 0x15, b3 = 0x52
s0 = 0x3f, s1 = 0xdd, s2 = 0x59, s3 = 0x00
res = 0x3fdd5900
Inside substw:
b0 = 0x47, b1 = 0x21, b2 = 0x4f, b3 = 0x0d
s0 = 0xa0, s1 = 0xfd, s2 = 0x84, s3 = 0xd7
res = 0xa0fd84d7
Inside substw:
b0 = 0x57, b1 = 0x5f, b2 = 0x30, b3 = 0x58
s0 = 0x5b, s1 = 0xcf, s2 = 0x04, s3 = 0x6a
res = 0x5bcf046a
SubBytes block in and block out:
0xcbd05339, 0x25c91552, 0x47214f0d, 0x575f3058
0x1f70ed12, 0x3fdd5900, 0xa0fd84d7, 0x5bcf046a

ShiftRows block in and block out:
0x1f70ed12, 0x3fdd5900, 0xa0fd84d7, 0x5bcf046a
0x1fdd846a, 0x3ffd0412, 0xa0cfed00, 0x5b7059d7

MixColumns block in and block out:
0x1fdd846a, 0x3ffd0412, 0xa0cfed00, 0x5b7059d7
0xac436fac, 0x74c0fc9c, 0xfc09aed9, 0xa887fb71

AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xac436fac, 0x74c0fc9c, 0xfc09aed9, 0xa887fb71
0x91c328d1, 0x33d602a2, 0xe22ad09d, 0xc5fd734a


  Round 04
  ---------
Inside substw:
b0 = 0x91, b1 = 0xc3, b2 = 0x28, b3 = 0xd1
s0 = 0x81, s1 = 0x2e, s2 = 0x34, s3 = 0x3e
res = 0x812e343e
Inside substw:
b0 = 0x33, b1 = 0xd6, b2 = 0x02, b3 = 0xa2
s0 = 0xc3, s1 = 0xf6, s2 = 0x77, s3 = 0x3a
res = 0xc3f6773a
Inside substw:
b0 = 0xe2, b1 = 0x2a, b2 = 0xd0, b3 = 0x9d
s0 = 0x98, s1 = 0xe5, s2 = 0x70, s3 = 0x5e
res = 0x98e5705e
Inside substw:
b0 = 0xc5, b1 = 0xfd, b2 = 0x73, b3 = 0x4a
s0 = 0xa6, s1 = 0x54, s2 = 0x8f, s3 = 0xd6
res = 0xa6548fd6
SubBytes block in and block out:
0x91c328d1, 0x33d602a2, 0xe22ad09d, 0xc5fd734a
0x812e343e, 0xc3f6773a, 0x98e5705e, 0xa6548fd6

ShiftRows block in and block out:
0x812e343e, 0xc3f6773a, 0x98e5705e, 0xa6548fd6
0x81f670d6, 0xc3e58f3e, 0x9854343a, 0xa62e775e

MixColumns block in and block out:
0x81f670d6, 0xc3e58f3e, 0x9854343a, 0xa62e775e
0xbe30f6a9, 0x18a66148, 0xd956eaa7, 0x0c3d8414

AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xbe30f6a9, 0x18a66148, 0xd956eaa7, 0x0c3d8414
0x517453e8, 0xb0f43a37, 0x6f27cf9c, 0xd7362914


  Round 05
  ---------
Inside substw:
b0 = 0x51, b1 = 0x74, b2 = 0x53, b3 = 0xe8
s0 = 0xd1, s1 = 0x92, s2 = 0xed, s3 = 0x9b
res = 0xd192ed9b
Inside substw:
b0 = 0xb0, b1 = 0xf4, b2 = 0x3a, b3 = 0x37
s0 = 0xe7, s1 = 0xbf, s2 = 0x80, s3 = 0x9a
res = 0xe7bf809a
Inside substw:
b0 = 0x6f, b1 = 0x27, b2 = 0xcf, b3 = 0x9c
s0 = 0xa8, s1 = 0xcc, s2 = 0x8a, s3 = 0xde
res = 0xa8cc8ade
Inside substw:
b0 = 0xd7, b1 = 0x36, b2 = 0x29, b3 = 0x14
s0 = 0x0e, s1 = 0x05, s2 = 0xa5, s3 = 0xfa
res = 0x0e05a5fa
SubBytes block in and block out:
0x517453e8, 0xb0f43a37, 0x6f27cf9c, 0xd7362914
0xd192ed9b, 0xe7bf809a, 0xa8cc8ade, 0x0e05a5fa

ShiftRows block in and block out:
0xd192ed9b, 0xe7bf809a, 0xa8cc8ade, 0x0e05a5fa
0xd1bf8afa, 0xe7cca59b, 0xa805ed9a, 0x0e9280de

MixColumns block in and block out:
0xd1bf8afa, 0xe7cca59b, 0xa805ed9a, 0x0e9280de
0x13cb74b2, 0xa40bcc76, 0x3314d924, 0xef74fea7

AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x13cb74b2, 0xa40bcc76, 0x3314d924, 0xef74fea7
0xc71ab24a, 0xd88851f1, 0xf9e66198, 0xfe8deb1b


  Round 06
  ---------
Inside substw:
b0 = 0xc7, b1 = 0x1a, b2 = 0xb2, b3 = 0x4a
s0 = 0xc6, s1 = 0xa2, s2 = 0x37, s3 = 0xd6
res = 0xc6a237d6
Inside substw:
b0 = 0xd8, b1 = 0x88, b2 = 0x51, b3 = 0xf1
s0 = 0x61, s1 = 0xc4, s2 = 0xd1, s3 = 0xa1
res = 0x61c4d1a1
Inside substw:
b0 = 0xf9, b1 = 0xe6, b2 = 0x61, b3 = 0x98
s0 = 0x99, s1 = 0x8e, s2 = 0xef, s3 = 0x46
res = 0x998eef46
Inside substw:
b0 = 0xfe, b1 = 0x8d, b2 = 0xeb, b3 = 0x1b
s0 = 0xbb, s1 = 0x5d, s2 = 0xe9, s3 = 0xaf
res = 0xbb5de9af
SubBytes block in and block out:
0xc71ab24a, 0xd88851f1, 0xf9e66198, 0xfe8deb1b
0xc6a237d6, 0x61c4d1a1, 0x998eef46, 0xbb5de9af

ShiftRows block in and block out:
0xc6a237d6, 0x61c4d1a1, 0x998eef46, 0xbb5de9af
0xc6c4efaf, 0x618ee9d6, 0x995d37a1, 0xbba2d146

MixColumns block in and block out:
0xc6c4efaf, 0x618ee9d6, 0x995d37a1, 0xbba2d146
0x80d02d3f, 0x74904773, 0x58db5283, 0x07ca6a29

AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x80d02d3f, 0x74904773, 0x58db5283, 0x07ca6a29
0xed588e45, 0x659b798e, 0x8322d4c2, 0xcdcaf9d4


  Round 07
  ---------
Inside substw:
b0 = 0xed, b1 = 0x58, b2 = 0x8e, b3 = 0x45
s0 = 0x55, s1 = 0x6a, s2 = 0x19, s3 = 0x6e
res = 0x556a196e
Inside substw:
b0 = 0x65, b1 = 0x9b, b2 = 0x79, b3 = 0x8e
s0 = 0x4d, s1 = 0x14, s2 = 0xb6, s3 = 0x19
res = 0x4d14b619
Inside substw:
b0 = 0x83, b1 = 0x22, b2 = 0xd4, b3 = 0xc2
s0 = 0xec, s1 = 0x93, s2 = 0x48, s3 = 0x25
res = 0xec934825
Inside substw:
b0 = 0xcd, b1 = 0xca, b2 = 0xf9, b3 = 0xd4
s0 = 0xbd, s1 = 0x74, s2 = 0x99, s3 = 0x48
res = 0xbd749948
SubBytes block in and block out:
0xed588e45, 0x659b798e, 0x8322d4c2, 0xcdcaf9d4
0x556a196e, 0x4d14b619, 0xec934825, 0xbd749948

ShiftRows block in and block out:
0x556a196e, 0x4d14b619, 0xec934825, 0xbd749948
0x55144848, 0x4d93996e, 0xec741919, 0xbd6ab625

MixColumns block in and block out:
0x55144848, 0x4d93996e, 0xec741919, 0xbd6ab625
0x96ed0933, 0xc3ae4501, 0x5f368170, 0x4c8dcf4a

AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0x96ed0933, 0xc3ae4501, 0x5f368170, 0x4c8dcf4a
0xd8b9fe3d, 0x9cf18cf2, 0xdb90cec2, 0x022b1305


  Round 08
  ---------
Inside substw:
b0 = 0xd8, b1 = 0xb9, b2 = 0xfe, b3 = 0x3d
s0 = 0x61, s1 = 0x56, s2 = 0xbb, s3 = 0x27
res = 0x6156bb27
Inside substw:
b0 = 0x9c, b1 = 0xf1, b2 = 0x8c, b3 = 0xf2
s0 = 0xde, s1 = 0xa1, s2 = 0x64, s3 = 0x89
res = 0xdea16489
Inside substw:
b0 = 0xdb, b1 = 0x90, b2 = 0xce, b3 = 0xc2
s0 = 0xb9, s1 = 0x60, s2 = 0x8b, s3 = 0x25
res = 0xb9608b25
Inside substw:
b0 = 0x02, b1 = 0x2b, b2 = 0x13, b3 = 0x05
s0 = 0x77, s1 = 0xf1, s2 = 0x7d, s3 = 0x6b
res = 0x77f17d6b
SubBytes block in and block out:
0xd8b9fe3d, 0x9cf18cf2, 0xdb90cec2, 0x022b1305
0x6156bb27, 0xdea16489, 0xb9608b25, 0x77f17d6b

ShiftRows block in and block out:
0x6156bb27, 0xdea16489, 0xb9608b25, 0x77f17d6b
0x61a18b6b, 0xde607d27, 0xb9f1bb89, 0x77566425

MixColumns block in and block out:
0x61a18b6b, 0xde607d27, 0xb9f1bb89, 0x77566425
0xdad5705f, 0x5dbe2d2a, 0x531fa593, 0x555286e1

AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xdad5705f, 0x5dbe2d2a, 0x531fa593, 0x555286e1
0x3007037e, 0xe83397f8, 0x623450f3, 0x2adfafce


  Round 09
  ---------
Inside substw:
b0 = 0x30, b1 = 0x07, b2 = 0x03, b3 = 0x7e
s0 = 0x04, s1 = 0xc5, s2 = 0x7b, s3 = 0xf3
res = 0x04c57bf3
Inside substw:
b0 = 0xe8, b1 = 0x33, b2 = 0x97, b3 = 0xf8
s0 = 0x9b, s1 = 0xc3, s2 = 0x88, s3 = 0x41
res = 0x9bc38841
Inside substw:
b0 = 0x62, b1 = 0x34, b2 = 0x50, b3 = 0xf3
s0 = 0xaa, s1 = 0x18, s2 = 0x53, s3 = 0x0d
res = 0xaa18530d
Inside substw:
b0 = 0x2a, b1 = 0xdf, b2 = 0xaf, b3 = 0xce
s0 = 0xe5, s1 = 0x9e, s2 = 0x79, s3 = 0x8b
res = 0xe59e798b
SubBytes block in and block out:
0x3007037e, 0xe83397f8, 0x623450f3, 0x2adfafce
0x04c57bf3, 0x9bc38841, 0xaa18530d, 0xe59e798b

ShiftRows block in and block out:
0x04c57bf3, 0x9bc38841, 0xaa18530d, 0xe59e798b
0x04c3538b, 0x9b1879f3, 0xaa9e7b41, 0xe5c5880d

MixColumns block in and block out:
0x04c3538b, 0x9b1879f3, 0xaa9e7b41, 0xe5c5880d
0x8ee7e791, 0x8fd37f2a, 0xcc410182, 0x00fa3c63

AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0x8ee7e791, 0x8fd37f2a, 0xcc410182, 0x00fa3c63
0x22908162, 0x9629a30b, 0xe49028c3, 0x57a63c0d

  Final round.
Inside substw:
b0 = 0x22, b1 = 0x90, b2 = 0x81, b3 = 0x62
s0 = 0x93, s1 = 0x60, s2 = 0x0c, s3 = 0xaa
res = 0x93600caa
Inside substw:
b0 = 0x96, b1 = 0x29, b2 = 0xa3, b3 = 0x0b
s0 = 0x90, s1 = 0xa5, s2 = 0x0a, s3 = 0x2b
res = 0x90a50a2b
Inside substw:
b0 = 0xe4, b1 = 0x90, b2 = 0x28, b3 = 0xc3
s0 = 0x69, s1 = 0x60, s2 = 0x34, s3 = 0x2e
res = 0x6960342e
Inside substw:
b0 = 0x57, b1 = 0xa6, b2 = 0x3c, b3 = 0x0d
s0 = 0x5b, s1 = 0x24, s2 = 0xeb, s3 = 0xd7
res = 0x5b24ebd7
SubBytes block in and block out:
0x22908162, 0x9629a30b, 0xe49028c3, 0x57a63c0d
0x93600caa, 0x90a50a2b, 0x6960342e, 0x5b24ebd7

ShiftRows block in and block out:
0x93600caa, 0x90a50a2b, 0x6960342e, 0x5b24ebd7
0x93a534d7, 0x9060ebaa, 0x69240c2b, 0x5b600a2e

AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0x93a534d7, 0x9060ebaa, 0x69240c2b, 0x5b600a2e
0x43b1cd7f, 0x598ece23, 0x881b00e3, 0xed030688

OK. Result matches expected.

Test 3 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xf69f2445, 0xdf4f9b17, 0xad2b417b, 0xe66c3710
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xf69f2445, 0xdf4f9b17, 0xad2b417b, 0xe66c3710
0xdde13153, 0xf7e149b1, 0x06dc54f3, 0xefa3782c


  Round 01
  ---------
Inside substw:
b0 = 0xdd, b1 = 0xe1, b2 = 0x31, b3 = 0x53
s0 = 0xc1, s1 = 0xf8, s2 = 0xc7, s3 = 0xed
res = 0xc1f8c7ed
Inside substw:
b0 = 0xf7, b1 = 0xe1, b2 = 0x49, b3 = 0xb1
s0 = 0x68, s1 = 0xf8, s2 = 0x3b, s3 = 0xc8
res = 0x68f83bc8
Inside substw:
b0 = 0x06, b1 = 0xdc, b2 = 0x54, b3 = 0xf3
s0 = 0x6f, s1 = 0x86, s2 = 0x20, s3 = 0x0d
res = 0x6f86200d
Inside substw:
b0 = 0xef, b1 = 0xa3, b2 = 0x78, b3 = 0x2c
s0 = 0xdf, s1 = 0x0a, s2 = 0xbc, s3 = 0x71
res = 0xdf0abc71
SubBytes block in and block out:
0xdde13153, 0xf7e149b1, 0x06dc54f3, 0xefa3782c
0xc1f8c7ed, 0x68f83bc8, 0x6f86200d, 0xdf0abc71

ShiftRows block in and block out:
0xc1f8c7ed, 0x68f83bc8, 0x6f86200d, 0xdf0abc71
0xc1f82071, 0x6886bced, 0x6f0ac7c8, 0xdff83b0d

MixColumns block in and block out:
0xc1f82071, 0x6886bced, 0x6f0ac7c8, 0xdff83b0d
0xdb3bea62, 0x104da143, 0xcfe1b3f7, 0x807446a3

AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xdb3bea62, 0x104da143, 0xcfe1b3f7, 0x807446a3
0x7bc11475, 0x98198df2, 0xec428ace, 0xaa1830a6


  Round 02
  ---------
Inside substw:
b0 = 0x7b, b1 = 0xc1, b2 = 0x14, b3 = 0x75
s0 = 0x21, s1 = 0x78, s2 = 0xfa, s3 = 0x9d
res = 0x2178fa9d
Inside substw:
b0 = 0x98, b1 = 0x19, b2 = 0x8d, b3 = 0xf2
s0 = 0x46, s1 = 0xd4, s2 = 0x5d, s3 = 0x89
res = 0x46d45d89
Inside substw:
b0 = 0xec, b1 = 0x42, b2 = 0x8a, b3 = 0xce
s0 = 0xce, s1 = 0x2c, s2 = 0x7e, s3 = 0x8b
res = 0xce2c7e8b
Inside substw:
b0 = 0xaa, b1 = 0x18, b2 = 0x30, b3 = 0xa6
s0 = 0xac, s1 = 0xad, s2 = 0x04, s3 = 0x24
res = 0xacad0424
SubBytes block in and block out:
0x7bc11475, 0x98198df2, 0xec428ace, 0xaa1830a6
0x2178fa9d, 0x46d45d89, 0xce2c7e8b, 0xacad0424

ShiftRows block in and block out:
0x2178fa9d, 0x46d45d89, 0xce2c7e8b, 0xacad0424
0x21d47e24, 0x462c049d, 0xceadfa89, 0xac785d8b

MixColumns block in and block out:
0x21d47e24, 0x462c049d, 0xceadfa89, 0xac785d8b
0x7f346581, 0x618fdec3, 0x18130c17, 0x1d30e8c7

AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x7f346581, 0x618fdec3, 0x18130c17, 0x1d30e8c7
0x8df6f073, 0x1b196780, 0x41268c6d, 0x6e691eb8


  Round 03
  ---------
Inside substw:
b0 = 0x8d, b1 = 0xf6, b2 = 0xf0, b3 = 0x73
s0 = 0x5d, s1 = 0x42, s2 = 0x8c, s3 = 0x8f
res = 0x5d428c8f
Inside substw:
b0 = 0x1b, b1 = 0x19, b2 = 0x67, b3 = 0x80
s0 = 0xaf, s1 = 0xd4, s2 = 0x85, s3 = 0xcd
res = 0xafd485cd
Inside substw:
b0 = 0x41, b1 = 0x26, b2 = 0x8c, b3 = 0x6d
s0 = 0x83, s1 = 0xf7, s2 = 0x64, s3 = 0x3c
res = 0x83f7643c
Inside substw:
b0 = 0x6e, b1 = 0x69, b2 = 0x1e, b3 = 0xb8
s0 = 0x9f, s1 = 0xf9, s2 = 0x72, s3 = 0x6c
res = 0x9ff9726c
SubBytes block in and block out:
0x8df6f073, 0x1b196780, 0x41268c6d, 0x6e691eb8
0x5d428c8f, 0xafd485cd, 0x83f7643c, 0x9ff9726c

ShiftRows block in and block out:
0x5d428c8f, 0xafd485cd, 0x83f7643c, 0x9ff9726c
0x5dd4646c, 0xaff7728f, 0x83f98ccd, 0x9f42853c

MixColumns block in and block out:
0x5dd4646c, 0xaff7728f, 0x83f98ccd, 0x9f42853c
0xd52ef58f, 0xba43366a, 0x4c28356a, 0x5ab38805

AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xd52ef58f, 0xba43366a, 0x4c28356a, 0x5ab38805
0xe8aeb2f2, 0xfd55c854, 0x520b4b2e, 0x37c9003e


  Round 04
  ---------
Inside substw:
b0 = 0xe8, b1 = 0xae, b2 = 0xb2, b3 = 0xf2
s0 = 0x9b, s1 = 0xe4, s2 = 0x37, s3 = 0x89
res = 0x9be43789
Inside substw:
b0 = 0xfd, b1 = 0x55, b2 = 0xc8, b3 = 0x54
s0 = 0x54, s1 = 0xfc, s2 = 0xe8, s3 = 0x20
res = 0x54fce820
Inside substw:
b0 = 0x52, b1 = 0x0b, b2 = 0x4b, b3 = 0x2e
s0 = 0x00, s1 = 0x2b, s2 = 0xb3, s3 = 0x31
res = 0x002bb331
Inside substw:
b0 = 0x37, b1 = 0xc9, b2 = 0x00, b3 = 0x3e
s0 = 0x9a, s1 = 0xdd, s2 = 0x63, s3 = 0xb2
res = 0x9add63b2
SubBytes block in and block out:
0xe8aeb2f2, 0xfd55c854, 0x520b4b2e, 0x37c9003e
0x9be43789, 0x54fce820, 0x002bb331, 0x9add63b2

ShiftRows block in and block out:
0x9be43789, 0x54fce820, 0x002bb331, 0x9add63b2
0x9bfcb3b2, 0x542b6389, 0x00dd3720, 0x9ae4e831

MixColumns block in and block out:
0x9bfcb3b2, 0x542b6389, 0x00dd3720, 0x9ae4e831
0x3304d786, 0x3f2e39bd, 0x6bd8d3aa, 0xc15be6db

AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0x3304d786, 0x3f2e39bd, 0x6bd8d3aa, 0xc15be6db
0xdc4072c7, 0x977c62c2, 0xdda9f691, 0x1a504bdb


  Round 05
  ---------
Inside substw:
b0 = 0xdc, b1 = 0x40, b2 = 0x72, b3 = 0xc7
s0 = 0x86, s1 = 0x09, s2 = 0x40, s3 = 0xc6
res = 0x860940c6
Inside substw:
b0 = 0x97, b1 = 0x7c, b2 = 0x62, b3 = 0xc2
s0 = 0x88, s1 = 0x10, s2 = 0xaa, s3 = 0x25
res = 0x8810aa25
Inside substw:
b0 = 0xdd, b1 = 0xa9, b2 = 0xf6, b3 = 0x91
s0 = 0xc1, s1 = 0xd3, s2 = 0x42, s3 = 0x81
res = 0xc1d34281
Inside substw:
b0 = 0x1a, b1 = 0x50, b2 = 0x4b, b3 = 0xdb
s0 = 0xa2, s1 = 0x53, s2 = 0xb3, s3 = 0xb9
res = 0xa253b3b9
SubBytes block in and block out:
0xdc4072c7, 0x977c62c2, 0xdda9f691, 0x1a504bdb
0x860940c6, 0x8810aa25, 0xc1d34281, 0xa253b3b9

ShiftRows block in and block out:
0x860940c6, 0x8810aa25, 0xc1d34281, 0xa253b3b9
0x861042b9, 0x88d3b3c6, 0xc1534025, 0xa209aa81

MixColumns block in and block out:
0x861042b9, 0x88d3b3c6, 0xc1534025, 0xa209aa81
0xdcd9c2aa, 0x103d7774, 0x09827d01, 0x6fd47c47

AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0xdcd9c2aa, 0x103d7774, 0x09827d01, 0x6fd47c47
0x08080452, 0x6cbeeaf3, 0xc370c5bd, 0x7e2d69fb


  Round 06
  ---------
Inside substw:
b0 = 0x08, b1 = 0x08, b2 = 0x04, b3 = 0x52
s0 = 0x30, s1 = 0x30, s2 = 0xf2, s3 = 0x00
res = 0x3030f200
Inside substw:
b0 = 0x6c, b1 = 0xbe, b2 = 0xea, b3 = 0xf3
s0 = 0x50, s1 = 0xae, s2 = 0x87, s3 = 0x0d
res = 0x50ae870d
Inside substw:
b0 = 0xc3, b1 = 0x70, b2 = 0xc5, b3 = 0xbd
s0 = 0x2e, s1 = 0x51, s2 = 0xa6, s3 = 0x7a
res = 0x2e51a67a
Inside substw:
b0 = 0x7e, b1 = 0x2d, b2 = 0x69, b3 = 0xfb
s0 = 0xf3, s1 = 0xd8, s2 = 0xf9, s3 = 0x0f
res = 0xf3d8f90f
SubBytes block in and block out:
0x08080452, 0x6cbeeaf3, 0xc370c5bd, 0x7e2d69fb
0x3030f200, 0x50ae870d, 0x2e51a67a, 0xf3d8f90f

ShiftRows block in and block out:
0x3030f200, 0x50ae870d, 0x2e51a67a, 0xf3d8f90f
0x30aea60f, 0x5051f900, 0x2ed8f20d, 0xf330877a

MixColumns block in and block out:
0x30aea60f, 0x5051f900, 0x2ed8f20d, 0xf330877a
0x2089d846, 0xaae2e858, 0xd0851e42, 0x507b584d

AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x2089d846, 0xaae2e858, 0xd0851e42, 0x507b584d
0x4d017b3c, 0xbbe9d6a5, 0x0b7c9803, 0x9a7bcbb0


  Round 07
  ---------
Inside substw:
b0 = 0x4d, b1 = 0x01, b2 = 0x7b, b3 = 0x3c
s0 = 0xe3, s1 = 0x7c, s2 = 0x21, s3 = 0xeb
res = 0xe37c21eb
Inside substw:
b0 = 0xbb, b1 = 0xe9, b2 = 0xd6, b3 = 0xa5
s0 = 0xea, s1 = 0x1e, s2 = 0xf6, s3 = 0x06
res = 0xea1ef606
Inside substw:
b0 = 0x0b, b1 = 0x7c, b2 = 0x98, b3 = 0x03
s0 = 0x2b, s1 = 0x10, s2 = 0x46, s3 = 0x7b
res = 0x2b10467b
Inside substw:
b0 = 0x9a, b1 = 0x7b, b2 = 0xcb, b3 = 0xb0
s0 = 0xb8, s1 = 0x21, s2 = 0x1f, s3 = 0xe7
res = 0xb8211fe7
SubBytes block in and block out:
0x4d017b3c, 0xbbe9d6a5, 0x0b7c9803, 0x9a7bcbb0
0xe37c21eb, 0xea1ef606, 0x2b10467b, 0xb8211fe7

ShiftRows block in and block out:
0xe37c21eb, 0xea1ef606, 0x2b10467b, 0xb8211fe7
0xe31e46e7, 0xea101feb, 0x2b212106, 0xb87cf67b

MixColumns block in and block out:
0xe31e46e7, 0xea101feb, 0x2b212106, 0xb87cf67b
0x5ef243b3, 0x0b00e2e7, 0x120c4271, 0x623abeaf

AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0x5ef243b3, 0x0b00e2e7, 0x120c4271, 0x623abeaf
0x10a6b4bd, 0x545f2b14, 0x96aa0dc3, 0x2c9c62e0


  Round 08
  ---------
Inside substw:
b0 = 0x10, b1 = 0xa6, b2 = 0xb4, b3 = 0xbd
s0 = 0xca, s1 = 0x24, s2 = 0x8d, s3 = 0x7a
res = 0xca248d7a
Inside substw:
b0 = 0x54, b1 = 0x5f, b2 = 0x2b, b3 = 0x14
s0 = 0x20, s1 = 0xcf, s2 = 0xf1, s3 = 0xfa
res = 0x20cff1fa
Inside substw:
b0 = 0x96, b1 = 0xaa, b2 = 0x0d, b3 = 0xc3
s0 = 0x90, s1 = 0xac, s2 = 0xd7, s3 = 0x2e
res = 0x90acd72e
Inside substw:
b0 = 0x2c, b1 = 0x9c, b2 = 0x62, b3 = 0xe0
s0 = 0x71, s1 = 0xde, s2 = 0xaa, s3 = 0xe1
res = 0x71deaae1
SubBytes block in and block out:
0x10a6b4bd, 0x545f2b14, 0x96aa0dc3, 0x2c9c62e0
0xca248d7a, 0x20cff1fa, 0x90acd72e, 0x71deaae1

ShiftRows block in and block out:
0xca248d7a, 0x20cff1fa, 0x90acd72e, 0x71deaae1
0xcacfd7e1, 0x20acaa7a, 0x90de8dfa, 0x7124f12e

MixColumns block in and block out:
0xcacfd7e1, 0x20acaa7a, 0x90de8dfa, 0x7124f12e
0xf3cc8884, 0x7ffc4d92, 0x35415a17, 0x511fde1a

AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xf3cc8884, 0x7ffc4d92, 0x35415a17, 0x511fde1a
0x191efba5, 0xca71f740, 0x046aaf77, 0x2e92f735


  Round 09
  ---------
Inside substw:
b0 = 0x19, b1 = 0x1e, b2 = 0xfb, b3 = 0xa5
s0 = 0xd4, s1 = 0x72, s2 = 0x0f, s3 = 0x06
res = 0xd4720f06
Inside substw:
b0 = 0xca, b1 = 0x71, b2 = 0xf7, b3 = 0x40
s0 = 0x74, s1 = 0xa3, s2 = 0x68, s3 = 0x09
res = 0x74a36809
Inside substw:
b0 = 0x04, b1 = 0x6a, b2 = 0xaf, b3 = 0x77
s0 = 0xf2, s1 = 0x02, s2 = 0x79, s3 = 0xf5
res = 0xf20279f5
Inside substw:
b0 = 0x2e, b1 = 0x92, b2 = 0xf7, b3 = 0x35
s0 = 0x31, s1 = 0x4f, s2 = 0x68, s3 = 0x96
res = 0x314f6896
SubBytes block in and block out:
0x191efba5, 0xca71f740, 0x046aaf77, 0x2e92f735
0xd4720f06, 0x74a36809, 0xf20279f5, 0x314f6896

ShiftRows block in and block out:
0xd4720f06, 0x74a36809, 0xf20279f5, 0x314f6896
0xd4a37996, 0x74026806, 0xf24f0f09, 0x317268f5

MixColumns block in and block out:
0xd4a37996, 0x74026806, 0xf24f0f09, 0x317268f5
0xa294248a, 0x80ceacfa, 0x2874b85f, 0x699897b8

AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xa294248a, 0x80ceacfa, 0x2874b85f, 0x699897b8
0x0ee34279, 0x993470db, 0x00a5911e, 0x3ec497d6

  Final round.
Inside substw:
b0 = 0x0e, b1 = 0xe3, b2 = 0x42, b3 = 0x79
s0 = 0xab, s1 = 0x11, s2 = 0x2c, s3 = 0xb6
res = 0xab112cb6
Inside substw:
b0 = 0x99, b1 = 0x34, b2 = 0x70, b3 = 0xdb
s0 = 0xee, s1 = 0x18, s2 = 0x51, s3 = 0xb9
res = 0xee1851b9
Inside substw:
b0 = 0x00, b1 = 0xa5, b2 = 0x91, b3 = 0x1e
s0 = 0x63, s1 = 0x06, s2 = 0x81, s3 = 0x72
res = 0x63068172
Inside substw:
b0 = 0x3e, b1 = 0xc4, b2 = 0x97, b3 = 0xd6
s0 = 0xb2, s1 = 0x1c, s2 = 0x88, s3 = 0xf6
res = 0xb21c88f6
SubBytes block in and block out:
0x0ee34279, 0x993470db, 0x00a5911e, 0x3ec497d6
0xab112cb6, 0xee1851b9, 0x63068172, 0xb21c88f6

ShiftRows block in and block out:
0xab112cb6, 0xee1851b9, 0x63068172, 0xb21c88f6
0xab1881f6, 0xee0688b6, 0x631c2cb9, 0xb2115172

AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0xab1881f6, 0xee0688b6, 0x631c2cb9, 0xb2115172
0x7b0c785e, 0x27e8ad3f, 0x82232071, 0x04725dd4

OK. Result matches expected.

Test 0 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x6bc1bee2, 0x2e409f96, 0xe93d7e11, 0x7393172a
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x6bc1bee2, 0x2e409f96, 0xe93d7e11, 0x7393172a
0x0bfc55f2, 0x3b8aee28, 0xc24ed0e1, 0xf6ee60ab


  Round 01
  ---------
Inside substw:
b0 = 0x0b, b1 = 0xfc, b2 = 0x55, b3 = 0xf2
s0 = 0x2b, s1 = 0xb0, s2 = 0xfc, s3 = 0x89
res = 0x2bb0fc89
Inside substw:
b0 = 0x3b, b1 = 0x8a, b2 = 0xee, b3 = 0x28
s0 = 0xe2, s1 = 0x7e, s2 = 0x28, s3 = 0x34
res = 0xe27e2834
Inside substw:
b0 = 0xc2, b1 = 0x4e, b2 = 0xd0, b3 = 0xe1
s0 = 0x25, s1 = 0x2f, s2 = 0x70, s3 = 0xf8
res = 0x252f70f8
Inside substw:
b0 = 0xf6, b1 = 0xee, b2 = 0x60, b3 = 0xab
s0 = 0x42, s1 = 0x28, s2 = 0xd0, s3 = 0x62
res = 0x4228d062
SubBytes block in and block out:
0x0bfc55f2, 0x3b8aee28, 0xc24ed0e1, 0xf6ee60ab
0x2bb0fc89, 0xe27e2834, 0x252f70f8, 0x4228d062

ShiftRows block in and block out:
0x2bb0fc89, 0xe27e2834, 0x252f70f8, 0x4228d062
0x2b7e7062, 0xe22fd089, 0x2528fc34, 0x42b028f8

MixColumns block in and block out:
0x2b7e7062, 0xe22fd089, 0x2528fc34, 0x42b028f8
0xc62513b7, 0xf75ef6cb, 0xfa5eb2d3, 0x9fb9b1b5

AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xc62513b7, 0xf75ef6cb, 0xfa5eb2d3, 0x9fb9b1b5
0xd9103fb0, 0xcc3ffe1c, 0xd7c6a270, 0x96ad6e41


  Round 02
  ---------
Inside substw:
b0 = 0xd9, b1 = 0x10, b2 = 0x3f, b3 = 0xb0
s0 = 0x35, s1 = 0xca, s2 = 0x75, s3 = 0xe7
res = 0x35ca75e7
Inside substw:
b0 = 0xcc, b1 = 0x3f, b2 = 0xfe, b3 = 0x1c
s0 = 0x4b, s1 = 0x75, s2 = 0xbb, s3 = 0x9c
res = 0x4b75bb9c
Inside substw:
b0 = 0xd7, b1 = 0xc6, b2 = 0xa2, b3 = 0x70
s0 = 0x0e, s1 = 0xb4, s2 = 0x3a, s3 = 0x51
res = 0x0eb43a51
Inside substw:
b0 = 0x96, b1 = 0xad, b2 = 0x6e, b3 = 0x41
s0 = 0x90, s1 = 0x95, s2 = 0x9f, s3 = 0x83
res = 0x90959f83
SubBytes block in and block out:
0xd9103fb0, 0xcc3ffe1c, 0xd7c6a270, 0x96ad6e41
0x35ca75e7, 0x4b75bb9c, 0x0eb43a51, 0x90959f83

ShiftRows block in and block out:
0x35ca75e7, 0x4b75bb9c, 0x0eb43a51, 0x90959f83
0x35753a83, 0x4bb49fe7, 0x0e95759c, 0x90cabb51

MixColumns block in and block out:
0x35753a83, 0x4bb49fe7, 0x0e95759c, 0x90cabb51
0x4c12aa0d, 0x2965e823, 0x513cced1, 0x9498c478

AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0x4c12aa0d, 0x2965e823, 0x513cced1, 0x9498c478
0xd7b1fe1c, 0xa70ccd8c, 0xf426458e, 0xb4ff38a6


  Round 03
  ---------
Inside substw:
b0 = 0xd7, b1 = 0xb1, b2 = 0xfe, b3 = 0x1c
s0 = 0x0e, s1 = 0xc8, s2 = 0xbb, s3 = 0x9c
res = 0x0ec8bb9c
Inside substw:
b0 = 0xa7, b1 = 0x0c, b2 = 0xcd, b3 = 0x8c
s0 = 0x5c, s1 = 0xfe, s2 = 0xbd, s3 = 0x64
res = 0x5cfebd64
Inside substw:
b0 = 0xf4, b1 = 0x26, b2 = 0x45, b3 = 0x8e
s0 = 0xbf, s1 = 0xf7, s2 = 0x6e, s3 = 0x19
res = 0xbff76e19
Inside substw:
b0 = 0xb4, b1 = 0xff, b2 = 0x38, b3 = 0xa6
s0 = 0x8d, s1 = 0x16, s2 = 0x07, s3 = 0x24
res = 0x8d160724
SubBytes block in and block out:
0xd7b1fe1c, 0xa70ccd8c, 0xf426458e, 0xb4ff38a6
0x0ec8bb9c, 0x5cfebd64, 0xbff76e19, 0x8d160724

ShiftRows block in and block out:
0x0ec8bb9c, 0x5cfebd64, 0xbff76e19, 0x8d160724
0x0efe6e24, 0x5cf7079c, 0xbf16bb64, 0x8dc8bd19

MixColumns block in and block out:
0x0efe6e24, 0x5cf7079c, 0xbf16bb64, 0x8dc8bd19
0x4f7f40ca, 0x213c1a37, 0x802168bf, 0xe6c30fcb

AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0x4f7f40ca, 0x213c1a37, 0x802168bf, 0xe6c30fcb
0xe7cfdcd0, 0xb2ed8efa, 0x3e68ecd1, 0x519e5451


  Round 04
  ---------
Inside substw:
b0 = 0xe7, b1 = 0xcf, b2 = 0xdc, b3 = 0xd0
s0 = 0x94, s1 = 0x8a, s2 = 0x86, s3 = 0x70
res = 0x948a8670
Inside substw:
b0 = 0xb2, b1 = 0xed, b2 = 0x8e, b3 = 0xfa
s0 = 0x37, s1 = 0x55, s2 = 0x19, s3 = 0x2d
res = 0x3755192d
Inside substw:
b0 = 0x3e, b1 = 0x68, b2 = 0xec, b3 = 0xd1
s0 = 0xb2, s1 = 0x45, s2 = 0xce, s3 = 0x3e
res = 0xb245ce3e
Inside substw:
b0 = 0x51, b1 = 0x9e, b2 = 0x54, b3 = 0x51
s0 = 0xd1, s1 = 0x0b, s2 = 0x20, s3 = 0xd1
res = 0xd10b20d1
SubBytes block in and block out:
0xe7cfdcd0, 0xb2ed8efa, 0x3e68ecd1, 0x519e5451
0x948a8670, 0x3755192d, 0xb245ce3e, 0xd10b20d1

ShiftRows block in and block out:
0x948a8670, 0x3755192d, 0xb245ce3e, 0xd10b20d1
0x9455ced1, 0x37452070, 0xb20b862d, 0xd18a193e

MixColumns block in and block out:
0x9455ced1, 0x37452070, 0xb20b862d, 0xd18a193e
0xd3a62e85, 0xf1ada2dc, 0xc918d91a, 0x1bcb2b87

AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xd3a62e85, 0xf1ada2dc, 0xc918d91a, 0x1bcb2b87
0x063cc23d, 0xaa5e6bcb, 0x37f19b52, 0xc5459511


  Round 05
  ---------
Inside substw:
b0 = 0x06, b1 = 0x3c, b2 = 0xc2, b3 = 0x3d
s0 = 0x6f, s1 = 0xeb, s2 = 0x25, s3 = 0x27
res = 0x6feb2527
Inside substw:
b0 = 0xaa, b1 = 0x5e, b2 = 0x6b, b3 = 0xcb
s0 = 0xac, s1 = 0x58, s2 = 0x7f, s3 = 0x1f
res = 0xac587f1f
Inside substw:
b0 = 0x37, b1 = 0xf1, b2 = 0x9b, b3 = 0x52
s0 = 0x9a, s1 = 0xa1, s2 = 0x14, s3 = 0x00
res = 0x9aa11400
Inside substw:
b0 = 0xc5, b1 = 0x45, b2 = 0x95, b3 = 0x11
s0 = 0xa6, s1 = 0x6e, s2 = 0x2a, s3 = 0x82
res = 0xa66e2a82
SubBytes block in and block out:
0x063cc23d, 0xaa5e6bcb, 0x37f19b52, 0xc5459511
0x6feb2527, 0xac587f1f, 0x9aa11400, 0xa66e2a82

ShiftRows block in and block out:
0x6feb2527, 0xac587f1f, 0x9aa11400, 0xa66e2a82
0x6f581482, 0xaca12a27, 0x9a6e251f, 0xa6eb7f00

MixColumns block in and block out:
0x6f581482, 0xaca12a27, 0x9a6e251f, 0xa6eb7f00
0xa06182e2, 0xb6ac302a, 0xa7369fc0, 0x0eeab365

AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0xa06182e2, 0xb6ac302a, 0xa7369fc0, 0x0eeab365
0x15c8b068, 0x90d4966d, 0x3f07bde9, 0x2186cad6


  Round 06
  ---------
Inside substw:
b0 = 0x15, b1 = 0xc8, b2 = 0xb0, b3 = 0x68
s0 = 0x59, s1 = 0xe8, s2 = 0xe7, s3 = 0x45
res = 0x59e8e745
Inside substw:
b0 = 0x90, b1 = 0xd4, b2 = 0x96, b3 = 0x6d
s0 = 0x60, s1 = 0x48, s2 = 0x90, s3 = 0x3c
res = 0x6048903c
Inside substw:
b0 = 0x3f, b1 = 0x07, b2 = 0xbd, b3 = 0xe9
s0 = 0x75, s1 = 0xc5, s2 = 0x7a, s3 = 0x1e
res = 0x75c57a1e
Inside substw:
b0 = 0x21, b1 = 0x86, b2 = 0xca, b3 = 0xd6
s0 = 0xfd, s1 = 0x44, s2 = 0x74, s3 = 0xf6
res = 0xfd4474f6
SubBytes block in and block out:
0x15c8b068, 0x90d4966d, 0x3f07bde9, 0x2186cad6
0x59e8e745, 0x6048903c, 0x75c57a1e, 0xfd4474f6

ShiftRows block in and block out:
0x59e8e745, 0x6048903c, 0x75c57a1e, 0xfd4474f6
0x59487af6, 0x60c57445, 0x7544e73c, 0xfde8901e

MixColumns block in and block out:
0x59487af6, 0x60c57445, 0x7544e73c, 0xfde8901e
0xe6b1e42e, 0xa528829b, 0xfdf3a044, 0x4c830c58

AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0xe6b1e42e, 0xa528829b, 0xfdf3a044, 0x4c830c58
0x679d6583, 0x7ff7ca21, 0xd9c5aab6, 0xb63bb83c


  Round 07
  ---------
Inside substw:
b0 = 0x67, b1 = 0x9d, b2 = 0x65, b3 = 0x83
s0 = 0x85, s1 = 0x5e, s2 = 0x4d, s3 = 0xec
res = 0x855e4dec
Inside substw:
b0 = 0x7f, b1 = 0xf7, b2 = 0xca, b3 = 0x21
s0 = 0xd2, s1 = 0x68, s2 = 0x74, s3 = 0xfd
res = 0xd26874fd
Inside substw:
b0 = 0xd9, b1 = 0xc5, b2 = 0xaa, b3 = 0xb6
s0 = 0x35, s1 = 0xa6, s2 = 0xac, s3 = 0x4e
res = 0x35a6ac4e
Inside substw:
b0 = 0xb6, b1 = 0x3b, b2 = 0xb8, b3 = 0x3c
s0 = 0x4e, s1 = 0xe2, s2 = 0x6c, s3 = 0xeb
res = 0x4ee26ceb
SubBytes block in and block out:
0x679d6583, 0x7ff7ca21, 0xd9c5aab6, 0xb63bb83c
0x855e4dec, 0xd26874fd, 0x35a6ac4e, 0x4ee26ceb

ShiftRows block in and block out:
0x855e4dec, 0xd26874fd, 0x35a6ac4e, 0x4ee26ceb
0x8568aceb, 0xd2a66cec, 0x35e24dfd, 0x4e5e744e

MixColumns block in and block out:
0x8568aceb, 0xd2a66cec, 0x35e24dfd, 0x4e5e744e
0xee51889d, 0xcedd8364, 0xe7c05111, 0x44202a64

AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0xee51889d, 0xcedd8364, 0xe7c05111, 0x44202a64
0x76943754, 0x70609aea, 0xc14c6ab6, 0x4dc06870


  Round 08
  ---------
Inside substw:
b0 = 0x76, b1 = 0x94, b2 = 0x37, b3 = 0x54
s0 = 0x38, s1 = 0x22, s2 = 0x9a, s3 = 0x20
res = 0x38229a20
Inside substw:
b0 = 0x70, b1 = 0x60, b2 = 0x9a, b3 = 0xea
s0 = 0x51, s1 = 0xd0, s2 = 0xb8, s3 = 0x87
res = 0x51d0b887
Inside substw:
b0 = 0xc1, b1 = 0x4c, b2 = 0x6a, b3 = 0xb6
s0 = 0x78, s1 = 0x29, s2 = 0x02, s3 = 0x4e
res = 0x7829024e
Inside substw:
b0 = 0x4d, b1 = 0xc0, b2 = 0x68, b3 = 0x70
s0 = 0xe3, s1 = 0xba, s2 = 0x45, s3 = 0x51
res = 0xe3ba4551
SubBytes block in and block out:
0x76943754, 0x70609aea, 0xc14c6ab6, 0x4dc06870
0x38229a20, 0x51d0b887, 0x7829024e, 0xe3ba4551

ShiftRows block in and block out:
0x38229a20, 0x51d0b887, 0x7829024e, 0xe3ba4551
0x38d00251, 0x51294520, 0x78ba9a87, 0xe322b84e

MixColumns block in and block out:
0x38d00251, 0x51294520, 0x78ba9a87, 0xe322b84e
0x48d41f38, 0xbcec92df, 0x38257fbd, 0x4d3a7838

AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x48d41f38, 0xbcec92df, 0x38257fbd, 0x4d3a7838
0x20d46494, 0x0e33a1c9, 0xaecc4659, 0x216bf5b8


  Round 09
  ---------
Inside substw:
b0 = 0x20, b1 = 0xd4, b2 = 0x64, b3 = 0x94
s0 = 0xb7, s1 = 0x48, s2 = 0x43, s3 = 0x22
res = 0xb7484322
Inside substw:
b0 = 0x0e, b1 = 0x33, b2 = 0xa1, b3 = 0xc9
s0 = 0xab, s1 = 0xc3, s2 = 0x32, s3 = 0xdd
res = 0xabc332dd
Inside substw:
b0 = 0xae, b1 = 0xcc, b2 = 0x46, b3 = 0x59
s0 = 0xe4, s1 = 0x4b, s2 = 0x5a, s3 = 0xcb
res = 0xe44b5acb
Inside substw:
b0 = 0x21, b1 = 0x6b, b2 = 0xf5, b3 = 0xb8
s0 = 0xfd, s1 = 0x7f, s2 = 0xe6, s3 = 0x6c
res = 0xfd7fe66c
SubBytes block in and block out:
0x20d46494, 0x0e33a1c9, 0xaecc4659, 0x216bf5b8
0xb7484322, 0xabc332dd, 0xe44b5acb, 0xfd7fe66c

ShiftRows block in and block out:
0xb7484322, 0xabc332dd, 0xe44b5acb, 0xfd7fe66c
0xb7c35a6c, 0xab4be622, 0xe47f43dd, 0xfd4832cb

MixColumns block in and block out:
0xb7c35a6c, 0xab4be622, 0xe47f43dd, 0xfd4832cb
0x1da87483, 0x542e510f, 0xcc0261aa, 0xc0f097eb

AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0x1da87483, 0x542e510f, 0xcc0261aa, 0xc0f097eb
0xd5bc9687, 0x2287aa85, 0x9c27a187, 0x993515d2


  Round 10
  ---------
Inside substw:
b0 = 0xd5, b1 = 0xbc, b2 = 0x96, b3 = 0x87
s0 = 0x03, s1 = 0x65, s2 = 0x90, s3 = 0x17
res = 0x03659017
Inside substw:
b0 = 0x22, b1 = 0x87, b2 = 0xaa, b3 = 0x85
s0 = 0x93, s1 = 0x17, s2 = 0xac, s3 = 0x97
res = 0x9317ac97
Inside substw:
b0 = 0x9c, b1 = 0x27, b2 = 0xa1, b3 = 0x87
s0 = 0xde, s1 = 0xcc, s2 = 0x32, s3 = 0x17
res = 0xdecc3217
Inside substw:
b0 = 0x99, b1 = 0x35, b2 = 0x15, b3 = 0xd2
s0 = 0xee, s1 = 0x96, s2 = 0x59, s3 = 0xb5
res = 0xee9659b5
SubBytes block in and block out:
0xd5bc9687, 0x2287aa85, 0x9c27a187, 0x993515d2
0x03659017, 0x9317ac97, 0xdecc3217, 0xee9659b5

ShiftRows block in and block out:
0x03659017, 0x9317ac97, 0xdecc3217, 0xee9659b5
0x031732b5, 0x93cc5917, 0xde969097, 0xee65ac17

MixColumns block in and block out:
0x031732b5, 0x93cc5917, 0xde969097, 0xee65ac17
0xb8ceb451, 0x3cecd415, 0x01d5d14a, 0xd3dcf1ce

AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0xb8ceb451, 0x3cecd415, 0x01d5d14a, 0xd3dcf1ce
0x66dddd36, 0x50208e64, 0xfbf0b2df, 0x45a81fdb


  Round 11
  ---------
Inside substw:
b0 = 0x66, b1 = 0xdd, b2 = 0xdd, b3 = 0x36
s0 = 0x33, s1 = 0xc1, s2 = 0xc1, s3 = 0x05
res = 0x33c1c105
Inside substw:
b0 = 0x50, b1 = 0x20, b2 = 0x8e, b3 = 0x64
s0 = 0x53, s1 = 0xb7, s2 = 0x19, s3 = 0x43
res = 0x53b71943
Inside substw:
b0 = 0xfb, b1 = 0xf0, b2 = 0xb2, b3 = 0xdf
s0 = 0x0f, s1 = 0x8c, s2 = 0x37, s3 = 0x9e
res = 0x0f8c379e
Inside substw:
b0 = 0x45, b1 = 0xa8, b2 = 0x1f, b3 = 0xdb
s0 = 0x6e, s1 = 0xc2, s2 = 0xc0, s3 = 0xb9
res = 0x6ec2c0b9
SubBytes block in and block out:
0x66dddd36, 0x50208e64, 0xfbf0b2df, 0x45a81fdb
0x33c1c105, 0x53b71943, 0x0f8c379e, 0x6ec2c0b9

ShiftRows block in and block out:
0x33c1c105, 0x53b71943, 0x0f8c379e, 0x6ec2c0b9
0x33b737b9, 0x538cc005, 0x0fc2c143, 0x6ec1199e

MixColumns block in and block out:
0x33b737b9, 0x538cc005, 0x0fc2c143, 0x6ec1199e
0x2aa63abc, 0xec0e4bb3, 0xc18b9194, 0x0342244d

AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x2aa63abc, 0xec0e4bb3, 0xc18b9194, 0x0342244d
0x7220f0e1, 0xc2217a64, 0xbf81606e, 0x248d578e


  Round 12
  ---------
Inside substw:
b0 = 0x72, b1 = 0x20, b2 = 0xf0, b3 = 0xe1
s0 = 0x40, s1 = 0xb7, s2 = 0x8c, s3 = 0xf8
res = 0x40b78cf8
Inside substw:
b0 = 0xc2, b1 = 0x21, b2 = 0x7a, b3 = 0x64
s0 = 0x25, s1 = 0xfd, s2 = 0xda, s3 = 0x43
res = 0x25fdda43
Inside substw:
b0 = 0xbf, b1 = 0x81, b2 = 0x60, b3 = 0x6e
s0 = 0x08, s1 = 0x0c, s2 = 0xd0, s3 = 0x9f
res = 0x080cd09f
Inside substw:
b0 = 0x24, b1 = 0x8d, b2 = 0x57, b3 = 0x8e
s0 = 0x36, s1 = 0x5d, s2 = 0x5b, s3 = 0x19
res = 0x365d5b19
SubBytes block in and block out:
0x7220f0e1, 0xc2217a64, 0xbf81606e, 0x248d578e
0x40b78cf8, 0x25fdda43, 0x080cd09f, 0x365d5b19

ShiftRows block in and block out:
0x40b78cf8, 0x25fdda43, 0x080cd09f, 0x365d5b19
0x40fdd019, 0x250c5bf8, 0x085d8c43, 0x36b7da9f

MixColumns block in and block out:
0x40fdd019, 0x250c5bf8, 0x085d8c43, 0x36b7da9f
0x55d32ddf, 0xfd288cd3, 0x387e934f, 0xeba99412

AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0x55d32ddf, 0xfd288cd3, 0x387e934f, 0xeba99412
0x214f6a74, 0xe5789109, 0xda0bed00, 0x9fa80448


  Round 13
  ---------
Inside substw:
b0 = 0x21, b1 = 0x4f, b2 = 0x6a, b3 = 0x74
s0 = 0xfd, s1 = 0x84, s2 = 0x02, s3 = 0x92
res = 0xfd840292
Inside substw:
b0 = 0xe5, b1 = 0x78, b2 = 0x91, b3 = 0x09
s0 = 0xd9, s1 = 0xbc, s2 = 0x81, s3 = 0x01
res = 0xd9bc8101
Inside substw:
b0 = 0xda, b1 = 0x0b, b2 = 0xed, b3 = 0x00
s0 = 0x57, s1 = 0x2b, s2 = 0x55, s3 = 0x63
res = 0x572b5563
Inside substw:
b0 = 0x9f, b1 = 0xa8, b2 = 0x04, b3 = 0x48
s0 = 0xdb, s1 = 0xc2, s2 = 0xf2, s3 = 0x52
res = 0xdbc2f252
SubBytes block in and block out:
0x214f6a74, 0xe5789109, 0xda0bed00, 0x9fa80448
0xfd840292, 0xd9bc8101, 0x572b5563, 0xdbc2f252

ShiftRows block in and block out:
0xfd840292, 0xd9bc8101, 0x572b5563, 0xdbc2f252
0xfdbc5552, 0xd92bf292, 0x57c20201, 0xdb848163

MixColumns block in and block out:
0xfdbc5552, 0xd92bf292, 0x57c20201, 0xdb848163
0x39331d51, 0xb410a096, 0xf0cf923b, 0xd833e3b5

AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0x39331d51, 0xb410a096, 0xf0cf923b, 0xd833e3b5
0xf3c9b7b2, 0x50c53ba2, 0x6a10f8f5, 0x6523fab8

  Final round.
Inside substw:
b0 = 0xf3, b1 = 0xc9, b2 = 0xb7, b3 = 0xb2
s0 = 0x0d, s1 = 0xdd, s2 = 0xa9, s3 = 0x37
res = 0x0ddda937
Inside substw:
b0 = 0x50, b1 = 0xc5, b2 = 0x3b, b3 = 0xa2
s0 = 0x53, s1 = 0xa6, s2 = 0xe2, s3 = 0x3a
res = 0x53a6e23a
Inside substw:
b0 = 0x6a, b1 = 0x10, b2 = 0xf8, b3 = 0xf5
s0 = 0x02, s1 = 0xca, s2 = 0x41, s3 = 0xe6
res = 0x02ca41e6
Inside substw:
b0 = 0x65, b1 = 0x23, b2 = 0xfa, b3 = 0xb8
s0 = 0x4d, s1 = 0x26, s2 = 0x2d, s3 = 0x6c
res = 0x4d262d6c
SubBytes block in and block out:
0xf3c9b7b2, 0x50c53ba2, 0x6a10f8f5, 0x6523fab8
0x0ddda937, 0x53a6e23a, 0x02ca41e6, 0x4d262d6c

ShiftRows block in and block out:
0x0ddda937, 0x53a6e23a, 0x02ca41e6, 0x4d262d6c
0x0da6416c, 0x53ca2d37, 0x0226a93a, 0x4ddde2e6

AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0x0da6416c, 0x53ca2d37, 0x0226a93a, 0x4ddde2e6
0xf3eed1bd, 0xb5d2a03c, 0x064b5a7e, 0x3db181f8

OK. Result matches expected.

Test 1 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xae2d8a57, 0x1e03ac9c, 0x9eb76fac, 0x45af8e51
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0xae2d8a57, 0x1e03ac9c, 0x9eb76fac, 0x45af8e51
0xce106147, 0x0bc9dd22, 0xb5c4c15c, 0xc0d2f9d0


  Round 01
  ---------
Inside substw:
b0 = 0xce, b1 = 0x10, b2 = 0x61, b3 = 0x47
s0 = 0x8b, s1 = 0xca, s2 = 0xef, s3 = 0xa0
res = 0x8bcaefa0
Inside substw:
b0 = 0x0b, b1 = 0xc9, b2 = 0xdd, b3 = 0x22
s0 = 0x2b, s1 = 0xdd, s2 = 0xc1, s3 = 0x93
res = 0x2bddc193
Inside substw:
b0 = 0xb5, b1 = 0xc4, b2 = 0xc1, b3 = 0x5c
s0 = 0xd5, s1 = 0x1c, s2 = 0x78, s3 = 0x4a
res = 0xd51c784a
Inside substw:
b0 = 0xc0, b1 = 0xd2, b2 = 0xf9, b3 = 0xd0
s0 = 0xba, s1 = 0xb5, s2 = 0x99, s3 = 0x70
res = 0xbab59970
SubBytes block in and block out:
0xce106147, 0x0bc9dd22, 0xb5c4c15c, 0xc0d2f9d0
0x8bcaefa0, 0x2bddc193, 0xd51c784a, 0xbab59970

ShiftRows block in and block out:
0x8bcaefa0, 0x2bddc193, 0xd51c784a, 0xbab59970
0x8bdd7870, 0x2b1c99a0, 0xd5b5ef93, 0xbacac14a

MixColumns block in and block out:
0x8bdd7870, 0x2b1c99a0, 0xd5b5ef93, 0xbacac14a
0x79d236c3, 0x4b03e5a3, 0x091d0b03, 0xa127374a

AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x79d236c3, 0x4b03e5a3, 0x091d0b03, 0xa127374a
0x66e71ac4, 0x7062ed74, 0x24851ba0, 0xa833e8be


  Round 02
  ---------
Inside substw:
b0 = 0x66, b1 = 0xe7, b2 = 0x1a, b3 = 0xc4
s0 = 0x33, s1 = 0x94, s2 = 0xa2, s3 = 0x1c
res = 0x3394a21c
Inside substw:
b0 = 0x70, b1 = 0x62, b2 = 0xed, b3 = 0x74
s0 = 0x51, s1 = 0xaa, s2 = 0x55, s3 = 0x92
res = 0x51aa5592
Inside substw:
b0 = 0x24, b1 = 0x85, b2 = 0x1b, b3 = 0xa0
s0 = 0x36, s1 = 0x97, s2 = 0xaf, s3 = 0xe0
res = 0x3697afe0
Inside substw:
b0 = 0xa8, b1 = 0x33, b2 = 0xe8, b3 = 0xbe
s0 = 0xc2, s1 = 0xc3, s2 = 0x9b, s3 = 0xae
res = 0xc2c39bae
SubBytes block in and block out:
0x66e71ac4, 0x7062ed74, 0x24851ba0, 0xa833e8be
0x3394a21c, 0x51aa5592, 0x3697afe0, 0xc2c39bae

ShiftRows block in and block out:
0x3394a21c, 0x51aa5592, 0x3697afe0, 0xc2c39bae
0x33aaafae, 0x51979b1c, 0x36c3a292, 0xc29455e0

MixColumns block in and block out:
0x33aaafae, 0x51979b1c, 0x36c3a292, 0xc29455e0
0x82383517, 0x87cecfc7, 0x02c40704, 0x8deec747

AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0x82383517, 0x87cecfc7, 0x02c40704, 0x8deec747
0x199b6106, 0x09a7ea68, 0xa7de8c5b, 0xad893b99


  Round 03
  ---------
Inside substw:
b0 = 0x19, b1 = 0x9b, b2 = 0x61, b3 = 0x06
s0 = 0xd4, s1 = 0x14, s2 = 0xef, s3 = 0x6f
res = 0xd414ef6f
Inside substw:
b0 = 0x09, b1 = 0xa7, b2 = 0xea, b3 = 0x68
s0 = 0x01, s1 = 0x5c, s2 = 0x87, s3 = 0x45
res = 0x015c8745
Inside substw:
b0 = 0xa7, b1 = 0xde, b2 = 0x8c, b3 = 0x5b
s0 = 0x5c, s1 = 0x1d, s2 = 0x64, s3 = 0x39
res = 0x5c1d6439
Inside substw:
b0 = 0xad, b1 = 0x89, b2 = 0x3b, b3 = 0x99
s0 = 0x95, s1 = 0xa7, s2 = 0xe2, s3 = 0xee
res = 0x95a7e2ee
SubBytes block in and block out:
0x199b6106, 0x09a7ea68, 0xa7de8c5b, 0xad893b99
0xd414ef6f, 0x015c8745, 0x5c1d6439, 0x95a7e2ee

ShiftRows block in and block out:
0xd414ef6f, 0x015c8745, 0x5c1d6439, 0x95a7e2ee
0xd45c64ee, 0x011de26f, 0x5ca7ef45, 0x95148739

MixColumns block in and block out:
0xd45c64ee, 0x011de26f, 0x5ca7ef45, 0x95148739
0xdd2e6998, 0xa8697222, 0xe066f126, 0xb316df45

AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xdd2e6998, 0xa8697222, 0xe066f126, 0xb316df45
0x759ef582, 0x3bb8e6ef, 0x5e2f7548, 0x044b84df


  Round 04
  ---------
Inside substw:
b0 = 0x75, b1 = 0x9e, b2 = 0xf5, b3 = 0x82
s0 = 0x9d, s1 = 0x0b, s2 = 0xe6, s3 = 0x13
res = 0x9d0be613
Inside substw:
b0 = 0x3b, b1 = 0xb8, b2 = 0xe6, b3 = 0xef
s0 = 0xe2, s1 = 0x6c, s2 = 0x8e, s3 = 0xdf
res = 0xe26c8edf
Inside substw:
b0 = 0x5e, b1 = 0x2f, b2 = 0x75, b3 = 0x48
s0 = 0x58, s1 = 0x15, s2 = 0x9d, s3 = 0x52
res = 0x58159d52
Inside substw:
b0 = 0x04, b1 = 0x4b, b2 = 0x84, b3 = 0xdf
s0 = 0xf2, s1 = 0xb3, s2 = 0x5f, s3 = 0x9e
res = 0xf2b35f9e
SubBytes block in and block out:
0x759ef582, 0x3bb8e6ef, 0x5e2f7548, 0x044b84df
0x9d0be613, 0xe26c8edf, 0x58159d52, 0xf2b35f9e

ShiftRows block in and block out:
0x9d0be613, 0xe26c8edf, 0x58159d52, 0xf2b35f9e
0x9d6c9d9e, 0xe2155f13, 0x58b3e6df, 0xf20b8e52

MixColumns block in and block out:
0x9d6c9d9e, 0xe2155f13, 0x58b3e6df, 0xf20b8e52
0x9667696a, 0xac3a7c51, 0x47cb4618, 0x3e3f082c

AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0x9667696a, 0xac3a7c51, 0x47cb4618, 0x3e3f082c
0x43fd85d2, 0xf7c9b546, 0xb9220450, 0xe0b1b6ba


  Round 05
  ---------
Inside substw:
b0 = 0x43, b1 = 0xfd, b2 = 0x85, b3 = 0xd2
s0 = 0x1a, s1 = 0x54, s2 = 0x97, s3 = 0xb5
res = 0x1a5497b5
Inside substw:
b0 = 0xf7, b1 = 0xc9, b2 = 0xb5, b3 = 0x46
s0 = 0x68, s1 = 0xdd, s2 = 0xd5, s3 = 0x5a
res = 0x68ddd55a
Inside substw:
b0 = 0xb9, b1 = 0x22, b2 = 0x04, b3 = 0x50
s0 = 0x56, s1 = 0x93, s2 = 0xf2, s3 = 0x53
res = 0x5693f253
Inside substw:
b0 = 0xe0, b1 = 0xb1, b2 = 0xb6, b3 = 0xba
s0 = 0xe1, s1 = 0xc8, s2 = 0x4e, s3 = 0xf4
res = 0xe1c84ef4
SubBytes block in and block out:
0x43fd85d2, 0xf7c9b546, 0xb9220450, 0xe0b1b6ba
0x1a5497b5, 0x68ddd55a, 0x5693f253, 0xe1c84ef4

ShiftRows block in and block out:
0x1a5497b5, 0x68ddd55a, 0x5693f253, 0xe1c84ef4
0x1addf2f4, 0x68934eb5, 0x56c8975a, 0xe154d553

MixColumns block in and block out:
0x1addf2f4, 0x68934eb5, 0x56c8975a, 0xe154d553
0x4e423ff2, 0x8532a314, 0x22254511, 0xa37ef11f

AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x4e423ff2, 0x8532a314, 0x22254511, 0xa37ef11f
0xfbeb0d78, 0xa34a0553, 0xba146738, 0x8c1288ac


  Round 06
  ---------
Inside substw:
b0 = 0xfb, b1 = 0xeb, b2 = 0x0d, b3 = 0x78
s0 = 0x0f, s1 = 0xe9, s2 = 0xd7, s3 = 0xbc
res = 0x0fe9d7bc
Inside substw:
b0 = 0xa3, b1 = 0x4a, b2 = 0x05, b3 = 0x53
s0 = 0x0a, s1 = 0xd6, s2 = 0x6b, s3 = 0xed
res = 0x0ad66bed
Inside substw:
b0 = 0xba, b1 = 0x14, b2 = 0x67, b3 = 0x38
s0 = 0xf4, s1 = 0xfa, s2 = 0x85, s3 = 0x07
res = 0xf4fa8507
Inside substw:
b0 = 0x8c, b1 = 0x12, b2 = 0x88, b3 = 0xac
s0 = 0x64, s1 = 0xc9, s2 = 0xc4, s3 = 0x91
res = 0x64c9c491
SubBytes block in and block out:
0xfbeb0d78, 0xa34a0553, 0xba146738, 0x8c1288ac
0x0fe9d7bc, 0x0ad66bed, 0xf4fa8507, 0x64c9c491

ShiftRows block in and block out:
0x0fe9d7bc, 0x0ad66bed, 0xf4fa8507, 0x64c9c491
0x0fd68591, 0x0afac4bc, 0xf4c9d7ed, 0x64e96b07

MixColumns block in and block out:
0x0fd68591, 0x0afac4bc, 0xf4c9d7ed, 0x64e96b07
0x6bbd607b, 0x790ebc43, 0x89f2a4d8, 0x84175220

AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x6bbd607b, 0x790ebc43, 0x89f2a4d8, 0x84175220
0xea91e1d6, 0xa3d1f4f9, 0xadc4ae2a, 0x7eafe644


  Round 07
  ---------
Inside substw:
b0 = 0xea, b1 = 0x91, b2 = 0xe1, b3 = 0xd6
s0 = 0x87, s1 = 0x81, s2 = 0xf8, s3 = 0xf6
res = 0x8781f8f6
Inside substw:
b0 = 0xa3, b1 = 0xd1, b2 = 0xf4, b3 = 0xf9
s0 = 0x0a, s1 = 0x3e, s2 = 0xbf, s3 = 0x99
res = 0x0a3ebf99
Inside substw:
b0 = 0xad, b1 = 0xc4, b2 = 0xae, b3 = 0x2a
s0 = 0x95, s1 = 0x1c, s2 = 0xe4, s3 = 0xe5
res = 0x951ce4e5
Inside substw:
b0 = 0x7e, b1 = 0xaf, b2 = 0xe6, b3 = 0x44
s0 = 0xf3, s1 = 0x79, s2 = 0x8e, s3 = 0x1b
res = 0xf3798e1b
SubBytes block in and block out:
0xea91e1d6, 0xa3d1f4f9, 0xadc4ae2a, 0x7eafe644
0x8781f8f6, 0x0a3ebf99, 0x951ce4e5, 0xf3798e1b

ShiftRows block in and block out:
0x8781f8f6, 0x0a3ebf99, 0x951ce4e5, 0xf3798e1b
0x873ee41b, 0x0a1c8ef6, 0x9579f899, 0xf381bfe5

MixColumns block in and block out:
0x873ee41b, 0x0a1c8ef6, 0x9579f899, 0xf381bfe5
0xa8d7477e, 0x484d107b, 0xdbedb70c, 0x3fd523e1

AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0xa8d7477e, 0x484d107b, 0xdbedb70c, 0x3fd523e1
0x3012f8b7, 0xf6f009f5, 0xfd618cab, 0x363561f5


  Round 08
  ---------
Inside substw:
b0 = 0x30, b1 = 0x12, b2 = 0xf8, b3 = 0xb7
s0 = 0x04, s1 = 0xc9, s2 = 0x41, s3 = 0xa9
res = 0x04c941a9
Inside substw:
b0 = 0xf6, b1 = 0xf0, b2 = 0x09, b3 = 0xf5
s0 = 0x42, s1 = 0x8c, s2 = 0x01, s3 = 0xe6
res = 0x428c01e6
Inside substw:
b0 = 0xfd, b1 = 0x61, b2 = 0x8c, b3 = 0xab
s0 = 0x54, s1 = 0xef, s2 = 0x64, s3 = 0x62
res = 0x54ef6462
Inside substw:
b0 = 0x36, b1 = 0x35, b2 = 0x61, b3 = 0xf5
s0 = 0x05, s1 = 0x96, s2 = 0xef, s3 = 0xe6
res = 0x0596efe6
SubBytes block in and block out:
0x3012f8b7, 0xf6f009f5, 0xfd618cab, 0x363561f5
0x04c941a9, 0x428c01e6, 0x54ef6462, 0x0596efe6

ShiftRows block in and block out:
0x04c941a9, 0x428c01e6, 0x54ef6462, 0x0596efe6
0x048c64e6, 0x42efefa9, 0x549641e6, 0x05c90162

MixColumns block in and block out:
0x048c64e6, 0x42efefa9, 0x549641e6, 0x05c90162
0x054d7133, 0xe804888f, 0xae4671fc, 0x29ed6803

AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x054d7133, 0xe804888f, 0xae4671fc, 0x29ed6803
0x6d4d0a9f, 0x5adbbb99, 0x38af4818, 0x45bce583


  Round 09
  ---------
Inside substw:
b0 = 0x6d, b1 = 0x4d, b2 = 0x0a, b3 = 0x9f
s0 = 0x3c, s1 = 0xe3, s2 = 0x67, s3 = 0xdb
res = 0x3ce367db
Inside substw:
b0 = 0x5a, b1 = 0xdb, b2 = 0xbb, b3 = 0x99
s0 = 0xbe, s1 = 0xb9, s2 = 0xea, s3 = 0xee
res = 0xbeb9eaee
Inside substw:
b0 = 0x38, b1 = 0xaf, b2 = 0x48, b3 = 0x18
s0 = 0x07, s1 = 0x79, s2 = 0x52, s3 = 0xad
res = 0x077952ad
Inside substw:
b0 = 0x45, b1 = 0xbc, b2 = 0xe5, b3 = 0x83
s0 = 0x6e, s1 = 0x65, s2 = 0xd9, s3 = 0xec
res = 0x6e65d9ec
SubBytes block in and block out:
0x6d4d0a9f, 0x5adbbb99, 0x38af4818, 0x45bce583
0x3ce367db, 0xbeb9eaee, 0x077952ad, 0x6e65d9ec

ShiftRows block in and block out:
0x3ce367db, 0xbeb9eaee, 0x077952ad, 0x6e65d9ec
0x3cb952ec, 0xbe79d9db, 0x076567ee, 0x6ee3eaad

MixColumns block in and block out:
0x3cb952ec, 0xbe79d9db, 0x076567ee, 0x6ee3eaad
0x164f0e6c, 0xeee718d4, 0x288a85cc, 0xa53baefa

AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0x164f0e6c, 0xeee718d4, 0x288a85cc, 0xa53baefa
0xde5bec68, 0x984ee35e, 0x78af45e1, 0xfcfe2cc3


  Round 10
  ---------
Inside substw:
b0 = 0xde, b1 = 0x5b, b2 = 0xec, b3 = 0x68
s0 = 0x1d, s1 = 0x39, s2 = 0xce, s3 = 0x45
res = 0x1d39ce45
Inside substw:
b0 = 0x98, b1 = 0x4e, b2 = 0xe3, b3 = 0x5e
s0 = 0x46, s1 = 0x2f, s2 = 0x11, s3 = 0x58
res = 0x462f1158
Inside substw:
b0 = 0x78, b1 = 0xaf, b2 = 0x45, b3 = 0xe1
s0 = 0xbc, s1 = 0x79, s2 = 0x6e, s3 = 0xf8
res = 0xbc796ef8
Inside substw:
b0 = 0xfc, b1 = 0xfe, b2 = 0x2c, b3 = 0xc3
s0 = 0xb0, s1 = 0xbb, s2 = 0x71, s3 = 0x2e
res = 0xb0bb712e
SubBytes block in and block out:
0xde5bec68, 0x984ee35e, 0x78af45e1, 0xfcfe2cc3
0x1d39ce45, 0x462f1158, 0xbc796ef8, 0xb0bb712e

ShiftRows block in and block out:
0x1d39ce45, 0x462f1158, 0xbc796ef8, 0xb0bb712e
0x1d2f6e2e, 0x46797145, 0xbcbbce58, 0xb03911f8

MixColumns block in and block out:
0x1d2f6e2e, 0x46797145, 0xbcbbce58, 0xb03911f8
0x0bdf9c3a, 0x33621248, 0x23c0681a, 0xd909b808

AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x0bdf9c3a, 0x33621248, 0x23c0681a, 0xd909b808
0xd5ccf55d, 0x5fae4839, 0xd9e50b8f, 0x4f7d561d


  Round 11
  ---------
Inside substw:
b0 = 0xd5, b1 = 0xcc, b2 = 0xf5, b3 = 0x5d
s0 = 0x03, s1 = 0x4b, s2 = 0xe6, s3 = 0x4c
res = 0x034be64c
Inside substw:
b0 = 0x5f, b1 = 0xae, b2 = 0x48, b3 = 0x39
s0 = 0xcf, s1 = 0xe4, s2 = 0x52, s3 = 0x12
res = 0xcfe45212
Inside substw:
b0 = 0xd9, b1 = 0xe5, b2 = 0x0b, b3 = 0x8f
s0 = 0x35, s1 = 0xd9, s2 = 0x2b, s3 = 0x73
res = 0x35d92b73
Inside substw:
b0 = 0x4f, b1 = 0x7d, b2 = 0x56, b3 = 0x1d
s0 = 0x84, s1 = 0xff, s2 = 0xb1, s3 = 0xa4
res = 0x84ffb1a4
SubBytes block in and block out:
0xd5ccf55d, 0x5fae4839, 0xd9e50b8f, 0x4f7d561d
0x034be64c, 0xcfe45212, 0x35d92b73, 0x84ffb1a4

ShiftRows block in and block out:
0x034be64c, 0xcfe45212, 0x35d92b73, 0x84ffb1a4
0x03e42ba4, 0xcfd9b14c, 0x35ffe612, 0x844b5273

MixColumns block in and block out:
0x03e42ba4, 0xcfd9b14c, 0x35ffe612, 0x844b5273
0xbe094699, 0x08e2bbba, 0x84f32b62, 0xef97fe68

AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0xbe094699, 0x08e2bbba, 0x84f32b62, 0xef97fe68
0xe68f8cc4, 0x26cd8a6d, 0xfaf9da98, 0xc8588dab


  Round 12
  ---------
Inside substw:
b0 = 0xe6, b1 = 0x8f, b2 = 0x8c, b3 = 0xc4
s0 = 0x8e, s1 = 0x73, s2 = 0x64, s3 = 0x1c
res = 0x8e73641c
Inside substw:
b0 = 0x26, b1 = 0xcd, b2 = 0x8a, b3 = 0x6d
s0 = 0xf7, s1 = 0xbd, s2 = 0x7e, s3 = 0x3c
res = 0xf7bd7e3c
Inside substw:
b0 = 0xfa, b1 = 0xf9, b2 = 0xda, b3 = 0x98
s0 = 0x2d, s1 = 0x99, s2 = 0x57, s3 = 0x46
res = 0x2d995746
Inside substw:
b0 = 0xc8, b1 = 0x58, b2 = 0x8d, b3 = 0xab
s0 = 0xe8, s1 = 0x6a, s2 = 0x5d, s3 = 0x62
res = 0xe86a5d62
SubBytes block in and block out:
0xe68f8cc4, 0x26cd8a6d, 0xfaf9da98, 0xc8588dab
0x8e73641c, 0xf7bd7e3c, 0x2d995746, 0xe86a5d62

ShiftRows block in and block out:
0x8e73641c, 0xf7bd7e3c, 0x2d995746, 0xe86a5d62
0x8ebd5762, 0xf7995d1c, 0x2d6a643c, 0xe8737e46

MixColumns block in and block out:
0x8ebd5762, 0xf7995d1c, 0x2d6a643c, 0xe8737e46
0xee743ba7, 0x0425f0fe, 0xbc69cb01, 0x66caada2

AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xee743ba7, 0x0425f0fe, 0xbc69cb01, 0x66caada2
0x9ae87c0c, 0x1c75ed24, 0x5e1cb54e, 0x12cb3df8


  Round 13
  ---------
Inside substw:
b0 = 0x9a, b1 = 0xe8, b2 = 0x7c, b3 = 0x0c
s0 = 0xb8, s1 = 0x9b, s2 = 0x10, s3 = 0xfe
res = 0xb89b10fe
Inside substw:
b0 = 0x1c, b1 = 0x75, b2 = 0xed, b3 = 0x24
s0 = 0x9c, s1 = 0x9d, s2 = 0x55, s3 = 0x36
res = 0x9c9d5536
Inside substw:
b0 = 0x5e, b1 = 0x1c, b2 = 0xb5, b3 = 0x4e
s0 = 0x58, s1 = 0x9c, s2 = 0xd5, s3 = 0x2f
res = 0x589cd52f
Inside substw:
b0 = 0x12, b1 = 0xcb, b2 = 0x3d, b3 = 0xf8
s0 = 0xc9, s1 = 0x1f, s2 = 0x27, s3 = 0x41
res = 0xc91f2741
SubBytes block in and block out:
0x9ae87c0c, 0x1c75ed24, 0x5e1cb54e, 0x12cb3df8
0xb89b10fe, 0x9c9d5536, 0x589cd52f, 0xc91f2741

ShiftRows block in and block out:
0xb89b10fe, 0x9c9d5536, 0x589cd52f, 0xc91f2741
0xb89dd541, 0x9c9c27fe, 0x581f1036, 0xc99b552f

MixColumns block in and block out:
0xb89dd541, 0x9c9c27fe, 0x581f1036, 0xc99b552f
0x43bc5719, 0x452857e3, 0xb7603d8b, 0x453489d0

AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0x43bc5719, 0x452857e3, 0xb7603d8b, 0x453489d0
0x8946fdfa, 0xa1fdccd7, 0x2dbf5745, 0xf82490dd

  Final round.
Inside substw:
b0 = 0x89, b1 = 0x46, b2 = 0xfd, b3 = 0xfa
s0 = 0xa7, s1 = 0x5a, s2 = 0x54, s3 = 0x2d
res = 0xa75a542d
Inside substw:
b0 = 0xa1, b1 = 0xfd, b2 = 0xcc, b3 = 0xd7
s0 = 0x32, s1 = 0x54, s2 = 0x4b, s3 = 0x0e
res = 0x32544b0e
Inside substw:
b0 = 0x2d, b1 = 0xbf, b2 = 0x57, b3 = 0x45
s0 = 0xd8, s1 = 0x08, s2 = 0x5b, s3 = 0x6e
res = 0xd8085b6e
Inside substw:
b0 = 0xf8, b1 = 0x24, b2 = 0x90, b3 = 0xdd
s0 = 0x41, s1 = 0x36, s2 = 0x60, s3 = 0xc1
res = 0x413660c1
SubBytes block in and block out:
0x8946fdfa, 0xa1fdccd7, 0x2dbf5745, 0xf82490dd
0xa75a542d, 0x32544b0e, 0xd8085b6e, 0x413660c1

ShiftRows block in and block out:
0xa75a542d, 0x32544b0e, 0xd8085b6e, 0x413660c1
0xa7545bc1, 0x3208602d, 0xd836540e, 0x415a4b6e

AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0xa7545bc1, 0x3208602d, 0xd836540e, 0x415a4b6e
0x591ccb10, 0xd410ed26, 0xdc5ba74a, 0x31362870

OK. Result matches expected.

Test 2 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x30c81c46, 0xa35ce411, 0xe5fbc119, 0x1a0a52ef
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x30c81c46, 0xa35ce411, 0xe5fbc119, 0x1a0a52ef
0x50f5f756, 0xb69695af, 0xce886fe9, 0x9f77256e


  Round 01
  ---------
Inside substw:
b0 = 0x50, b1 = 0xf5, b2 = 0xf7, b3 = 0x56
s0 = 0x53, s1 = 0xe6, s2 = 0x68, s3 = 0xb1
res = 0x53e668b1
Inside substw:
b0 = 0xb6, b1 = 0x96, b2 = 0x95, b3 = 0xaf
s0 = 0x4e, s1 = 0x90, s2 = 0x2a, s3 = 0x79
res = 0x4e902a79
Inside substw:
b0 = 0xce, b1 = 0x88, b2 = 0x6f, b3 = 0xe9
s0 = 0x8b, s1 = 0xc4, s2 = 0xa8, s3 = 0x1e
res = 0x8bc4a81e
Inside substw:
b0 = 0x9f, b1 = 0x77, b2 = 0x25, b3 = 0x6e
s0 = 0xdb, s1 = 0xf5, s2 = 0x3f, s3 = 0x9f
res = 0xdbf53f9f
SubBytes block in and block out:
0x50f5f756, 0xb69695af, 0xce886fe9, 0x9f77256e
0x53e668b1, 0x4e902a79, 0x8bc4a81e, 0xdbf53f9f

ShiftRows block in and block out:
0x53e668b1, 0x4e902a79, 0x8bc4a81e, 0xdbf53f9f
0x5390a89f, 0x4ec43fb1, 0x8bf56879, 0xdbe62a1e

MixColumns block in and block out:
0x5390a89f, 0x4ec43fb1, 0x8bf56879, 0xdbe62a1e
0x3a1432e8, 0x452d3c50, 0x18bb25e9, 0xa86c4b86

AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x3a1432e8, 0x452d3c50, 0x18bb25e9, 0xa86c4b86
0x25211eef, 0x7e4c3487, 0x3523354a, 0xa1789472


  Round 02
  ---------
Inside substw:
b0 = 0x25, b1 = 0x21, b2 = 0x1e, b3 = 0xef
s0 = 0x3f, s1 = 0xfd, s2 = 0x72, s3 = 0xdf
res = 0x3ffd72df
Inside substw:
b0 = 0x7e, b1 = 0x4c, b2 = 0x34, b3 = 0x87
s0 = 0xf3, s1 = 0x29, s2 = 0x18, s3 = 0x17
res = 0xf3291817
Inside substw:
b0 = 0x35, b1 = 0x23, b2 = 0x35, b3 = 0x4a
s0 = 0x96, s1 = 0x26, s2 = 0x96, s3 = 0xd6
res = 0x962696d6
Inside substw:
b0 = 0xa1, b1 = 0x78, b2 = 0x94, b3 = 0x72
s0 = 0x32, s1 = 0xbc, s2 = 0x22, s3 = 0x40
res = 0x32bc2240
SubBytes block in and block out:
0x25211eef, 0x7e4c3487, 0x3523354a, 0xa1789472
0x3ffd72df, 0xf3291817, 0x962696d6, 0x32bc2240

ShiftRows block in and block out:
0x3ffd72df, 0xf3291817, 0x962696d6, 0x32bc2240
0x3f299640, 0xf32622df, 0x96bc7217, 0x32fd18d6

MixColumns block in and block out:
0x3f299640, 0xf32622df, 0x96bc7217, 0x32fd18d6
0xd38ce17e, 0x6a06ebaf, 0x8d74f741, 0xb62d9e04

AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xd38ce17e, 0x6a06ebaf, 0x8d74f741, 0xb62d9e04
0x482fb56f, 0xe46fce00, 0x286e7c1e, 0x964a62da


  Round 03
  ---------
Inside substw:
b0 = 0x48, b1 = 0x2f, b2 = 0xb5, b3 = 0x6f
s0 = 0x52, s1 = 0x15, s2 = 0xd5, s3 = 0xa8
res = 0x5215d5a8
Inside substw:
b0 = 0xe4, b1 = 0x6f, b2 = 0xce, b3 = 0x00
s0 = 0x69, s1 = 0xa8, s2 = 0x8b, s3 = 0x63
res = 0x69a88b63
Inside substw:
b0 = 0x28, b1 = 0x6e, b2 = 0x7c, b3 = 0x1e
s0 = 0x34, s1 = 0x9f, s2 = 0x10, s3 = 0x72
res = 0x349f1072
Inside substw:
b0 = 0x96, b1 = 0x4a, b2 = 0x62, b3 = 0xda
s0 = 0x90, s1 = 0xd6, s2 = 0xaa, s3 = 0x57
res = 0x90d6aa57
SubBytes block in and block out:
0x482fb56f, 0xe46fce00, 0x286e7c1e, 0x964a62da
0x5215d5a8, 0x69a88b63, 0x349f1072, 0x90d6aa57

ShiftRows block in and block out:
0x5215d5a8, 0x69a88b63, 0x349f1072, 0x90d6aa57
0x52a81057, 0x699faaa8, 0x34d6d563, 0x90158b72

MixColumns block in and block out:
0x52a81057, 0x699faaa8, 0x34d6d563, 0x90158b72
0x007e23e0, 0x6a015ac5, 0xbf84f699, 0xfd4e1ed1

AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0x007e23e0, 0x6a015ac5, 0xbf84f699, 0xfd4e1ed1
0xa8cebffa, 0xf9d0ce08, 0x01cd72f7, 0x4a13454b


  Round 04
  ---------
Inside substw:
b0 = 0xa8, b1 = 0xce, b2 = 0xbf, b3 = 0xfa
s0 = 0xc2, s1 = 0x8b, s2 = 0x08, s3 = 0x2d
res = 0xc28b082d
Inside substw:
b0 = 0xf9, b1 = 0xd0, b2 = 0xce, b3 = 0x08
s0 = 0x99, s1 = 0x70, s2 = 0x8b, s3 = 0x30
res = 0x99708b30
Inside substw:
b0 = 0x01, b1 = 0xcd, b2 = 0x72, b3 = 0xf7
s0 = 0x7c, s1 = 0xbd, s2 = 0x40, s3 = 0x68
res = 0x7cbd4068
Inside substw:
b0 = 0x4a, b1 = 0x13, b2 = 0x45, b3 = 0x4b
s0 = 0xd6, s1 = 0x7d, s2 = 0x6e, s3 = 0xb3
res = 0xd67d6eb3
SubBytes block in and block out:
0xa8cebffa, 0xf9d0ce08, 0x01cd72f7, 0x4a13454b
0xc28b082d, 0x99708b30, 0x7cbd4068, 0xd67d6eb3

ShiftRows block in and block out:
0xc28b082d, 0x99708b30, 0x7cbd4068, 0xd67d6eb3
0xc27040b3, 0x99bd6e2d, 0x7c7d0830, 0xd68b8b68

MixColumns block in and block out:
0xc27040b3, 0x99bd6e2d, 0x7c7d0830, 0xd68b8b68
0xfc51fc10, 0xb6678f39, 0x47ae4191, 0xd235e8b1

AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xfc51fc10, 0xb6678f39, 0x47ae4191, 0xd235e8b1
0x29cb10a8, 0xed94462e, 0xb94703d9, 0x0cbb5627


  Round 05
  ---------
Inside substw:
b0 = 0x29, b1 = 0xcb, b2 = 0x10, b3 = 0xa8
s0 = 0xa5, s1 = 0x1f, s2 = 0xca, s3 = 0xc2
res = 0xa51fcac2
Inside substw:
b0 = 0xed, b1 = 0x94, b2 = 0x46, b3 = 0x2e
s0 = 0x55, s1 = 0x22, s2 = 0x5a, s3 = 0x31
res = 0x55225a31
Inside substw:
b0 = 0xb9, b1 = 0x47, b2 = 0x03, b3 = 0xd9
s0 = 0x56, s1 = 0xa0, s2 = 0x7b, s3 = 0x35
res = 0x56a07b35
Inside substw:
b0 = 0x0c, b1 = 0xbb, b2 = 0x56, b3 = 0x27
s0 = 0xfe, s1 = 0xea, s2 = 0xb1, s3 = 0xcc
res = 0xfeeab1cc
SubBytes block in and block out:
0x29cb10a8, 0xed94462e, 0xb94703d9, 0x0cbb5627
0xa51fcac2, 0x55225a31, 0x56a07b35, 0xfeeab1cc

ShiftRows block in and block out:
0xa51fcac2, 0x55225a31, 0x56a07b35, 0xfeeab1cc
0xa5227bcc, 0x55a0b1c2, 0x56eaca31, 0xfe1f5a35

MixColumns block in and block out:
0xa5227bcc, 0x55a0b1c2, 0x56eaca31, 0xfe1f5a35
0x80a03e2e, 0x2204d171, 0x72ed60b8, 0xa91b0a36

AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x80a03e2e, 0x2204d171, 0x72ed60b8, 0xa91b0a36
0x35090ca4, 0x047c7736, 0xeadc4291, 0x86777385


  Round 06
  ---------
Inside substw:
b0 = 0x35, b1 = 0x09, b2 = 0x0c, b3 = 0xa4
s0 = 0x96, s1 = 0x01, s2 = 0xfe, s3 = 0x49
res = 0x9601fe49
Inside substw:
b0 = 0x04, b1 = 0x7c, b2 = 0x77, b3 = 0x36
s0 = 0xf2, s1 = 0x10, s2 = 0xf5, s3 = 0x05
res = 0xf210f505
Inside substw:
b0 = 0xea, b1 = 0xdc, b2 = 0x42, b3 = 0x91
s0 = 0x87, s1 = 0x86, s2 = 0x2c, s3 = 0x81
res = 0x87862c81
Inside substw:
b0 = 0x86, b1 = 0x77, b2 = 0x73, b3 = 0x85
s0 = 0x44, s1 = 0xf5, s2 = 0x8f, s3 = 0x97
res = 0x44f58f97
SubBytes block in and block out:
0x35090ca4, 0x047c7736, 0xeadc4291, 0x86777385
0x9601fe49, 0xf210f505, 0x87862c81, 0x44f58f97

ShiftRows block in and block out:
0x9601fe49, 0xf210f505, 0x87862c81, 0x44f58f97
0x96102c97, 0xf2868f49, 0x87f5fe05, 0x4401f581

MixColumns block in and block out:
0x96102c97, 0xf2868f49, 0x87f5fe05, 0x4401f581
0xbc557ca8, 0xa826aa96, 0xea6a9a93, 0xffc32c21

AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0xbc557ca8, 0xa826aa96, 0xea6a9a93, 0xffc32c21
0x3d79fd05, 0x72f9e22c, 0xce5c9061, 0x057b9845


  Round 07
  ---------
Inside substw:
b0 = 0x3d, b1 = 0x79, b2 = 0xfd, b3 = 0x05
s0 = 0x27, s1 = 0xb6, s2 = 0x54, s3 = 0x6b
res = 0x27b6546b
Inside substw:
b0 = 0x72, b1 = 0xf9, b2 = 0xe2, b3 = 0x2c
s0 = 0x40, s1 = 0x99, s2 = 0x98, s3 = 0x71
res = 0x40999871
Inside substw:
b0 = 0xce, b1 = 0x5c, b2 = 0x90, b3 = 0x61
s0 = 0x8b, s1 = 0x4a, s2 = 0x60, s3 = 0xef
res = 0x8b4a60ef
Inside substw:
b0 = 0x05, b1 = 0x7b, b2 = 0x98, b3 = 0x45
s0 = 0x6b, s1 = 0x21, s2 = 0x46, s3 = 0x6e
res = 0x6b21466e
SubBytes block in and block out:
0x3d79fd05, 0x72f9e22c, 0xce5c9061, 0x057b9845
0x27b6546b, 0x40999871, 0x8b4a60ef, 0x6b21466e

ShiftRows block in and block out:
0x27b6546b, 0x40999871, 0x8b4a60ef, 0x6b21466e
0x2799606e, 0x404a466b, 0x8b215471, 0x6bb698ef

MixColumns block in and block out:
0x2799606e, 0x404a466b, 0x8b215471, 0x6bb698ef
0xf0c0cc4c, 0x73753b1a, 0x4b449111, 0x6040dc56

AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0xf0c0cc4c, 0x73753b1a, 0x4b449111, 0x6040dc56
0x68057385, 0xcdc82294, 0x6dc8aab6, 0x69a09e42


  Round 08
  ---------
Inside substw:
b0 = 0x68, b1 = 0x05, b2 = 0x73, b3 = 0x85
s0 = 0x45, s1 = 0x6b, s2 = 0x8f, s3 = 0x97
res = 0x456b8f97
Inside substw:
b0 = 0xcd, b1 = 0xc8, b2 = 0x22, b3 = 0x94
s0 = 0xbd, s1 = 0xe8, s2 = 0x93, s3 = 0x22
res = 0xbde89322
Inside substw:
b0 = 0x6d, b1 = 0xc8, b2 = 0xaa, b3 = 0xb6
s0 = 0x3c, s1 = 0xe8, s2 = 0xac, s3 = 0x4e
res = 0x3ce8ac4e
Inside substw:
b0 = 0x69, b1 = 0xa0, b2 = 0x9e, b3 = 0x42
s0 = 0xf9, s1 = 0xe0, s2 = 0x0b, s3 = 0x2c
res = 0xf9e00b2c
SubBytes block in and block out:
0x68057385, 0xcdc82294, 0x6dc8aab6, 0x69a09e42
0x456b8f97, 0xbde89322, 0x3ce8ac4e, 0xf9e00b2c

ShiftRows block in and block out:
0x456b8f97, 0xbde89322, 0x3ce8ac4e, 0xf9e00b2c
0x45e8ac2c, 0xbde80b97, 0x3ce08f22, 0xf96b934e

MixColumns block in and block out:
0x45e8ac2c, 0xbde80b97, 0x3ce08f22, 0xf96b934e
0x294d9ad3, 0xdefce10a, 0xee4fbf6f, 0x89cf7d74

AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x294d9ad3, 0xdefce10a, 0xee4fbf6f, 0x89cf7d74
0x414de17f, 0x6c23d21c, 0x78a6868b, 0xe59ef0f4


  Round 09
  ---------
Inside substw:
b0 = 0x41, b1 = 0x4d, b2 = 0xe1, b3 = 0x7f
s0 = 0x83, s1 = 0xe3, s2 = 0xf8, s3 = 0xd2
res = 0x83e3f8d2
Inside substw:
b0 = 0x6c, b1 = 0x23, b2 = 0xd2, b3 = 0x1c
s0 = 0x50, s1 = 0x26, s2 = 0xb5, s3 = 0x9c
res = 0x5026b59c
Inside substw:
b0 = 0x78, b1 = 0xa6, b2 = 0x86, b3 = 0x8b
s0 = 0xbc, s1 = 0x24, s2 = 0x44, s3 = 0x3d
res = 0xbc24443d
Inside substw:
b0 = 0xe5, b1 = 0x9e, b2 = 0xf0, b3 = 0xf4
s0 = 0xd9, s1 = 0x0b, s2 = 0x8c, s3 = 0xbf
res = 0xd90b8cbf
SubBytes block in and block out:
0x414de17f, 0x6c23d21c, 0x78a6868b, 0xe59ef0f4
0x83e3f8d2, 0x5026b59c, 0xbc24443d, 0xd90b8cbf

ShiftRows block in and block out:
0x83e3f8d2, 0x5026b59c, 0xbc24443d, 0xd90b8cbf
0x832644bf, 0x50248cd2, 0xbc0bf89c, 0xd9e3b53d

MixColumns block in and block out:
0x832644bf, 0x50248cd2, 0xbc0bf89c, 0xd9e3b53d
0x8cbcf799, 0x92451ae7, 0x1a25e30f, 0x1ffd0c5c

AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0x8cbcf799, 0x92451ae7, 0x1a25e30f, 0x1ffd0c5c
0x44a8159d, 0xe4ece16d, 0x4a002322, 0x46388e65


  Round 10
  ---------
Inside substw:
b0 = 0x44, b1 = 0xa8, b2 = 0x15, b3 = 0x9d
s0 = 0x1b, s1 = 0xc2, s2 = 0x59, s3 = 0x5e
res = 0x1bc2595e
Inside substw:
b0 = 0xe4, b1 = 0xec, b2 = 0xe1, b3 = 0x6d
s0 = 0x69, s1 = 0xce, s2 = 0xf8, s3 = 0x3c
res = 0x69cef83c
Inside substw:
b0 = 0x4a, b1 = 0x00, b2 = 0x23, b3 = 0x22
s0 = 0xd6, s1 = 0x63, s2 = 0x26, s3 = 0x93
res = 0xd6632693
Inside substw:
b0 = 0x46, b1 = 0x38, b2 = 0x8e, b3 = 0x65
s0 = 0x5a, s1 = 0x07, s2 = 0x19, s3 = 0x4d
res = 0x5a07194d
SubBytes block in and block out:
0x44a8159d, 0xe4ece16d, 0x4a002322, 0x46388e65
0x1bc2595e, 0x69cef83c, 0xd6632693, 0x5a07194d

ShiftRows block in and block out:
0x1bc2595e, 0x69cef83c, 0xd6632693, 0x5a07194d
0x1bce264d, 0x6963195e, 0xd607593c, 0x5ac2f893

MixColumns block in and block out:
0x1bce264d, 0x6963195e, 0xd607593c, 0x5ac2f893
0x14bb4e5f, 0x30dada7d, 0xdb0f2747, 0x8245dde9

AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x14bb4e5f, 0x30dada7d, 0xdb0f2747, 0x8245dde9
0xcaa82738, 0x5c16800c, 0x212a44d2, 0x143133fc


  Round 11
  ---------
Inside substw:
b0 = 0xca, b1 = 0xa8, b2 = 0x27, b3 = 0x38
s0 = 0x74, s1 = 0xc2, s2 = 0xcc, s3 = 0x07
res = 0x74c2cc07
Inside substw:
b0 = 0x5c, b1 = 0x16, b2 = 0x80, b3 = 0x0c
s0 = 0x4a, s1 = 0x47, s2 = 0xcd, s3 = 0xfe
res = 0x4a47cdfe
Inside substw:
b0 = 0x21, b1 = 0x2a, b2 = 0x44, b3 = 0xd2
s0 = 0xfd, s1 = 0xe5, s2 = 0x1b, s3 = 0xb5
res = 0xfde51bb5
Inside substw:
b0 = 0x14, b1 = 0x31, b2 = 0x33, b3 = 0xfc
s0 = 0xfa, s1 = 0xc7, s2 = 0xc3, s3 = 0xb0
res = 0xfac7c3b0
SubBytes block in and block out:
0xcaa82738, 0x5c16800c, 0x212a44d2, 0x143133fc
0x74c2cc07, 0x4a47cdfe, 0xfde51bb5, 0xfac7c3b0

ShiftRows block in and block out:
0x74c2cc07, 0x4a47cdfe, 0xfde51bb5, 0xfac7c3b0
0x74471bb0, 0x4ae5c307, 0xfdc7ccfe, 0xfac2cdb5

MixColumns block in and block out:
0x74471bb0, 0x4ae5c307, 0xfdc7ccfe, 0xfac2cdb5
0x8a67cebb, 0x64c23bf6, 0x81d9a0f0, 0xca9c7d6b

AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x8a67cebb, 0x64c23bf6, 0x81d9a0f0, 0xca9c7d6b
0xd2e104e6, 0x4aed0a21, 0xffd3510a, 0xed530ea8


  Round 12
  ---------
Inside substw:
b0 = 0xd2, b1 = 0xe1, b2 = 0x04, b3 = 0xe6
s0 = 0xb5, s1 = 0xf8, s2 = 0xf2, s3 = 0x8e
res = 0xb5f8f28e
Inside substw:
b0 = 0x4a, b1 = 0xed, b2 = 0x0a, b3 = 0x21
s0 = 0xd6, s1 = 0x55, s2 = 0x67, s3 = 0xfd
res = 0xd65567fd
Inside substw:
b0 = 0xff, b1 = 0xd3, b2 = 0x51, b3 = 0x0a
s0 = 0x16, s1 = 0x66, s2 = 0xd1, s3 = 0x67
res = 0x1666d167
Inside substw:
b0 = 0xed, b1 = 0x53, b2 = 0x0e, b3 = 0xa8
s0 = 0x55, s1 = 0xed, s2 = 0xab, s3 = 0xc2
res = 0x55edabc2
SubBytes block in and block out:
0xd2e104e6, 0x4aed0a21, 0xffd3510a, 0xed530ea8
0xb5f8f28e, 0xd65567fd, 0x1666d167, 0x55edabc2

ShiftRows block in and block out:
0xb5f8f28e, 0xd65567fd, 0x1666d167, 0x55edabc2
0xb555d1c2, 0xd666ab8e, 0x16edf2fd, 0x55f86767

MixColumns block in and block out:
0xb555d1c2, 0xd666ab8e, 0x16edf2fd, 0x55f86767
0x9db504df, 0x387274ab, 0x0f2718c4, 0xb970caae

AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0x9db504df, 0x387274ab, 0x0f2718c4, 0xb970caae
0xe9294374, 0x20226971, 0xed52668b, 0xcd715af4


  Round 13
  ---------
Inside substw:
b0 = 0xe9, b1 = 0x29, b2 = 0x43, b3 = 0x74
s0 = 0x1e, s1 = 0xa5, s2 = 0x1a, s3 = 0x92
res = 0x1ea51a92
Inside substw:
b0 = 0x20, b1 = 0x22, b2 = 0x69, b3 = 0x71
s0 = 0xb7, s1 = 0x93, s2 = 0xf9, s3 = 0xa3
res = 0xb793f9a3
Inside substw:
b0 = 0xed, b1 = 0x52, b2 = 0x66, b3 = 0x8b
s0 = 0x55, s1 = 0x00, s2 = 0x33, s3 = 0x3d
res = 0x5500333d
Inside substw:
b0 = 0xcd, b1 = 0x71, b2 = 0x5a, b3 = 0xf4
s0 = 0xbd, s1 = 0xa3, s2 = 0xbe, s3 = 0xbf
res = 0xbda3bebf
SubBytes block in and block out:
0xe9294374, 0x20226971, 0xed52668b, 0xcd715af4
0x1ea51a92, 0xb793f9a3, 0x5500333d, 0xbda3bebf

ShiftRows block in and block out:
0x1ea51a92, 0xb793f9a3, 0x5500333d, 0xbda3bebf
0x1e9333bf, 0xb700be92, 0x55a31aa3, 0xbda5f93d

MixColumns block in and block out:
0x1e9333bf, 0xb700be92, 0x55a31aa3, 0xbda5f93d
0x1ec931e7, 0x59fc7d43, 0xed853c1b, 0x51c1b6fa

AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0x1ec931e7, 0x59fc7d43, 0xed853c1b, 0x51c1b6fa
0xd4339b04, 0xbd29e677, 0x775a56d5, 0xecd1aff7

  Final round.
Inside substw:
b0 = 0xd4, b1 = 0x33, b2 = 0x9b, b3 = 0x04
s0 = 0x48, s1 = 0xc3, s2 = 0x14, s3 = 0xf2
res = 0x48c314f2
Inside substw:
b0 = 0xbd, b1 = 0x29, b2 = 0xe6, b3 = 0x77
s0 = 0x7a, s1 = 0xa5, s2 = 0x8e, s3 = 0xf5
res = 0x7aa58ef5
Inside substw:
b0 = 0x77, b1 = 0x5a, b2 = 0x56, b3 = 0xd5
s0 = 0xf5, s1 = 0xbe, s2 = 0xb1, s3 = 0x03
res = 0xf5beb103
Inside substw:
b0 = 0xec, b1 = 0xd1, b2 = 0xaf, b3 = 0xf7
s0 = 0xce, s1 = 0x3e, s2 = 0x79, s3 = 0x68
res = 0xce3e7968
SubBytes block in and block out:
0xd4339b04, 0xbd29e677, 0x775a56d5, 0xecd1aff7
0x48c314f2, 0x7aa58ef5, 0xf5beb103, 0xce3e7968

ShiftRows block in and block out:
0x48c314f2, 0x7aa58ef5, 0xf5beb103, 0xce3e7968
0x48a5b168, 0x7abe79f2, 0xf53e14f5, 0xcec38e03

AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0x48a5b168, 0x7abe79f2, 0xf53e14f5, 0xcec38e03
0xb6ed21b9, 0x9ca6f4f9, 0xf153e7b1, 0xbeafed1d

OK. Result matches expected.

Test 3 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xf69f2445, 0xdf4f9b17, 0xad2b417b, 0xe66c3710
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0xf69f2445, 0xdf4f9b17, 0xad2b417b, 0xe66c3710
0x96a2cf55, 0xca85eaa9, 0x8658ef8b, 0x63114091


  Round 01
  ---------
Inside substw:
b0 = 0x96, b1 = 0xa2, b2 = 0xcf, b3 = 0x55
s0 = 0x90, s1 = 0x3a, s2 = 0x8a, s3 = 0xfc
res = 0x903a8afc
Inside substw:
b0 = 0xca, b1 = 0x85, b2 = 0xea, b3 = 0xa9
s0 = 0x74, s1 = 0x97, s2 = 0x87, s3 = 0xd3
res = 0x749787d3
Inside substw:
b0 = 0x86, b1 = 0x58, b2 = 0xef, b3 = 0x8b
s0 = 0x44, s1 = 0x6a, s2 = 0xdf, s3 = 0x3d
res = 0x446adf3d
Inside substw:
b0 = 0x63, b1 = 0x11, b2 = 0x40, b3 = 0x91
s0 = 0xfb, s1 = 0x82, s2 = 0x09, s3 = 0x81
res = 0xfb820981
SubBytes block in and block out:
0x96a2cf55, 0xca85eaa9, 0x8658ef8b, 0x63114091
0x903a8afc, 0x749787d3, 0x446adf3d, 0xfb820981

ShiftRows block in and block out:
0x903a8afc, 0x749787d3, 0x446adf3d, 0xfb820981
0x9097df81, 0x746a09fc, 0x44828ad3, 0xfb3a873d

MixColumns block in and block out:
0x9097df81, 0x746a09fc, 0x44828ad3, 0xfb3a873d
0xc75e3afa, 0xa347131c, 0x4c0da779, 0x192093d1

AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xc75e3afa, 0xa347131c, 0x4c0da779, 0x192093d1
0xd86b16fd, 0x98261bcb, 0x6195b7da, 0x10344c25


  Round 02
  ---------
Inside substw:
b0 = 0xd8, b1 = 0x6b, b2 = 0x16, b3 = 0xfd
s0 = 0x61, s1 = 0x7f, s2 = 0x47, s3 = 0x54
res = 0x617f4754
Inside substw:
b0 = 0x98, b1 = 0x26, b2 = 0x1b, b3 = 0xcb
s0 = 0x46, s1 = 0xf7, s2 = 0xaf, s3 = 0x1f
res = 0x46f7af1f
Inside substw:
b0 = 0x61, b1 = 0x95, b2 = 0xb7, b3 = 0xda
s0 = 0xef, s1 = 0x2a, s2 = 0xa9, s3 = 0x57
res = 0xef2aa957
Inside substw:
b0 = 0x10, b1 = 0x34, b2 = 0x4c, b3 = 0x25
s0 = 0xca, s1 = 0x18, s2 = 0x29, s3 = 0x3f
res = 0xca18293f
SubBytes block in and block out:
0xd86b16fd, 0x98261bcb, 0x6195b7da, 0x10344c25
0x617f4754, 0x46f7af1f, 0xef2aa957, 0xca18293f

ShiftRows block in and block out:
0x617f4754, 0x46f7af1f, 0xef2aa957, 0xca18293f
0x61f7a93f, 0x462a2954, 0xef18471f, 0xca7faf57

MixColumns block in and block out:
0x61f7a93f, 0x462a2954, 0xef18471f, 0xca7faf57
0x564b9e83, 0x8f3dc261, 0xb509584b, 0xf689093b

AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0x564b9e83, 0x8f3dc261, 0xb509584b, 0xf689093b
0xcde8ca92, 0x0154e7ce, 0x1013d314, 0xd6eef5e5


  Round 03
  ---------
Inside substw:
b0 = 0xcd, b1 = 0xe8, b2 = 0xca, b3 = 0x92
s0 = 0xbd, s1 = 0x9b, s2 = 0x74, s3 = 0x4f
res = 0xbd9b744f
Inside substw:
b0 = 0x01, b1 = 0x54, b2 = 0xe7, b3 = 0xce
s0 = 0x7c, s1 = 0x20, s2 = 0x94, s3 = 0x8b
res = 0x7c20948b
Inside substw:
b0 = 0x10, b1 = 0x13, b2 = 0xd3, b3 = 0x14
s0 = 0xca, s1 = 0x7d, s2 = 0x66, s3 = 0xfa
res = 0xca7d66fa
Inside substw:
b0 = 0xd6, b1 = 0xee, b2 = 0xf5, b3 = 0xe5
s0 = 0xf6, s1 = 0x28, s2 = 0xe6, s3 = 0xd9
res = 0xf628e6d9
SubBytes block in and block out:
0xcde8ca92, 0x0154e7ce, 0x1013d314, 0xd6eef5e5
0xbd9b744f, 0x7c20948b, 0xca7d66fa, 0xf628e6d9

ShiftRows block in and block out:
0xbd9b744f, 0x7c20948b, 0xca7d66fa, 0xf628e6d9
0xbd2066d9, 0x7c7de64f, 0xca28748b, 0xf69b94fa

MixColumns block in and block out:
0xbd2066d9, 0x7c7de64f, 0xca28748b, 0xf69b94fa
0xbe8e2133, 0xd6f80781, 0x088d8c14, 0x2f864be1

AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xbe8e2133, 0xd6f80781, 0x088d8c14, 0x2f864be1
0x163ebd29, 0x4529934c, 0xb6c4087a, 0x98db107b


  Round 04
  ---------
Inside substw:
b0 = 0x16, b1 = 0x3e, b2 = 0xbd, b3 = 0x29
s0 = 0x47, s1 = 0xb2, s2 = 0x7a, s3 = 0xa5
res = 0x47b27aa5
Inside substw:
b0 = 0x45, b1 = 0x29, b2 = 0x93, b3 = 0x4c
s0 = 0x6e, s1 = 0xa5, s2 = 0xdc, s3 = 0x29
res = 0x6ea5dc29
Inside substw:
b0 = 0xb6, b1 = 0xc4, b2 = 0x08, b3 = 0x7a
s0 = 0x4e, s1 = 0x1c, s2 = 0x30, s3 = 0xda
res = 0x4e1c30da
Inside substw:
b0 = 0x98, b1 = 0xdb, b2 = 0x10, b3 = 0x7b
s0 = 0x46, s1 = 0xb9, s2 = 0xca, s3 = 0x21
res = 0x46b9ca21
SubBytes block in and block out:
0x163ebd29, 0x4529934c, 0xb6c4087a, 0x98db107b
0x47b27aa5, 0x6ea5dc29, 0x4e1c30da, 0x46b9ca21

ShiftRows block in and block out:
0x47b27aa5, 0x6ea5dc29, 0x4e1c30da, 0x46b9ca21
0x47a53021, 0x6e1ccaa5, 0x4eb97a29, 0x46b2dcda

MixColumns block in and block out:
0x47a53021, 0x6e1ccaa5, 0x4eb97a29, 0x46b2dcda
0x6b67e11e, 0x97b60935, 0x1f807843, 0x479c220b

AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0x6b67e11e, 0x97b60935, 0x1f807843, 0x479c220b
0xbefd0da6, 0xcc45c022, 0xe1693a0b, 0x99129c9d


  Round 05
  ---------
Inside substw:
b0 = 0xbe, b1 = 0xfd, b2 = 0x0d, b3 = 0xa6
s0 = 0xae, s1 = 0x54, s2 = 0xd7, s3 = 0x24
res = 0xae54d724
Inside substw:
b0 = 0xcc, b1 = 0x45, b2 = 0xc0, b3 = 0x22
s0 = 0x4b, s1 = 0x6e, s2 = 0xba, s3 = 0x93
res = 0x4b6eba93
Inside substw:
b0 = 0xe1, b1 = 0x69, b2 = 0x3a, b3 = 0x0b
s0 = 0xf8, s1 = 0xf9, s2 = 0x80, s3 = 0x2b
res = 0xf8f9802b
Inside substw:
b0 = 0x99, b1 = 0x12, b2 = 0x9c, b3 = 0x9d
s0 = 0xee, s1 = 0xc9, s2 = 0xde, s3 = 0x5e
res = 0xeec9de5e
SubBytes block in and block out:
0xbefd0da6, 0xcc45c022, 0xe1693a0b, 0x99129c9d
0xae54d724, 0x4b6eba93, 0xf8f9802b, 0xeec9de5e

ShiftRows block in and block out:
0xae54d724, 0x4b6eba93, 0xf8f9802b, 0xeec9de5e
0xae6e805e, 0x4bf9de24, 0xf8c9d793, 0xee54ba2b

MixColumns block in and block out:
0xae6e805e, 0x4bf9de24, 0xf8c9d793, 0xee54ba2b
0x2bb739bb, 0x7cff79b2, 0xef802a30, 0xaab8a891

AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x2bb739bb, 0x7cff79b2, 0xef802a30, 0xaab8a891
0x9e1e0b31, 0x5a87dff5, 0x77b10819, 0x85d4d122


  Round 06
  ---------
Inside substw:
b0 = 0x9e, b1 = 0x1e, b2 = 0x0b, b3 = 0x31
s0 = 0x0b, s1 = 0x72, s2 = 0x2b, s3 = 0xc7
res = 0x0b722bc7
Inside substw:
b0 = 0x5a, b1 = 0x87, b2 = 0xdf, b3 = 0xf5
s0 = 0xbe, s1 = 0x17, s2 = 0x9e, s3 = 0xe6
res = 0xbe179ee6
Inside substw:
b0 = 0x77, b1 = 0xb1, b2 = 0x08, b3 = 0x19
s0 = 0xf5, s1 = 0xc8, s2 = 0x30, s3 = 0xd4
res = 0xf5c830d4
Inside substw:
b0 = 0x85, b1 = 0xd4, b2 = 0xd1, b3 = 0x22
s0 = 0x97, s1 = 0x48, s2 = 0x3e, s3 = 0x93
res = 0x97483e93
SubBytes block in and block out:
0x9e1e0b31, 0x5a87dff5, 0x77b10819, 0x85d4d122
0x0b722bc7, 0xbe179ee6, 0xf5c830d4, 0x97483e93

ShiftRows block in and block out:
0x0b722bc7, 0xbe179ee6, 0xf5c830d4, 0x97483e93
0x0b173093, 0xbec83ec7, 0xf5482be6, 0x97729ed4

MixColumns block in and block out:
0x0b173093, 0xbec83ec7, 0xf5482be6, 0x97729ed4
0x8ce6d207, 0xddb058ba, 0xe4fedab0, 0xe91ea5fd

AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x8ce6d207, 0xddb058ba, 0xe4fedab0, 0xe91ea5fd
0x0dca53aa, 0x076f1000, 0xc0c8d042, 0x13a61199


  Round 07
  ---------
Inside substw:
b0 = 0x0d, b1 = 0xca, b2 = 0x53, b3 = 0xaa
s0 = 0xd7, s1 = 0x74, s2 = 0xed, s3 = 0xac
res = 0xd774edac
Inside substw:
b0 = 0x07, b1 = 0x6f, b2 = 0x10, b3 = 0x00
s0 = 0xc5, s1 = 0xa8, s2 = 0xca, s3 = 0x63
res = 0xc5a8ca63
Inside substw:
b0 = 0xc0, b1 = 0xc8, b2 = 0xd0, b3 = 0x42
s0 = 0xba, s1 = 0xe8, s2 = 0x70, s3 = 0x2c
res = 0xbae8702c
Inside substw:
b0 = 0x13, b1 = 0xa6, b2 = 0x11, b3 = 0x99
s0 = 0x7d, s1 = 0x24, s2 = 0x82, s3 = 0xee
res = 0x7d2482ee
SubBytes block in and block out:
0x0dca53aa, 0x076f1000, 0xc0c8d042, 0x13a61199
0xd774edac, 0xc5a8ca63, 0xbae8702c, 0x7d2482ee

ShiftRows block in and block out:
0xd774edac, 0xc5a8ca63, 0xbae8702c, 0x7d2482ee
0xd7a870ee, 0xc5e882ac, 0xba24ed63, 0x7d74ca2c

MixColumns block in and block out:
0xd7a870ee, 0xc5e882ac, 0xba24ed63, 0x7d74ca2c
0xc8e2b67d, 0x9c3fdd7d, 0x8dbdfada, 0x80fcf261

AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0xc8e2b67d, 0x9c3fdd7d, 0x8dbdfada, 0x80fcf261
0x502709b4, 0x2282c4f3, 0xab31c17d, 0x891cb075


  Round 08
  ---------
Inside substw:
b0 = 0x50, b1 = 0x27, b2 = 0x09, b3 = 0xb4
s0 = 0x53, s1 = 0xcc, s2 = 0x01, s3 = 0x8d
res = 0x53cc018d
Inside substw:
b0 = 0x22, b1 = 0x82, b2 = 0xc4, b3 = 0xf3
s0 = 0x93, s1 = 0x13, s2 = 0x1c, s3 = 0x0d
res = 0x93131c0d
Inside substw:
b0 = 0xab, b1 = 0x31, b2 = 0xc1, b3 = 0x7d
s0 = 0x62, s1 = 0xc7, s2 = 0x78, s3 = 0xff
res = 0x62c778ff
Inside substw:
b0 = 0x89, b1 = 0x1c, b2 = 0xb0, b3 = 0x75
s0 = 0xa7, s1 = 0x9c, s2 = 0xe7, s3 = 0x9d
res = 0xa79ce79d
SubBytes block in and block out:
0x502709b4, 0x2282c4f3, 0xab31c17d, 0x891cb075
0x53cc018d, 0x93131c0d, 0x62c778ff, 0xa79ce79d

ShiftRows block in and block out:
0x53cc018d, 0x93131c0d, 0x62c778ff, 0xa79ce79d
0x5313789d, 0x93c7e78d, 0x629c010d, 0xa7cc1cff

MixColumns block in and block out:
0x5313789d, 0x93c7e78d, 0x629c010d, 0xa7cc1cff
0x76600cbf, 0x05b90d8f, 0x774feb21, 0xf9ff49c7

AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x76600cbf, 0x05b90d8f, 0x774feb21, 0xf9ff49c7
0x1e607713, 0xb7663e99, 0xe1a6d2c5, 0x95aec447


  Round 09
  ---------
Inside substw:
b0 = 0x1e, b1 = 0x60, b2 = 0x77, b3 = 0x13
s0 = 0x72, s1 = 0xd0, s2 = 0xf5, s3 = 0x7d
res = 0x72d0f57d
Inside substw:
b0 = 0xb7, b1 = 0x66, b2 = 0x3e, b3 = 0x99
s0 = 0xa9, s1 = 0x33, s2 = 0xb2, s3 = 0xee
res = 0xa933b2ee
Inside substw:
b0 = 0xe1, b1 = 0xa6, b2 = 0xd2, b3 = 0xc5
s0 = 0xf8, s1 = 0x24, s2 = 0xb5, s3 = 0xa6
res = 0xf824b5a6
Inside substw:
b0 = 0x95, b1 = 0xae, b2 = 0xc4, b3 = 0x47
s0 = 0x2a, s1 = 0xe4, s2 = 0x1c, s3 = 0xa0
res = 0x2ae41ca0
SubBytes block in and block out:
0x1e607713, 0xb7663e99, 0xe1a6d2c5, 0x95aec447
0x72d0f57d, 0xa933b2ee, 0xf824b5a6, 0x2ae41ca0

ShiftRows block in and block out:
0x72d0f57d, 0xa933b2ee, 0xf824b5a6, 0x2ae41ca0
0x7233b5a0, 0xa9241c7d, 0xf8e4f5ee, 0x2ad0b2a6

MixColumns block in and block out:
0x7233b5a0, 0xa9241c7d, 0xf8e4f5ee, 0x2ad0b2a6
0xa470cb4b, 0x44b83222, 0xc7c1c4c5, 0x2bfa744b

AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xa470cb4b, 0x44b83222, 0xc7c1c4c5, 0x2bfa744b
0x6c64294f, 0x3211c9a8, 0x97e404e8, 0x723ff672


  Round 10
  ---------
Inside substw:
b0 = 0x6c, b1 = 0x64, b2 = 0x29, b3 = 0x4f
s0 = 0x50, s1 = 0x43, s2 = 0xa5, s3 = 0x84
res = 0x5043a584
Inside substw:
b0 = 0x32, b1 = 0x11, b2 = 0xc9, b3 = 0xa8
s0 = 0x23, s1 = 0x82, s2 = 0xdd, s3 = 0xc2
res = 0x2382ddc2
Inside substw:
b0 = 0x97, b1 = 0xe4, b2 = 0x04, b3 = 0xe8
s0 = 0x88, s1 = 0x69, s2 = 0xf2, s3 = 0x9b
res = 0x8869f29b
Inside substw:
b0 = 0x72, b1 = 0x3f, b2 = 0xf6, b3 = 0x72
s0 = 0x40, s1 = 0x75, s2 = 0x42, s3 = 0x40
res = 0x40754240
SubBytes block in and block out:
0x6c64294f, 0x3211c9a8, 0x97e404e8, 0x723ff672
0x5043a584, 0x2382ddc2, 0x8869f29b, 0x40754240

ShiftRows block in and block out:
0x5043a584, 0x2382ddc2, 0x8869f29b, 0x40754240
0x5082f240, 0x23694284, 0x8875a5c2, 0x4043dd9b

MixColumns block in and block out:
0x5082f240, 0x23694284, 0x8875a5c2, 0x4043dd9b
0x8f02ed00, 0x3bb3595d, 0xf354f1cc, 0x03211473

AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x8f02ed00, 0x3bb3595d, 0xf354f1cc, 0x03211473
0x51118467, 0x577f032c, 0x09719259, 0x9555fa66


  Round 11
  ---------
Inside substw:
b0 = 0x51, b1 = 0x11, b2 = 0x84, b3 = 0x67
s0 = 0xd1, s1 = 0x82, s2 = 0x5f, s3 = 0x85
res = 0xd1825f85
Inside substw:
b0 = 0x57, b1 = 0x7f, b2 = 0x03, b3 = 0x2c
s0 = 0x5b, s1 = 0xd2, s2 = 0x7b, s3 = 0x71
res = 0x5bd27b71
Inside substw:
b0 = 0x09, b1 = 0x71, b2 = 0x92, b3 = 0x59
s0 = 0x01, s1 = 0xa3, s2 = 0x4f, s3 = 0xcb
res = 0x01a34fcb
Inside substw:
b0 = 0x95, b1 = 0x55, b2 = 0xfa, b3 = 0x66
s0 = 0x2a, s1 = 0xfc, s2 = 0x2d, s3 = 0x33
res = 0x2afc2d33
SubBytes block in and block out:
0x51118467, 0x577f032c, 0x09719259, 0x9555fa66
0xd1825f85, 0x5bd27b71, 0x01a34fcb, 0x2afc2d33

ShiftRows block in and block out:
0xd1825f85, 0x5bd27b71, 0x01a34fcb, 0x2afc2d33
0xd1d24f33, 0x5ba32d85, 0x01fc5f71, 0x2a827bcb

MixColumns block in and block out:
0xd1d24f33, 0x5ba32d85, 0x01fc5f71, 0x2a827bcb
0xa88cc893, 0xe0f43672, 0x3372d042, 0x7973180a

AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0xa88cc893, 0xe0f43672, 0x3372d042, 0x7973180a
0xf00a02ce, 0xcedb07a5, 0x4d7821b8, 0x5ebc6bc9


  Round 12
  ---------
Inside substw:
b0 = 0xf0, b1 = 0x0a, b2 = 0x02, b3 = 0xce
s0 = 0x8c, s1 = 0x67, s2 = 0x77, s3 = 0x8b
res = 0x8c67778b
Inside substw:
b0 = 0xce, b1 = 0xdb, b2 = 0x07, b3 = 0xa5
s0 = 0x8b, s1 = 0xb9, s2 = 0xc5, s3 = 0x06
res = 0x8bb9c506
Inside substw:
b0 = 0x4d, b1 = 0x78, b2 = 0x21, b3 = 0xb8
s0 = 0xe3, s1 = 0xbc, s2 = 0xfd, s3 = 0x6c
res = 0xe3bcfd6c
Inside substw:
b0 = 0x5e, b1 = 0xbc, b2 = 0x6b, b3 = 0xc9
s0 = 0x58, s1 = 0x65, s2 = 0x7f, s3 = 0xdd
res = 0x58657fdd
SubBytes block in and block out:
0xf00a02ce, 0xcedb07a5, 0x4d7821b8, 0x5ebc6bc9
0x8c67778b, 0x8bb9c506, 0xe3bcfd6c, 0x58657fdd

ShiftRows block in and block out:
0x8c67778b, 0x8bb9c506, 0xe3bcfd6c, 0x58657fdd
0x8cb9fddd, 0x8bbc7f8b, 0xe3657706, 0x5867c56c

MixColumns block in and block out:
0x8cb9fddd, 0x8bbc7f8b, 0xe3657706, 0x5867c56c
0xf324a86a, 0x26e24f48, 0x03b66220, 0xb0ae1a92

AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xf324a86a, 0x26e24f48, 0x03b66220, 0xb0ae1a92
0x87b8efc1, 0x3eb25292, 0xe1c31c6f, 0xc4af8ac8


  Round 13
  ---------
Inside substw:
b0 = 0x87, b1 = 0xb8, b2 = 0xef, b3 = 0xc1
s0 = 0x17, s1 = 0x6c, s2 = 0xdf, s3 = 0x78
res = 0x176cdf78
Inside substw:
b0 = 0x3e, b1 = 0xb2, b2 = 0x52, b3 = 0x92
s0 = 0xb2, s1 = 0x37, s2 = 0x00, s3 = 0x4f
res = 0xb237004f
Inside substw:
b0 = 0xe1, b1 = 0xc3, b2 = 0x1c, b3 = 0x6f
s0 = 0xf8, s1 = 0x2e, s2 = 0x9c, s3 = 0xa8
res = 0xf82e9ca8
Inside substw:
b0 = 0xc4, b1 = 0xaf, b2 = 0x8a, b3 = 0xc8
s0 = 0x1c, s1 = 0x79, s2 = 0x7e, s3 = 0xe8
res = 0x1c797ee8
SubBytes block in and block out:
0x87b8efc1, 0x3eb25292, 0xe1c31c6f, 0xc4af8ac8
0x176cdf78, 0xb237004f, 0xf82e9ca8, 0x1c797ee8

ShiftRows block in and block out:
0x176cdf78, 0xb237004f, 0xf82e9ca8, 0x1c797ee8
0x17379ce8, 0xb22e7e78, 0xf879df4f, 0x1c6c00a8

MixColumns block in and block out:
0x17379ce8, 0xb22e7e78, 0xf879df4f, 0x1c6c00a8
0x032e2059, 0x0b14e86d, 0xf03ff52b, 0x246c9303

AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0x032e2059, 0x0b14e86d, 0xf03ff52b, 0x246c9303
0xc9d48aba, 0xefc17359, 0x6ae09fe5, 0x997c8a0e

  Final round.
Inside substw:
b0 = 0xc9, b1 = 0xd4, b2 = 0x8a, b3 = 0xba
s0 = 0xdd, s1 = 0x48, s2 = 0x7e, s3 = 0xf4
res = 0xdd487ef4
Inside substw:
b0 = 0xef, b1 = 0xc1, b2 = 0x73, b3 = 0x59
s0 = 0xdf, s1 = 0x78, s2 = 0x8f, s3 = 0xcb
res = 0xdf788fcb
Inside substw:
b0 = 0x6a, b1 = 0xe0, b2 = 0x9f, b3 = 0xe5
s0 = 0x02, s1 = 0xe1, s2 = 0xdb, s3 = 0xd9
res = 0x02e1dbd9
Inside substw:
b0 = 0x99, b1 = 0x7c, b2 = 0x8a, b3 = 0x0e
s0 = 0xee, s1 = 0x10, s2 = 0x7e, s3 = 0xab
res = 0xee107eab
SubBytes block in and block out:
0xc9d48aba, 0xefc17359, 0x6ae09fe5, 0x997c8a0e
0xdd487ef4, 0xdf788fcb, 0x02e1dbd9, 0xee107eab

ShiftRows block in and block out:
0xdd487ef4, 0xdf788fcb, 0x02e1dbd9, 0xee107eab
0xdd78dbab, 0xdfe17ef4, 0x02107ecb, 0xee488fd9

AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0xdd78dbab, 0xdfe17ef4, 0x02107ecb, 0xee488fd9
0x23304b7a, 0x39f9f3ff, 0x067d8d8f, 0x9e24ecc7

OK. Result matches expected.


   AES Decipher tests
   ==================
Test 0 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x3ad77bb4, 0x0d7a3660, 0xa89ecaf3, 0x2466ef97
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial, partial round.
AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0x3ad77bb4, 0x0d7a3660, 0xa89ecaf3, 0x2466ef97
0xeac3821c, 0xc49413e9, 0x49a1c63b, 0x9205e331

Inverse ShiftRows block in and block out:
0xeac3821c, 0xc49413e9, 0x49a1c63b, 0x9205e331
0xea05c6e9, 0xc4c3e33b, 0x49948231, 0x92a1131c

Inside inv_substw:
b0 = 0xea, b1 = 0x05, b2 = 0xc6, b3 = 0xe9
s0 = 0xbb, s1 = 0x36, s2 = 0xc7, s3 = 0xeb
res = 0xbb36c7eb
Inside inv_substw:
b0 = 0xc4, b1 = 0xc3, b2 = 0xe3, b3 = 0x3b
s0 = 0x88, s1 = 0x33, s2 = 0x4d, s3 = 0x49
res = 0x88334d49
Inside inv_substw:
b0 = 0x49, b1 = 0x94, b2 = 0x82, b3 = 0x31
s0 = 0xa4, s1 = 0xe7, s2 = 0x11, s3 = 0x2e
res = 0xa4e7112e
Inside inv_substw:
b0 = 0x92, b1 = 0xa1, b2 = 0x13, b3 = 0x1c
s0 = 0x74, s1 = 0xf1, s2 = 0x82, s3 = 0xc4
res = 0x74f182c4
Inverse SubBytes block in and block out:
0xea05c6e9, 0xc4c3e33b, 0x49948231, 0x92a1131c
0xbb36c7eb, 0x88334d49, 0xa4e7112e, 0x74f182c4


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xbb36c7eb, 0x88334d49, 0xa4e7112e, 0x74f182c4
0x1741a118, 0x91c99168, 0x8c36386f, 0x23ad82aa

Inverse MixColumns block in and block out:
0x1741a118, 0x91c99168, 0x8c36386f, 0x23ad82aa
0x8333f0af, 0xff15a6ed, 0xc191b409, 0x770e815e

Inverse ShiftRows block in and block out:
0x8333f0af, 0xff15a6ed, 0xc191b409, 0x770e815e
0x830eb4ed, 0xff338109, 0xc115f05e, 0x7791a6af

Inside inv_substw:
b0 = 0x83, b1 = 0x0e, b2 = 0xb4, b3 = 0xed
s0 = 0x41, s1 = 0xd7, s2 = 0xc6, s3 = 0x53
res = 0x41d7c653
Inside inv_substw:
b0 = 0xff, b1 = 0x33, b2 = 0x81, b3 = 0x09
s0 = 0x7d, s1 = 0x66, s2 = 0x91, s3 = 0x40
res = 0x7d669140
Inside inv_substw:
b0 = 0xc1, b1 = 0x15, b2 = 0xf0, b3 = 0x5e
s0 = 0xdd, s1 = 0x2f, s2 = 0x17, s3 = 0x9d
res = 0xdd2f179d
Inside inv_substw:
b0 = 0x77, b1 = 0x91, b2 = 0xa6, b3 = 0xaf
s0 = 0x02, s1 = 0xac, s2 = 0xc5, s3 = 0x1b
res = 0x02acc51b
Inverse SubBytes block in and block out:
0x830eb4ed, 0xff338109, 0xc115f05e, 0x7791a6af
0x41d7c653, 0x7d669140, 0xdd2f179d, 0x02acc51b


  Round 02
  ---------
AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0x41d7c653, 0x7d669140, 0xdd2f179d, 0x02acc51b
0xab05b572, 0xc8eb2b92, 0xec04e2fd, 0x7d21ec34

Inverse MixColumns block in and block out:
0xab05b572, 0xc8eb2b92, 0xec04e2fd, 0x7d21ec34
0x98b55410, 0x09a9c5ff, 0x1114ea18, 0x7f3cfd3a

Inverse ShiftRows block in and block out:
0x98b55410, 0x09a9c5ff, 0x1114ea18, 0x7f3cfd3a
0x983ceaff, 0x09b5fd18, 0x11a9543a, 0x7f14c510

Inside inv_substw:
b0 = 0x98, b1 = 0x3c, b2 = 0xea, b3 = 0xff
s0 = 0xe2, s1 = 0x6d, s2 = 0xbb, s3 = 0x7d
res = 0xe26dbb7d
Inside inv_substw:
b0 = 0x09, b1 = 0xb5, b2 = 0xfd, b3 = 0x18
s0 = 0x40, s1 = 0xd2, s2 = 0x21, s3 = 0x34
res = 0x40d22134
Inside inv_substw:
b0 = 0x11, b1 = 0xa9, b2 = 0x54, b3 = 0x3a
s0 = 0xe3, s1 = 0xb7, s2 = 0xfd, s3 = 0xa2
res = 0xe3b7fda2
Inside inv_substw:
b0 = 0x7f, b1 = 0x14, b2 = 0xc5, b3 = 0x10
s0 = 0x6b, s1 = 0x9b, s2 = 0x07, s3 = 0x7c
res = 0x6b9b077c
Inverse SubBytes block in and block out:
0x983ceaff, 0x09b5fd18, 0x11a9543a, 0x7f14c510
0xe26dbb7d, 0x40d22134, 0xe3b7fda2, 0x6b9b077c


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xe26dbb7d, 0x40d22134, 0xe3b7fda2, 0x6b9b077c
0xac394c73, 0x1f8de8c7, 0x6711b210, 0x253ddb33

Inverse MixColumns block in and block out:
0xac394c73, 0x1f8de8c7, 0x6711b210, 0x253ddb33
0xbd6d1268, 0xf356657d, 0xdc66bad4, 0xf1e3f416

Inverse ShiftRows block in and block out:
0xbd6d1268, 0xf356657d, 0xdc66bad4, 0xf1e3f416
0xbde3ba7d, 0xf36df4d4, 0xdc561216, 0xf1666568

Inside inv_substw:
b0 = 0xbd, b1 = 0xe3, b2 = 0xba, b3 = 0x7d
s0 = 0xcd, s1 = 0x4d, s2 = 0xc0, s3 = 0x13
res = 0xcd4dc013
Inside inv_substw:
b0 = 0xf3, b1 = 0x6d, b2 = 0xf4, b3 = 0xd4
s0 = 0x7e, s1 = 0xb3, s2 = 0xba, s3 = 0x19
res = 0x7eb3ba19
Inside inv_substw:
b0 = 0xdc, b1 = 0x56, b2 = 0x12, b3 = 0x16
s0 = 0x93, s1 = 0xb9, s2 = 0x39, s3 = 0xff
res = 0x93b939ff
Inside inv_substw:
b0 = 0xf1, b1 = 0x66, b2 = 0x65, b3 = 0x68
s0 = 0x2b, s1 = 0xd3, s2 = 0xbc, s3 = 0xf7
res = 0x2bd3bcf7
Inverse SubBytes block in and block out:
0xbde3ba7d, 0xf36df4d4, 0xdc561216, 0xf1666568
0xcd4dc013, 0x7eb3ba19, 0x93b939ff, 0x2bd3bcf7


  Round 04
  ---------
AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0xcd4dc013, 0x7eb3ba19, 0x93b939ff, 0x2bd3bcf7
0xa0c56369, 0x6fb884e4, 0x4840bfbe, 0xe1d32f0a

Inverse MixColumns block in and block out:
0xa0c56369, 0x6fb884e4, 0x4840bfbe, 0xe1d32f0a
0x712e6c5c, 0x23d3bdfa, 0xe8310ddd, 0x3fd6df21

Inverse ShiftRows block in and block out:
0x712e6c5c, 0x23d3bdfa, 0xe8310ddd, 0x3fd6df21
0x71d60dfa, 0x232edfdd, 0xe8d36c21, 0x3f31bd5c

Inside inv_substw:
b0 = 0x71, b1 = 0xd6, b2 = 0x0d, b3 = 0xfa
s0 = 0x2c, s1 = 0x4a, s2 = 0xf3, s3 = 0x14
res = 0x2c4af314
Inside inv_substw:
b0 = 0x23, b1 = 0x2e, b2 = 0xdf, b3 = 0xdd
s0 = 0x32, s1 = 0xc3, s2 = 0xef, s3 = 0xc9
res = 0x32c3efc9
Inside inv_substw:
b0 = 0xe8, b1 = 0xd3, b2 = 0x6c, b3 = 0x21
s0 = 0xc8, s1 = 0xa9, s2 = 0xb8, s3 = 0x7b
res = 0xc8a9b87b
Inside inv_substw:
b0 = 0x3f, b1 = 0x31, b2 = 0xbd, b3 = 0x5c
s0 = 0x25, s1 = 0x2e, s2 = 0xcd, s3 = 0xa7
res = 0x252ecda7
Inverse SubBytes block in and block out:
0x71d60dfa, 0x232edfdd, 0xe8d36c21, 0x3f31bd5c
0x2c4af314, 0x32c3efc9, 0xc8a9b87b, 0x252ecda7


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x2c4af314, 0x32c3efc9, 0xc8a9b87b, 0x252ecda7
0xf89b35ec, 0x4e40724e, 0x025b00c7, 0x34d7d81b

Inverse MixColumns block in and block out:
0xf89b35ec, 0x4e40724e, 0x025b00c7, 0x34d7d81b
0x3a06981e, 0x1ba543cf, 0xbaa99f12, 0x4fefe363

Inverse ShiftRows block in and block out:
0x3a06981e, 0x1ba543cf, 0xbaa99f12, 0x4fefe363
0x3aef9fcf, 0x1b06e312, 0xbaa59863, 0x4fa9431e

Inside inv_substw:
b0 = 0x3a, b1 = 0xef, b2 = 0x9f, b3 = 0xcf
s0 = 0xa2, s1 = 0x61, s2 = 0x6e, s3 = 0x5f
res = 0xa2616e5f
Inside inv_substw:
b0 = 0x1b, b1 = 0x06, b2 = 0xe3, b3 = 0x12
s0 = 0x44, s1 = 0xa5, s2 = 0x4d, s3 = 0x39
res = 0x44a54d39
Inside inv_substw:
b0 = 0xba, b1 = 0xa5, b2 = 0x98, b3 = 0x63
s0 = 0xc0, s1 = 0x29, s2 = 0xe2, s3 = 0x00
res = 0xc029e200
Inside inv_substw:
b0 = 0x4f, b1 = 0xa9, b2 = 0x43, b3 = 0x1e
s0 = 0x92, s1 = 0xb7, s2 = 0x64, s3 = 0xe9
res = 0x92b764e9
Inverse SubBytes block in and block out:
0x3aef9fcf, 0x1b06e312, 0xbaa59863, 0x4fa9431e
0xa2616e5f, 0x44a54d39, 0xc029e200, 0x92b764e9


  Round 06
  ---------
AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xa2616e5f, 0x44a54d39, 0xc029e200, 0x92b764e9
0x4d25cb1e, 0xecf71646, 0x7658c73b, 0x49bcc9e9

Inverse MixColumns block in and block out:
0x4d25cb1e, 0xecf71646, 0x7658c73b, 0x49bcc9e9
0x912c7676, 0x3af956de, 0xc0f2ce2e, 0xa93e98da

Inverse ShiftRows block in and block out:
0x912c7676, 0x3af956de, 0xc0f2ce2e, 0xa93e98da
0x913ecede, 0x3a2c982e, 0xc0f976da, 0xa9f25676

Inside inv_substw:
b0 = 0x91, b1 = 0x3e, b2 = 0xce, b3 = 0xde
s0 = 0xac, s1 = 0xd1, s2 = 0xec, s3 = 0x9c
res = 0xacd1ec9c
Inside inv_substw:
b0 = 0x3a, b1 = 0x2c, b2 = 0x98, b3 = 0x2e
s0 = 0xa2, s1 = 0x42, s2 = 0xe2, s3 = 0xc3
res = 0xa242e2c3
Inside inv_substw:
b0 = 0xc0, b1 = 0xf9, b2 = 0x76, b3 = 0xda
s0 = 0x1f, s1 = 0x69, s2 = 0x0f, s3 = 0x7a
res = 0x1f690f7a
Inside inv_substw:
b0 = 0xa9, b1 = 0xf2, b2 = 0x56, b3 = 0x76
s0 = 0xb7, s1 = 0x04, s2 = 0xb9, s3 = 0x0f
res = 0xb704b90f
Inverse SubBytes block in and block out:
0x913ecede, 0x3a2c982e, 0xc0f976da, 0xa9f25676
0xacd1ec9c, 0xa242e2c3, 0x1f690f7a, 0xb704b90f


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xacd1ec9c, 0xa242e2c3, 0x1f690f7a, 0xb704b90f
0x9151abe1, 0xe5541cfd, 0x014a713e, 0xda7e3134

Inverse MixColumns block in and block out:
0x9151abe1, 0xe5541cfd, 0x014a713e, 0xda7e3134
0x54fe6141, 0xb3b0eab9, 0x68d310af, 0xd60d641e

Inverse ShiftRows block in and block out:
0x54fe6141, 0xb3b0eab9, 0x68d310af, 0xd60d641e
0x540d10b9, 0xb3fe64af, 0x68b0611e, 0xd6d3ea41

Inside inv_substw:
b0 = 0x54, b1 = 0x0d, b2 = 0x10, b3 = 0xb9
s0 = 0xfd, s1 = 0xf3, s2 = 0x7c, s3 = 0xdb
res = 0xfdf37cdb
Inside inv_substw:
b0 = 0xb3, b1 = 0xfe, b2 = 0x64, b3 = 0xaf
s0 = 0x4b, s1 = 0x0c, s2 = 0x8c, s3 = 0x1b
res = 0x4b0c8c1b
Inside inv_substw:
b0 = 0x68, b1 = 0xb0, b2 = 0x61, b3 = 0x1e
s0 = 0xf7, s1 = 0xfc, s2 = 0xd8, s3 = 0xe9
res = 0xf7fcd8e9
Inside inv_substw:
b0 = 0xd6, b1 = 0xd3, b2 = 0xea, b3 = 0x41
s0 = 0x4a, s1 = 0xa9, s2 = 0xbb, s3 = 0xf8
res = 0x4aa9bbf8
Inverse SubBytes block in and block out:
0x540d10b9, 0xb3fe64af, 0x68b0611e, 0xd6d3ea41
0xfdf37cdb, 0x4b0c8c1b, 0xf7fcd8e9, 0x4aa9bbf8


  Round 08
  ---------
AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0xfdf37cdb, 0x4b0c8c1b, 0xf7fcd8e9, 0x4aa9bbf8
0x0f31e929, 0x319a3558, 0xaec95893, 0x39f04d87

Inverse MixColumns block in and block out:
0x0f31e929, 0x319a3558, 0xaec95893, 0x39f04d87
0x89b5884a, 0xc0565303, 0x2e389b21, 0x604d123c

Inverse ShiftRows block in and block out:
0x89b5884a, 0xc0565303, 0x2e389b21, 0x604d123c
0x894d9b03, 0xc0b51221, 0x2e56883c, 0x6038534a

Inside inv_substw:
b0 = 0x89, b1 = 0x4d, b2 = 0x9b, b3 = 0x03
s0 = 0xf2, s1 = 0x65, s2 = 0xe8, s3 = 0xd5
res = 0xf265e8d5
Inside inv_substw:
b0 = 0xc0, b1 = 0xb5, b2 = 0x12, b3 = 0x21
s0 = 0x1f, s1 = 0xd2, s2 = 0x39, s3 = 0x7b
res = 0x1fd2397b
Inside inv_substw:
b0 = 0x2e, b1 = 0x56, b2 = 0x88, b3 = 0x3c
s0 = 0xc3, s1 = 0xb9, s2 = 0x97, s3 = 0x6d
res = 0xc3b9976d
Inside inv_substw:
b0 = 0x60, b1 = 0x38, b2 = 0x53, b3 = 0x4a
s0 = 0x90, s1 = 0x76, s2 = 0x50, s3 = 0x5c
res = 0x9076505c
Inverse SubBytes block in and block out:
0x894d9b03, 0xc0b51221, 0x2e56883c, 0x6038534a
0xf265e8d5, 0x1fd2397b, 0xc3b9976d, 0x9076505c


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf265e8d5, 0x1fd2397b, 0xc3b9976d, 0x9076505c
0x529f16c2, 0x978615ca, 0xe01aae54, 0xba1a2659

Inverse MixColumns block in and block out:
0x529f16c2, 0x978615ca, 0xe01aae54, 0xba1a2659
0x09287f47, 0x6f746abf, 0x2c4a6204, 0xda08e3ee

Inverse ShiftRows block in and block out:
0x09287f47, 0x6f746abf, 0x2c4a6204, 0xda08e3ee
0x090862bf, 0x6f28e304, 0x2c747fee, 0xda4a6a47

Inside inv_substw:
b0 = 0x09, b1 = 0x08, b2 = 0x62, b3 = 0xbf
s0 = 0x40, s1 = 0xbf, s2 = 0xab, s3 = 0xf4
res = 0x40bfabf4
Inside inv_substw:
b0 = 0x6f, b1 = 0x28, b2 = 0xe3, b3 = 0x04
s0 = 0x06, s1 = 0xee, s2 = 0x4d, s3 = 0x30
res = 0x06ee4d30
Inside inv_substw:
b0 = 0x2c, b1 = 0x74, b2 = 0x7f, b3 = 0xee
s0 = 0x42, s1 = 0xca, s2 = 0x6b, s3 = 0x99
res = 0x42ca6b99
Inside inv_substw:
b0 = 0xda, b1 = 0x4a, b2 = 0x6a, b3 = 0x47
s0 = 0x7a, s1 = 0x5c, s2 = 0x58, s3 = 0x16
res = 0x7a5c5816
Inverse SubBytes block in and block out:
0x090862bf, 0x6f28e304, 0x2c747fee, 0xda4a6a47
0x40bfabf4, 0x06ee4d30, 0x42ca6b99, 0x7a5c5816

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x40bfabf4, 0x06ee4d30, 0x42ca6b99, 0x7a5c5816
0x6bc1bee2, 0x2e409f96, 0xe93d7e11, 0x7393172a

OK. Result matches expected.

Test 1 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xf5d3d585, 0x03b9699d, 0xe785895a, 0x96fdbaaf
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial, partial round.
AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0xf5d3d585, 0x03b9699d, 0xe785895a, 0x96fdbaaf
0x25c72c2d, 0xca574c14, 0x06ba8592, 0x209eb609

Inverse ShiftRows block in and block out:
0x25c72c2d, 0xca574c14, 0x06ba8592, 0x209eb609
0x259e8514, 0xcac7b692, 0x06572c09, 0x20ba4c2d

Inside inv_substw:
b0 = 0x25, b1 = 0x9e, b2 = 0x85, b3 = 0x14
s0 = 0xc2, s1 = 0xdf, s2 = 0x67, s3 = 0x9b
res = 0xc2df679b
Inside inv_substw:
b0 = 0xca, b1 = 0xc7, b2 = 0xb6, b3 = 0x92
s0 = 0x10, s1 = 0x31, s2 = 0x79, s3 = 0x74
res = 0x10317974
Inside inv_substw:
b0 = 0x06, b1 = 0x57, b2 = 0x2c, b3 = 0x09
s0 = 0xa5, s1 = 0xda, s2 = 0x42, s3 = 0x40
res = 0xa5da4240
Inside inv_substw:
b0 = 0x20, b1 = 0xba, b2 = 0x4c, b3 = 0x2d
s0 = 0x54, s1 = 0xc0, s2 = 0x5d, s3 = 0xfa
res = 0x54c05dfa
Inverse SubBytes block in and block out:
0x259e8514, 0xcac7b692, 0x06572c09, 0x20ba4c2d
0xc2df679b, 0x10317974, 0xa5da4240, 0x54c05dfa


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xc2df679b, 0x10317974, 0xa5da4240, 0x54c05dfa
0x6ea80168, 0x09cba555, 0x8d0b6b01, 0x039c5d94

Inverse MixColumns block in and block out:
0x6ea80168, 0x09cba555, 0x8d0b6b01, 0x039c5d94
0xfe6cd4e9, 0xa9e0611a, 0xe22ec7e7, 0x95f56751

Inverse ShiftRows block in and block out:
0xfe6cd4e9, 0xa9e0611a, 0xe22ec7e7, 0x95f56751
0xfef5c71a, 0xa96c67e7, 0xe2e0d451, 0x952e61e9

Inside inv_substw:
b0 = 0xfe, b1 = 0xf5, b2 = 0xc7, b3 = 0x1a
s0 = 0x0c, s1 = 0x77, s2 = 0x31, s3 = 0x43
res = 0x0c773143
Inside inv_substw:
b0 = 0xa9, b1 = 0x6c, b2 = 0x67, b3 = 0xe7
s0 = 0xb7, s1 = 0xb8, s2 = 0x0a, s3 = 0xb0
res = 0xb7b80ab0
Inside inv_substw:
b0 = 0xe2, b1 = 0xe0, b2 = 0xd4, b3 = 0x51
s0 = 0x3b, s1 = 0xa0, s2 = 0x19, s3 = 0x70
res = 0x3ba01970
Inside inv_substw:
b0 = 0x95, b1 = 0x2e, b2 = 0x61, b3 = 0xe9
s0 = 0xad, s1 = 0xc3, s2 = 0xd8, s3 = 0xeb
res = 0xadc3d8eb
Inverse SubBytes block in and block out:
0xfef5c71a, 0xa96c67e7, 0xe2e0d451, 0x952e61e9
0x0c773143, 0xb7b80ab0, 0x3ba01970, 0xadc3d8eb


  Round 02
  ---------
AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0x0c773143, 0xb7b80ab0, 0x3ba01970, 0xadc3d8eb
0xe6a54262, 0x0235b062, 0x0a8bec10, 0xd24ef1c4

Inverse MixColumns block in and block out:
0xe6a54262, 0x0235b062, 0x0a8bec10, 0xd24ef1c4
0x9017f216, 0x1eef7d69, 0x1ea702c6, 0xeba38160

Inverse ShiftRows block in and block out:
0x9017f216, 0x1eef7d69, 0x1ea702c6, 0xeba38160
0x90a30269, 0x1e1781c6, 0x1eeff260, 0xeba77d16

Inside inv_substw:
b0 = 0x90, b1 = 0xa3, b2 = 0x02, b3 = 0x69
s0 = 0x96, s1 = 0x71, s2 = 0x6a, s3 = 0xe4
res = 0x96716ae4
Inside inv_substw:
b0 = 0x1e, b1 = 0x17, b2 = 0x81, b3 = 0xc6
s0 = 0xe9, s1 = 0x87, s2 = 0x91, s3 = 0xc7
res = 0xe98791c7
Inside inv_substw:
b0 = 0x1e, b1 = 0xef, b2 = 0xf2, b3 = 0x60
s0 = 0xe9, s1 = 0x61, s2 = 0x04, s3 = 0x90
res = 0xe9610490
Inside inv_substw:
b0 = 0xeb, b1 = 0xa7, b2 = 0x7d, b3 = 0x16
s0 = 0x3c, s1 = 0x89, s2 = 0x13, s3 = 0xff
res = 0x3c8913ff
Inverse SubBytes block in and block out:
0x90a30269, 0x1e1781c6, 0x1eeff260, 0xeba77d16
0x96716ae4, 0xe98791c7, 0xe9610490, 0x3c8913ff


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0x96716ae4, 0xe98791c7, 0xe9610490, 0x3c8913ff
0xd8259dea, 0xb6d85834, 0x6dc74b22, 0x722fcfb0

Inverse MixColumns block in and block out:
0xd8259dea, 0xb6d85834, 0x6dc74b22, 0x722fcfb0
0x80e9ca29, 0xed4c07a4, 0x3bfc8084, 0x2397da4c

Inverse ShiftRows block in and block out:
0x80e9ca29, 0xed4c07a4, 0x3bfc8084, 0x2397da4c
0x809780a4, 0xede9da84, 0x3b4cca4c, 0x23fc0729

Inside inv_substw:
b0 = 0x80, b1 = 0x97, b2 = 0x80, b3 = 0xa4
s0 = 0x3a, s1 = 0x85, s2 = 0x3a, s3 = 0x1d
res = 0x3a853a1d
Inside inv_substw:
b0 = 0xed, b1 = 0xe9, b2 = 0xda, b3 = 0x84
s0 = 0x53, s1 = 0xeb, s2 = 0x7a, s3 = 0x4f
res = 0x53eb7a4f
Inside inv_substw:
b0 = 0x3b, b1 = 0x4c, b2 = 0xca, b3 = 0x4c
s0 = 0x49, s1 = 0x5d, s2 = 0x10, s3 = 0x5d
res = 0x495d105d
Inside inv_substw:
b0 = 0x23, b1 = 0xfc, b2 = 0x07, b3 = 0x29
s0 = 0x32, s1 = 0x55, s2 = 0x38, s3 = 0x4c
res = 0x3255384c
Inverse SubBytes block in and block out:
0x809780a4, 0xede9da84, 0x3b4cca4c, 0x23fc0729
0x3a853a1d, 0x53eb7a4f, 0x495d105d, 0x3255384c


  Round 04
  ---------
AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x3a853a1d, 0x53eb7a4f, 0x495d105d, 0x3255384c
0x570d9967, 0x42e044b2, 0x92a4961c, 0xf855abb1

Inverse MixColumns block in and block out:
0x570d9967, 0x42e044b2, 0x92a4961c, 0xf855abb1
0x057e9847, 0xc72269d8, 0xc53da2e6, 0x9677b0e6

Inverse ShiftRows block in and block out:
0x057e9847, 0xc72269d8, 0xc53da2e6, 0x9677b0e6
0x0577a2d8, 0xc77eb0e6, 0xc52298e6, 0x963d6947

Inside inv_substw:
b0 = 0x05, b1 = 0x77, b2 = 0xa2, b3 = 0xd8
s0 = 0x36, s1 = 0x02, s2 = 0x1a, s3 = 0x2d
res = 0x36021a2d
Inside inv_substw:
b0 = 0xc7, b1 = 0x7e, b2 = 0xb0, b3 = 0xe6
s0 = 0x31, s1 = 0x8a, s2 = 0xfc, s3 = 0xf5
res = 0x318afcf5
Inside inv_substw:
b0 = 0xc5, b1 = 0x22, b2 = 0x98, b3 = 0xe6
s0 = 0x07, s1 = 0x94, s2 = 0xe2, s3 = 0xf5
res = 0x0794e2f5
Inside inv_substw:
b0 = 0x96, b1 = 0x3d, b2 = 0x69, b3 = 0x47
s0 = 0x35, s1 = 0x8b, s2 = 0xe4, s3 = 0x16
res = 0x358be416
Inverse SubBytes block in and block out:
0x0577a2d8, 0xc77eb0e6, 0xc52298e6, 0x963d6947
0x36021a2d, 0x318afcf5, 0x0794e2f5, 0x358be416


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x36021a2d, 0x318afcf5, 0x0794e2f5, 0x358be416
0xe2d3dcd5, 0x4d096172, 0xcd665a49, 0x2472f1aa

Inverse MixColumns block in and block out:
0xe2d3dcd5, 0x4d096172, 0xcd665a49, 0x2472f1aa
0x9b36d540, 0xacf72e22, 0xe5ad19e9, 0x94475b85

Inverse ShiftRows block in and block out:
0x9b36d540, 0xacf72e22, 0xe5ad19e9, 0x94475b85
0x9b471922, 0xac365be9, 0xe5f7d585, 0x94ad2e40

Inside inv_substw:
b0 = 0x9b, b1 = 0x47, b2 = 0x19, b3 = 0x22
s0 = 0xe8, s1 = 0x16, s2 = 0x8e, s3 = 0x94
res = 0xe8168e94
Inside inv_substw:
b0 = 0xac, b1 = 0x36, b2 = 0x5b, b3 = 0xe9
s0 = 0xaa, s1 = 0x24, s2 = 0x57, s3 = 0xeb
res = 0xaa2457eb
Inside inv_substw:
b0 = 0xe5, b1 = 0xf7, b2 = 0xd5, b3 = 0x85
s0 = 0x2a, s1 = 0x26, s2 = 0xb5, s3 = 0x67
res = 0x2a26b567
Inside inv_substw:
b0 = 0x94, b1 = 0xad, b2 = 0x2e, b3 = 0x40
s0 = 0xe7, s1 = 0x18, s2 = 0xc3, s3 = 0x72
res = 0xe718c372
Inverse SubBytes block in and block out:
0x9b471922, 0xac365be9, 0xe5f7d585, 0x94ad2e40
0xe8168e94, 0xaa2457eb, 0x2a26b567, 0xe718c372


  Round 06
  ---------
AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xe8168e94, 0xaa2457eb, 0x2a26b567, 0xe718c372
0x07522bd5, 0x02760c94, 0x9c57905c, 0x3c136e72

Inverse MixColumns block in and block out:
0x07522bd5, 0x02760c94, 0x9c57905c, 0x3c136e72
0x990ef8c4, 0x1fead2cb, 0x1ed11cd4, 0x81c6b5c1

Inverse ShiftRows block in and block out:
0x990ef8c4, 0x1fead2cb, 0x1ed11cd4, 0x81c6b5c1
0x99c61ccb, 0x1f0eb5d4, 0x1eeaf8c1, 0x81d1d2c4

Inside inv_substw:
b0 = 0x99, b1 = 0xc6, b2 = 0x1c, b3 = 0xcb
s0 = 0xf9, s1 = 0xc7, s2 = 0xc4, s3 = 0x59
res = 0xf9c7c459
Inside inv_substw:
b0 = 0x1f, b1 = 0x0e, b2 = 0xb5, b3 = 0xd4
s0 = 0xcb, s1 = 0xd7, s2 = 0xd2, s3 = 0x19
res = 0xcbd7d219
Inside inv_substw:
b0 = 0x1e, b1 = 0xea, b2 = 0xf8, b3 = 0xc1
s0 = 0xe9, s1 = 0xbb, s2 = 0xe1, s3 = 0xdd
res = 0xe9bbe1dd
Inside inv_substw:
b0 = 0x81, b1 = 0xd1, b2 = 0xd2, b3 = 0xc4
s0 = 0x91, s1 = 0x51, s2 = 0x7f, s3 = 0x88
res = 0x91517f88
Inverse SubBytes block in and block out:
0x99c61ccb, 0x1f0eb5d4, 0x1eeaf8c1, 0x81d1d2c4
0xf9c7c459, 0xcbd7d219, 0xe9bbe1dd, 0x91517f88


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xf9c7c459, 0xcbd7d219, 0xe9bbe1dd, 0x91517f88
0xc4478324, 0x8cc12c27, 0xf7989f99, 0xfc2bf7b3

Inverse MixColumns block in and block out:
0xc4478324, 0x8cc12c27, 0xf7989f99, 0xfc2bf7b3
0xc15cce77, 0xe0f5cc9f, 0x9e9e244d, 0x02b9341c

Inverse ShiftRows block in and block out:
0xc15cce77, 0xe0f5cc9f, 0x9e9e244d, 0x02b9341c
0xc1b9249f, 0xe05c344d, 0x9ef5ce1c, 0x029ecc77

Inside inv_substw:
b0 = 0xc1, b1 = 0xb9, b2 = 0x24, b3 = 0x9f
s0 = 0xdd, s1 = 0xdb, s2 = 0xa6, s3 = 0x6e
res = 0xdddba66e
Inside inv_substw:
b0 = 0xe0, b1 = 0x5c, b2 = 0x34, b3 = 0x4d
s0 = 0xa0, s1 = 0xa7, s2 = 0x28, s3 = 0x65
res = 0xa0a72865
Inside inv_substw:
b0 = 0x9e, b1 = 0xf5, b2 = 0xce, b3 = 0x1c
s0 = 0xdf, s1 = 0x77, s2 = 0xec, s3 = 0xc4
res = 0xdf77ecc4
Inside inv_substw:
b0 = 0x02, b1 = 0x9e, b2 = 0xcc, b3 = 0x77
s0 = 0x6a, s1 = 0xdf, s2 = 0x27, s3 = 0x02
res = 0x6adf2702
Inverse SubBytes block in and block out:
0xc1b9249f, 0xe05c344d, 0x9ef5ce1c, 0x029ecc77
0xdddba66e, 0xa0a72865, 0xdf77ecc4, 0x6adf2702


  Round 08
  ---------
AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0xdddba66e, 0xa0a72865, 0xdf77ecc4, 0x6adf2702
0x2f19339c, 0xda319126, 0x86426cbe, 0x1986d17d

Inverse MixColumns block in and block out:
0x2f19339c, 0xda319126, 0x86426cbe, 0x1986d17d
0x0e523bfe, 0xaabc5913, 0x3665f0b5, 0x81592fc4

Inverse ShiftRows block in and block out:
0x0e523bfe, 0xaabc5913, 0x3665f0b5, 0x81592fc4
0x0e59f013, 0xaa522fb5, 0x36bc3bc4, 0x816559fe

Inside inv_substw:
b0 = 0x0e, b1 = 0x59, b2 = 0xf0, b3 = 0x13
s0 = 0xd7, s1 = 0x15, s2 = 0x17, s3 = 0x82
res = 0xd7151782
Inside inv_substw:
b0 = 0xaa, b1 = 0x52, b2 = 0x2f, b3 = 0xb5
s0 = 0x62, s1 = 0x48, s2 = 0x4e, s3 = 0xd2
res = 0x62484ed2
Inside inv_substw:
b0 = 0x36, b1 = 0xbc, b2 = 0x3b, b3 = 0xc4
s0 = 0x24, s1 = 0x78, s2 = 0x49, s3 = 0x88
res = 0x24784988
Inside inv_substw:
b0 = 0x81, b1 = 0x65, b2 = 0x59, b3 = 0xfe
s0 = 0x91, s1 = 0xbc, s2 = 0x15, s3 = 0x0c
res = 0x91bc150c
Inverse SubBytes block in and block out:
0x0e59f013, 0xaa522fb5, 0x36bc3bc4, 0x816559fe
0xd7151782, 0x62484ed2, 0x24784988, 0x91bc150c


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xd7151782, 0x62484ed2, 0x24784988, 0x91bc150c
0x77efe995, 0xea1c6263, 0x07db70b1, 0xbbd06309

Inverse MixColumns block in and block out:
0x77efe995, 0xea1c6263, 0x07db70b1, 0xbbd06309
0x9795da3c, 0x05097883, 0x96d0db80, 0x29edf336

Inverse ShiftRows block in and block out:
0x9795da3c, 0x05097883, 0x96d0db80, 0x29edf336
0x97eddb83, 0x0595f380, 0x9609da36, 0x29d0783c

Inside inv_substw:
b0 = 0x97, b1 = 0xed, b2 = 0xdb, b3 = 0x83
s0 = 0x85, s1 = 0x53, s2 = 0x9f, s3 = 0x41
res = 0x85539f41
Inside inv_substw:
b0 = 0x05, b1 = 0x95, b2 = 0xf3, b3 = 0x80
s0 = 0x36, s1 = 0xad, s2 = 0x7e, s3 = 0x3a
res = 0x36ad7e3a
Inside inv_substw:
b0 = 0x96, b1 = 0x09, b2 = 0xda, b3 = 0x36
s0 = 0x35, s1 = 0x40, s2 = 0x7a, s3 = 0x24
res = 0x35407a24
Inside inv_substw:
b0 = 0x29, b1 = 0xd0, b2 = 0x78, b3 = 0x3c
s0 = 0x4c, s1 = 0x60, s2 = 0xc1, s3 = 0x6d
res = 0x4c60c16d
Inverse SubBytes block in and block out:
0x97eddb83, 0x0595f380, 0x9609da36, 0x29d0783c
0x85539f41, 0x36ad7e3a, 0x35407a24, 0x4c60c16d

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x85539f41, 0x36ad7e3a, 0x35407a24, 0x4c60c16d
0xae2d8a57, 0x1e03ac9c, 0x9eb76fac, 0x45af8e51

OK. Result matches expected.

Test 2 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x43b1cd7f, 0x598ece23, 0x881b00e3, 0xed030688
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial, partial round.
AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0x43b1cd7f, 0x598ece23, 0x881b00e3, 0xed030688
0x93a534d7, 0x9060ebaa, 0x69240c2b, 0x5b600a2e

Inverse ShiftRows block in and block out:
0x93a534d7, 0x9060ebaa, 0x69240c2b, 0x5b600a2e
0x93600caa, 0x90a50a2b, 0x6960342e, 0x5b24ebd7

Inside inv_substw:
b0 = 0x93, b1 = 0x60, b2 = 0x0c, b3 = 0xaa
s0 = 0x22, s1 = 0x90, s2 = 0x81, s3 = 0x62
res = 0x22908162
Inside inv_substw:
b0 = 0x90, b1 = 0xa5, b2 = 0x0a, b3 = 0x2b
s0 = 0x96, s1 = 0x29, s2 = 0xa3, s3 = 0x0b
res = 0x9629a30b
Inside inv_substw:
b0 = 0x69, b1 = 0x60, b2 = 0x34, b3 = 0x2e
s0 = 0xe4, s1 = 0x90, s2 = 0x28, s3 = 0xc3
res = 0xe49028c3
Inside inv_substw:
b0 = 0x5b, b1 = 0x24, b2 = 0xeb, b3 = 0xd7
s0 = 0x57, s1 = 0xa6, s2 = 0x3c, s3 = 0x0d
res = 0x57a63c0d
Inverse SubBytes block in and block out:
0x93600caa, 0x90a50a2b, 0x6960342e, 0x5b24ebd7
0x22908162, 0x9629a30b, 0xe49028c3, 0x57a63c0d


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0x22908162, 0x9629a30b, 0xe49028c3, 0x57a63c0d
0x8ee7e791, 0x8fd37f2a, 0xcc410182, 0x00fa3c63

Inverse MixColumns block in and block out:
0x8ee7e791, 0x8fd37f2a, 0xcc410182, 0x00fa3c63
0x04c3538b, 0x9b1879f3, 0xaa9e7b41, 0xe5c5880d

Inverse ShiftRows block in and block out:
0x04c3538b, 0x9b1879f3, 0xaa9e7b41, 0xe5c5880d
0x04c57bf3, 0x9bc38841, 0xaa18530d, 0xe59e798b

Inside inv_substw:
b0 = 0x04, b1 = 0xc5, b2 = 0x7b, b3 = 0xf3
s0 = 0x30, s1 = 0x07, s2 = 0x03, s3 = 0x7e
res = 0x3007037e
Inside inv_substw:
b0 = 0x9b, b1 = 0xc3, b2 = 0x88, b3 = 0x41
s0 = 0xe8, s1 = 0x33, s2 = 0x97, s3 = 0xf8
res = 0xe83397f8
Inside inv_substw:
b0 = 0xaa, b1 = 0x18, b2 = 0x53, b3 = 0x0d
s0 = 0x62, s1 = 0x34, s2 = 0x50, s3 = 0xf3
res = 0x623450f3
Inside inv_substw:
b0 = 0xe5, b1 = 0x9e, b2 = 0x79, b3 = 0x8b
s0 = 0x2a, s1 = 0xdf, s2 = 0xaf, s3 = 0xce
res = 0x2adfafce
Inverse SubBytes block in and block out:
0x04c57bf3, 0x9bc38841, 0xaa18530d, 0xe59e798b
0x3007037e, 0xe83397f8, 0x623450f3, 0x2adfafce


  Round 02
  ---------
AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0x3007037e, 0xe83397f8, 0x623450f3, 0x2adfafce
0xdad5705f, 0x5dbe2d2a, 0x531fa593, 0x555286e1

Inverse MixColumns block in and block out:
0xdad5705f, 0x5dbe2d2a, 0x531fa593, 0x555286e1
0x61a18b6b, 0xde607d27, 0xb9f1bb89, 0x77566425

Inverse ShiftRows block in and block out:
0x61a18b6b, 0xde607d27, 0xb9f1bb89, 0x77566425
0x6156bb27, 0xdea16489, 0xb9608b25, 0x77f17d6b

Inside inv_substw:
b0 = 0x61, b1 = 0x56, b2 = 0xbb, b3 = 0x27
s0 = 0xd8, s1 = 0xb9, s2 = 0xfe, s3 = 0x3d
res = 0xd8b9fe3d
Inside inv_substw:
b0 = 0xde, b1 = 0xa1, b2 = 0x64, b3 = 0x89
s0 = 0x9c, s1 = 0xf1, s2 = 0x8c, s3 = 0xf2
res = 0x9cf18cf2
Inside inv_substw:
b0 = 0xb9, b1 = 0x60, b2 = 0x8b, b3 = 0x25
s0 = 0xdb, s1 = 0x90, s2 = 0xce, s3 = 0xc2
res = 0xdb90cec2
Inside inv_substw:
b0 = 0x77, b1 = 0xf1, b2 = 0x7d, b3 = 0x6b
s0 = 0x02, s1 = 0x2b, s2 = 0x13, s3 = 0x05
res = 0x022b1305
Inverse SubBytes block in and block out:
0x6156bb27, 0xdea16489, 0xb9608b25, 0x77f17d6b
0xd8b9fe3d, 0x9cf18cf2, 0xdb90cec2, 0x022b1305


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xd8b9fe3d, 0x9cf18cf2, 0xdb90cec2, 0x022b1305
0x96ed0933, 0xc3ae4501, 0x5f368170, 0x4c8dcf4a

Inverse MixColumns block in and block out:
0x96ed0933, 0xc3ae4501, 0x5f368170, 0x4c8dcf4a
0x55144848, 0x4d93996e, 0xec741919, 0xbd6ab625

Inverse ShiftRows block in and block out:
0x55144848, 0x4d93996e, 0xec741919, 0xbd6ab625
0x556a196e, 0x4d14b619, 0xec934825, 0xbd749948

Inside inv_substw:
b0 = 0x55, b1 = 0x6a, b2 = 0x19, b3 = 0x6e
s0 = 0xed, s1 = 0x58, s2 = 0x8e, s3 = 0x45
res = 0xed588e45
Inside inv_substw:
b0 = 0x4d, b1 = 0x14, b2 = 0xb6, b3 = 0x19
s0 = 0x65, s1 = 0x9b, s2 = 0x79, s3 = 0x8e
res = 0x659b798e
Inside inv_substw:
b0 = 0xec, b1 = 0x93, b2 = 0x48, b3 = 0x25
s0 = 0x83, s1 = 0x22, s2 = 0xd4, s3 = 0xc2
res = 0x8322d4c2
Inside inv_substw:
b0 = 0xbd, b1 = 0x74, b2 = 0x99, b3 = 0x48
s0 = 0xcd, s1 = 0xca, s2 = 0xf9, s3 = 0xd4
res = 0xcdcaf9d4
Inverse SubBytes block in and block out:
0x556a196e, 0x4d14b619, 0xec934825, 0xbd749948
0xed588e45, 0x659b798e, 0x8322d4c2, 0xcdcaf9d4


  Round 04
  ---------
AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0xed588e45, 0x659b798e, 0x8322d4c2, 0xcdcaf9d4
0x80d02d3f, 0x74904773, 0x58db5283, 0x07ca6a29

Inverse MixColumns block in and block out:
0x80d02d3f, 0x74904773, 0x58db5283, 0x07ca6a29
0xc6c4efaf, 0x618ee9d6, 0x995d37a1, 0xbba2d146

Inverse ShiftRows block in and block out:
0xc6c4efaf, 0x618ee9d6, 0x995d37a1, 0xbba2d146
0xc6a237d6, 0x61c4d1a1, 0x998eef46, 0xbb5de9af

Inside inv_substw:
b0 = 0xc6, b1 = 0xa2, b2 = 0x37, b3 = 0xd6
s0 = 0xc7, s1 = 0x1a, s2 = 0xb2, s3 = 0x4a
res = 0xc71ab24a
Inside inv_substw:
b0 = 0x61, b1 = 0xc4, b2 = 0xd1, b3 = 0xa1
s0 = 0xd8, s1 = 0x88, s2 = 0x51, s3 = 0xf1
res = 0xd88851f1
Inside inv_substw:
b0 = 0x99, b1 = 0x8e, b2 = 0xef, b3 = 0x46
s0 = 0xf9, s1 = 0xe6, s2 = 0x61, s3 = 0x98
res = 0xf9e66198
Inside inv_substw:
b0 = 0xbb, b1 = 0x5d, b2 = 0xe9, b3 = 0xaf
s0 = 0xfe, s1 = 0x8d, s2 = 0xeb, s3 = 0x1b
res = 0xfe8deb1b
Inverse SubBytes block in and block out:
0xc6a237d6, 0x61c4d1a1, 0x998eef46, 0xbb5de9af
0xc71ab24a, 0xd88851f1, 0xf9e66198, 0xfe8deb1b


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0xc71ab24a, 0xd88851f1, 0xf9e66198, 0xfe8deb1b
0x13cb74b2, 0xa40bcc76, 0x3314d924, 0xef74fea7

Inverse MixColumns block in and block out:
0x13cb74b2, 0xa40bcc76, 0x3314d924, 0xef74fea7
0xd1bf8afa, 0xe7cca59b, 0xa805ed9a, 0x0e9280de

Inverse ShiftRows block in and block out:
0xd1bf8afa, 0xe7cca59b, 0xa805ed9a, 0x0e9280de
0xd192ed9b, 0xe7bf809a, 0xa8cc8ade, 0x0e05a5fa

Inside inv_substw:
b0 = 0xd1, b1 = 0x92, b2 = 0xed, b3 = 0x9b
s0 = 0x51, s1 = 0x74, s2 = 0x53, s3 = 0xe8
res = 0x517453e8
Inside inv_substw:
b0 = 0xe7, b1 = 0xbf, b2 = 0x80, b3 = 0x9a
s0 = 0xb0, s1 = 0xf4, s2 = 0x3a, s3 = 0x37
res = 0xb0f43a37
Inside inv_substw:
b0 = 0xa8, b1 = 0xcc, b2 = 0x8a, b3 = 0xde
s0 = 0x6f, s1 = 0x27, s2 = 0xcf, s3 = 0x9c
res = 0x6f27cf9c
Inside inv_substw:
b0 = 0x0e, b1 = 0x05, b2 = 0xa5, b3 = 0xfa
s0 = 0xd7, s1 = 0x36, s2 = 0x29, s3 = 0x14
res = 0xd7362914
Inverse SubBytes block in and block out:
0xd192ed9b, 0xe7bf809a, 0xa8cc8ade, 0x0e05a5fa
0x517453e8, 0xb0f43a37, 0x6f27cf9c, 0xd7362914


  Round 06
  ---------
AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0x517453e8, 0xb0f43a37, 0x6f27cf9c, 0xd7362914
0xbe30f6a9, 0x18a66148, 0xd956eaa7, 0x0c3d8414

Inverse MixColumns block in and block out:
0xbe30f6a9, 0x18a66148, 0xd956eaa7, 0x0c3d8414
0x81f670d6, 0xc3e58f3e, 0x9854343a, 0xa62e775e

Inverse ShiftRows block in and block out:
0x81f670d6, 0xc3e58f3e, 0x9854343a, 0xa62e775e
0x812e343e, 0xc3f6773a, 0x98e5705e, 0xa6548fd6

Inside inv_substw:
b0 = 0x81, b1 = 0x2e, b2 = 0x34, b3 = 0x3e
s0 = 0x91, s1 = 0xc3, s2 = 0x28, s3 = 0xd1
res = 0x91c328d1
Inside inv_substw:
b0 = 0xc3, b1 = 0xf6, b2 = 0x77, b3 = 0x3a
s0 = 0x33, s1 = 0xd6, s2 = 0x02, s3 = 0xa2
res = 0x33d602a2
Inside inv_substw:
b0 = 0x98, b1 = 0xe5, b2 = 0x70, b3 = 0x5e
s0 = 0xe2, s1 = 0x2a, s2 = 0xd0, s3 = 0x9d
res = 0xe22ad09d
Inside inv_substw:
b0 = 0xa6, b1 = 0x54, b2 = 0x8f, b3 = 0xd6
s0 = 0xc5, s1 = 0xfd, s2 = 0x73, s3 = 0x4a
res = 0xc5fd734a
Inverse SubBytes block in and block out:
0x812e343e, 0xc3f6773a, 0x98e5705e, 0xa6548fd6
0x91c328d1, 0x33d602a2, 0xe22ad09d, 0xc5fd734a


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0x91c328d1, 0x33d602a2, 0xe22ad09d, 0xc5fd734a
0xac436fac, 0x74c0fc9c, 0xfc09aed9, 0xa887fb71

Inverse MixColumns block in and block out:
0xac436fac, 0x74c0fc9c, 0xfc09aed9, 0xa887fb71
0x1fdd846a, 0x3ffd0412, 0xa0cfed00, 0x5b7059d7

Inverse ShiftRows block in and block out:
0x1fdd846a, 0x3ffd0412, 0xa0cfed00, 0x5b7059d7
0x1f70ed12, 0x3fdd5900, 0xa0fd84d7, 0x5bcf046a

Inside inv_substw:
b0 = 0x1f, b1 = 0x70, b2 = 0xed, b3 = 0x12
s0 = 0xcb, s1 = 0xd0, s2 = 0x53, s3 = 0x39
res = 0xcbd05339
Inside inv_substw:
b0 = 0x3f, b1 = 0xdd, b2 = 0x59, b3 = 0x00
s0 = 0x25, s1 = 0xc9, s2 = 0x15, s3 = 0x52
res = 0x25c91552
Inside inv_substw:
b0 = 0xa0, b1 = 0xfd, b2 = 0x84, b3 = 0xd7
s0 = 0x47, s1 = 0x21, s2 = 0x4f, s3 = 0x0d
res = 0x47214f0d
Inside inv_substw:
b0 = 0x5b, b1 = 0xcf, b2 = 0x04, b3 = 0x6a
s0 = 0x57, s1 = 0x5f, s2 = 0x30, s3 = 0x58
res = 0x575f3058
Inverse SubBytes block in and block out:
0x1f70ed12, 0x3fdd5900, 0xa0fd84d7, 0x5bcf046a
0xcbd05339, 0x25c91552, 0x47214f0d, 0x575f3058


  Round 08
  ---------
AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0xcbd05339, 0x25c91552, 0x47214f0d, 0x575f3058
0x3912c6cb, 0x5f5fac11, 0x1e14cf77, 0x2406c627

Inverse MixColumns block in and block out:
0x3912c6cb, 0x5f5fac11, 0x1e14cf77, 0x2406c627
0xb3e50070, 0x9ca30e8c, 0x367b9867, 0x44983b24

Inverse ShiftRows block in and block out:
0xb3e50070, 0x9ca30e8c, 0x367b9867, 0x44983b24
0xb398988c, 0x9ce53b67, 0x36a30024, 0x447b0e70

Inside inv_substw:
b0 = 0xb3, b1 = 0x98, b2 = 0x98, b3 = 0x8c
s0 = 0x4b, s1 = 0xe2, s2 = 0xe2, s3 = 0xf0
res = 0x4be2e2f0
Inside inv_substw:
b0 = 0x9c, b1 = 0xe5, b2 = 0x3b, b3 = 0x67
s0 = 0x1c, s1 = 0x2a, s2 = 0x49, s3 = 0x0a
res = 0x1c2a490a
Inside inv_substw:
b0 = 0x36, b1 = 0xa3, b2 = 0x00, b3 = 0x24
s0 = 0x24, s1 = 0x71, s2 = 0x52, s3 = 0xa6
res = 0x247152a6
Inside inv_substw:
b0 = 0x44, b1 = 0x7b, b2 = 0x0e, b3 = 0x70
s0 = 0x86, s1 = 0x03, s2 = 0xd7, s3 = 0xd0
res = 0x8603d7d0
Inverse SubBytes block in and block out:
0xb398988c, 0x9ce53b67, 0x36a30024, 0x447b0e70
0x4be2e2f0, 0x1c2a490a, 0x247152a6, 0x8603d7d0


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0x4be2e2f0, 0x1c2a490a, 0x247152a6, 0x8603d7d0
0xeb181ce7, 0x947e65bb, 0x07d26b9f, 0xac6fa1d5

Inverse MixColumns block in and block out:
0xeb181ce7, 0x947e65bb, 0x07d26b9f, 0xac6fa1d5
0xaf894866, 0x3dfea453, 0x2fa601a9, 0x7d4e0581

Inverse ShiftRows block in and block out:
0xaf894866, 0x3dfea453, 0x2fa601a9, 0x7d4e0581
0xaf4e0153, 0x3d8905a9, 0x2ffe4881, 0x7da6a466

Inside inv_substw:
b0 = 0xaf, b1 = 0x4e, b2 = 0x01, b3 = 0x53
s0 = 0x1b, s1 = 0xb6, s2 = 0x09, s3 = 0x50
res = 0x1bb60950
Inside inv_substw:
b0 = 0x3d, b1 = 0x89, b2 = 0x05, b3 = 0xa9
s0 = 0x8b, s1 = 0xf2, s2 = 0x36, s3 = 0xb7
res = 0x8bf236b7
Inside inv_substw:
b0 = 0x2f, b1 = 0xfe, b2 = 0x48, b3 = 0x81
s0 = 0x4e, s1 = 0x0c, s2 = 0xd4, s3 = 0x91
res = 0x4e0cd491
Inside inv_substw:
b0 = 0x7d, b1 = 0xa6, b2 = 0xa4, b3 = 0x66
s0 = 0x13, s1 = 0xc5, s2 = 0x1d, s3 = 0xd3
res = 0x13c51dd3
Inverse SubBytes block in and block out:
0xaf4e0153, 0x3d8905a9, 0x2ffe4881, 0x7da6a466
0x1bb60950, 0x8bf236b7, 0x4e0cd491, 0x13c51dd3

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x1bb60950, 0x8bf236b7, 0x4e0cd491, 0x13c51dd3
0x30c81c46, 0xa35ce411, 0xe5fbc119, 0x1a0a52ef

OK. Result matches expected.

Test 3 for AES-128.
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0x7b0c785e, 0x27e8ad3f, 0x82232071, 0x04725dd4
Doing the 128 bit key expansion
Inside substw:
b0 = 0xcf, b1 = 0x4f, b2 = 0x3c, b3 = 0x09
s0 = 0x8a, s1 = 0x84, s2 = 0xeb, s3 = 0x01
res = 0x8a84eb01
Inside next 128bit key:
w0 = 0x2b7e1516, w1 = 0x28aed2a6, w2 = 0xabf71588, w3 = 0x09cf4f3c
rol = 0xcf4f3c09, subst = 0x8a84eb01, rcon = 0x01, t = 0x8b84eb01
k0 = 0xa0fafe17, k1 = 0x88542cb1, k2 = 0x23a33939, k3 = 0x2a6c7605
Inside substw:
b0 = 0x6c, b1 = 0x76, b2 = 0x05, b3 = 0x2a
s0 = 0x50, s1 = 0x38, s2 = 0x6b, s3 = 0xe5
res = 0x50386be5
Inside next 128bit key:
w0 = 0xa0fafe17, w1 = 0x88542cb1, w2 = 0x23a33939, w3 = 0x2a6c7605
rol = 0x6c76052a, subst = 0x50386be5, rcon = 0x02, t = 0x52386be5
k0 = 0xf2c295f2, k1 = 0x7a96b943, k2 = 0x5935807a, k3 = 0x7359f67f
Inside substw:
b0 = 0x59, b1 = 0xf6, b2 = 0x7f, b3 = 0x73
s0 = 0xcb, s1 = 0x42, s2 = 0xd2, s3 = 0x8f
res = 0xcb42d28f
Inside next 128bit key:
w0 = 0xf2c295f2, w1 = 0x7a96b943, w2 = 0x5935807a, w3 = 0x7359f67f
rol = 0x59f67f73, subst = 0xcb42d28f, rcon = 0x04, t = 0xcf42d28f
k0 = 0x3d80477d, k1 = 0x4716fe3e, k2 = 0x1e237e44, k3 = 0x6d7a883b
Inside substw:
b0 = 0x7a, b1 = 0x88, b2 = 0x3b, b3 = 0x6d
s0 = 0xda, s1 = 0xc4, s2 = 0xe2, s3 = 0x3c
res = 0xdac4e23c
Inside next 128bit key:
w0 = 0x3d80477d, w1 = 0x4716fe3e, w2 = 0x1e237e44, w3 = 0x6d7a883b
rol = 0x7a883b6d, subst = 0xdac4e23c, rcon = 0x08, t = 0xd2c4e23c
k0 = 0xef44a541, k1 = 0xa8525b7f, k2 = 0xb671253b, k3 = 0xdb0bad00
Inside substw:
b0 = 0x0b, b1 = 0xad, b2 = 0x00, b3 = 0xdb
s0 = 0x2b, s1 = 0x95, s2 = 0x63, s3 = 0xb9
res = 0x2b9563b9
Inside next 128bit key:
w0 = 0xef44a541, w1 = 0xa8525b7f, w2 = 0xb671253b, w3 = 0xdb0bad00
rol = 0x0bad00db, subst = 0x2b9563b9, rcon = 0x10, t = 0x3b9563b9
k0 = 0xd4d1c6f8, k1 = 0x7c839d87, k2 = 0xcaf2b8bc, k3 = 0x11f915bc
Inside substw:
b0 = 0xf9, b1 = 0x15, b2 = 0xbc, b3 = 0x11
s0 = 0x99, s1 = 0x59, s2 = 0x65, s3 = 0x82
res = 0x99596582
Inside next 128bit key:
w0 = 0xd4d1c6f8, w1 = 0x7c839d87, w2 = 0xcaf2b8bc, w3 = 0x11f915bc
rol = 0xf915bc11, subst = 0x99596582, rcon = 0x20, t = 0xb9596582
k0 = 0x6d88a37a, k1 = 0x110b3efd, k2 = 0xdbf98641, k3 = 0xca0093fd
Inside substw:
b0 = 0x00, b1 = 0x93, b2 = 0xfd, b3 = 0xca
s0 = 0x63, s1 = 0xdc, s2 = 0x54, s3 = 0x74
res = 0x63dc5474
Inside next 128bit key:
w0 = 0x6d88a37a, w1 = 0x110b3efd, w2 = 0xdbf98641, w3 = 0xca0093fd
rol = 0x0093fdca, subst = 0x63dc5474, rcon = 0x40, t = 0x23dc5474
k0 = 0x4e54f70e, k1 = 0x5f5fc9f3, k2 = 0x84a64fb2, k3 = 0x4ea6dc4f
Inside substw:
b0 = 0xa6, b1 = 0xdc, b2 = 0x4f, b3 = 0x4e
s0 = 0x24, s1 = 0x86, s2 = 0x84, s3 = 0x2f
res = 0x2486842f
Inside next 128bit key:
w0 = 0x4e54f70e, w1 = 0x5f5fc9f3, w2 = 0x84a64fb2, w3 = 0x4ea6dc4f
rol = 0xa6dc4f4e, subst = 0x2486842f, rcon = 0x80, t = 0xa486842f
k0 = 0xead27321, k1 = 0xb58dbad2, k2 = 0x312bf560, k3 = 0x7f8d292f
Inside substw:
b0 = 0x8d, b1 = 0x29, b2 = 0x2f, b3 = 0x7f
s0 = 0x5d, s1 = 0xa5, s2 = 0x15, s3 = 0xd2
res = 0x5da515d2
Inside next 128bit key:
w0 = 0xead27321, w1 = 0xb58dbad2, w2 = 0x312bf560, w3 = 0x7f8d292f
rol = 0x8d292f7f, subst = 0x5da515d2, rcon = 0x1b, t = 0x46a515d2
k0 = 0xac7766f3, k1 = 0x19fadc21, k2 = 0x28d12941, k3 = 0x575c006e
Inside substw:
b0 = 0x5c, b1 = 0x00, b2 = 0x6e, b3 = 0x57
s0 = 0x4a, s1 = 0x63, s2 = 0x9f, s3 = 0x5b
res = 0x4a639f5b
Inside next 128bit key:
w0 = 0xac7766f3, w1 = 0x19fadc21, w2 = 0x28d12941, w3 = 0x575c006e
rol = 0x5c006e57, subst = 0x4a639f5b, rcon = 0x36, t = 0x7c639f5b
k0 = 0xd014f9a8, k1 = 0xc9ee2589, k2 = 0xe13f0cc8, k3 = 0xb6630ca6
Input key:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c

Generated keys:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6

  Initial, partial round.
AddRoundKey key, block in and block out:
0xd014f9a8, 0xc9ee2589, 0xe13f0cc8, 0xb6630ca6
0x7b0c785e, 0x27e8ad3f, 0x82232071, 0x04725dd4
0xab1881f6, 0xee0688b6, 0x631c2cb9, 0xb2115172

Inverse ShiftRows block in and block out:
0xab1881f6, 0xee0688b6, 0x631c2cb9, 0xb2115172
0xab112cb6, 0xee1851b9, 0x63068172, 0xb21c88f6

Inside inv_substw:
b0 = 0xab, b1 = 0x11, b2 = 0x2c, b3 = 0xb6
s0 = 0x0e, s1 = 0xe3, s2 = 0x42, s3 = 0x79
res = 0x0ee34279
Inside inv_substw:
b0 = 0xee, b1 = 0x18, b2 = 0x51, b3 = 0xb9
s0 = 0x99, s1 = 0x34, s2 = 0x70, s3 = 0xdb
res = 0x993470db
Inside inv_substw:
b0 = 0x63, b1 = 0x06, b2 = 0x81, b3 = 0x72
s0 = 0x00, s1 = 0xa5, s2 = 0x91, s3 = 0x1e
res = 0x00a5911e
Inside inv_substw:
b0 = 0xb2, b1 = 0x1c, b2 = 0x88, b3 = 0xf6
s0 = 0x3e, s1 = 0xc4, s2 = 0x97, s3 = 0xd6
res = 0x3ec497d6
Inverse SubBytes block in and block out:
0xab112cb6, 0xee1851b9, 0x63068172, 0xb21c88f6
0x0ee34279, 0x993470db, 0x00a5911e, 0x3ec497d6


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xac7766f3, 0x19fadc21, 0x28d12941, 0x575c006e
0x0ee34279, 0x993470db, 0x00a5911e, 0x3ec497d6
0xa294248a, 0x80ceacfa, 0x2874b85f, 0x699897b8

Inverse MixColumns block in and block out:
0xa294248a, 0x80ceacfa, 0x2874b85f, 0x699897b8
0xd4a37996, 0x74026806, 0xf24f0f09, 0x317268f5

Inverse ShiftRows block in and block out:
0xd4a37996, 0x74026806, 0xf24f0f09, 0x317268f5
0xd4720f06, 0x74a36809, 0xf20279f5, 0x314f6896

Inside inv_substw:
b0 = 0xd4, b1 = 0x72, b2 = 0x0f, b3 = 0x06
s0 = 0x19, s1 = 0x1e, s2 = 0xfb, s3 = 0xa5
res = 0x191efba5
Inside inv_substw:
b0 = 0x74, b1 = 0xa3, b2 = 0x68, b3 = 0x09
s0 = 0xca, s1 = 0x71, s2 = 0xf7, s3 = 0x40
res = 0xca71f740
Inside inv_substw:
b0 = 0xf2, b1 = 0x02, b2 = 0x79, b3 = 0xf5
s0 = 0x04, s1 = 0x6a, s2 = 0xaf, s3 = 0x77
res = 0x046aaf77
Inside inv_substw:
b0 = 0x31, b1 = 0x4f, b2 = 0x68, b3 = 0x96
s0 = 0x2e, s1 = 0x92, s2 = 0xf7, s3 = 0x35
res = 0x2e92f735
Inverse SubBytes block in and block out:
0xd4720f06, 0x74a36809, 0xf20279f5, 0x314f6896
0x191efba5, 0xca71f740, 0x046aaf77, 0x2e92f735


  Round 02
  ---------
AddRoundKey key, block in and block out:
0xead27321, 0xb58dbad2, 0x312bf560, 0x7f8d292f
0x191efba5, 0xca71f740, 0x046aaf77, 0x2e92f735
0xf3cc8884, 0x7ffc4d92, 0x35415a17, 0x511fde1a

Inverse MixColumns block in and block out:
0xf3cc8884, 0x7ffc4d92, 0x35415a17, 0x511fde1a
0xcacfd7e1, 0x20acaa7a, 0x90de8dfa, 0x7124f12e

Inverse ShiftRows block in and block out:
0xcacfd7e1, 0x20acaa7a, 0x90de8dfa, 0x7124f12e
0xca248d7a, 0x20cff1fa, 0x90acd72e, 0x71deaae1

Inside inv_substw:
b0 = 0xca, b1 = 0x24, b2 = 0x8d, b3 = 0x7a
s0 = 0x10, s1 = 0xa6, s2 = 0xb4, s3 = 0xbd
res = 0x10a6b4bd
Inside inv_substw:
b0 = 0x20, b1 = 0xcf, b2 = 0xf1, b3 = 0xfa
s0 = 0x54, s1 = 0x5f, s2 = 0x2b, s3 = 0x14
res = 0x545f2b14
Inside inv_substw:
b0 = 0x90, b1 = 0xac, b2 = 0xd7, b3 = 0x2e
s0 = 0x96, s1 = 0xaa, s2 = 0x0d, s3 = 0xc3
res = 0x96aa0dc3
Inside inv_substw:
b0 = 0x71, b1 = 0xde, b2 = 0xaa, b3 = 0xe1
s0 = 0x2c, s1 = 0x9c, s2 = 0x62, s3 = 0xe0
res = 0x2c9c62e0
Inverse SubBytes block in and block out:
0xca248d7a, 0x20cff1fa, 0x90acd72e, 0x71deaae1
0x10a6b4bd, 0x545f2b14, 0x96aa0dc3, 0x2c9c62e0


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x4e54f70e, 0x5f5fc9f3, 0x84a64fb2, 0x4ea6dc4f
0x10a6b4bd, 0x545f2b14, 0x96aa0dc3, 0x2c9c62e0
0x5ef243b3, 0x0b00e2e7, 0x120c4271, 0x623abeaf

Inverse MixColumns block in and block out:
0x5ef243b3, 0x0b00e2e7, 0x120c4271, 0x623abeaf
0xe31e46e7, 0xea101feb, 0x2b212106, 0xb87cf67b

Inverse ShiftRows block in and block out:
0xe31e46e7, 0xea101feb, 0x2b212106, 0xb87cf67b
0xe37c21eb, 0xea1ef606, 0x2b10467b, 0xb8211fe7

Inside inv_substw:
b0 = 0xe3, b1 = 0x7c, b2 = 0x21, b3 = 0xeb
s0 = 0x4d, s1 = 0x01, s2 = 0x7b, s3 = 0x3c
res = 0x4d017b3c
Inside inv_substw:
b0 = 0xea, b1 = 0x1e, b2 = 0xf6, b3 = 0x06
s0 = 0xbb, s1 = 0xe9, s2 = 0xd6, s3 = 0xa5
res = 0xbbe9d6a5
Inside inv_substw:
b0 = 0x2b, b1 = 0x10, b2 = 0x46, b3 = 0x7b
s0 = 0x0b, s1 = 0x7c, s2 = 0x98, s3 = 0x03
res = 0x0b7c9803
Inside inv_substw:
b0 = 0xb8, b1 = 0x21, b2 = 0x1f, b3 = 0xe7
s0 = 0x9a, s1 = 0x7b, s2 = 0xcb, s3 = 0xb0
res = 0x9a7bcbb0
Inverse SubBytes block in and block out:
0xe37c21eb, 0xea1ef606, 0x2b10467b, 0xb8211fe7
0x4d017b3c, 0xbbe9d6a5, 0x0b7c9803, 0x9a7bcbb0


  Round 04
  ---------
AddRoundKey key, block in and block out:
0x6d88a37a, 0x110b3efd, 0xdbf98641, 0xca0093fd
0x4d017b3c, 0xbbe9d6a5, 0x0b7c9803, 0x9a7bcbb0
0x2089d846, 0xaae2e858, 0xd0851e42, 0x507b584d

Inverse MixColumns block in and block out:
0x2089d846, 0xaae2e858, 0xd0851e42, 0x507b584d
0x30aea60f, 0x5051f900, 0x2ed8f20d, 0xf330877a

Inverse ShiftRows block in and block out:
0x30aea60f, 0x5051f900, 0x2ed8f20d, 0xf330877a
0x3030f200, 0x50ae870d, 0x2e51a67a, 0xf3d8f90f

Inside inv_substw:
b0 = 0x30, b1 = 0x30, b2 = 0xf2, b3 = 0x00
s0 = 0x08, s1 = 0x08, s2 = 0x04, s3 = 0x52
res = 0x08080452
Inside inv_substw:
b0 = 0x50, b1 = 0xae, b2 = 0x87, b3 = 0x0d
s0 = 0x6c, s1 = 0xbe, s2 = 0xea, s3 = 0xf3
res = 0x6cbeeaf3
Inside inv_substw:
b0 = 0x2e, b1 = 0x51, b2 = 0xa6, b3 = 0x7a
s0 = 0xc3, s1 = 0x70, s2 = 0xc5, s3 = 0xbd
res = 0xc370c5bd
Inside inv_substw:
b0 = 0xf3, b1 = 0xd8, b2 = 0xf9, b3 = 0x0f
s0 = 0x7e, s1 = 0x2d, s2 = 0x69, s3 = 0xfb
res = 0x7e2d69fb
Inverse SubBytes block in and block out:
0x3030f200, 0x50ae870d, 0x2e51a67a, 0xf3d8f90f
0x08080452, 0x6cbeeaf3, 0xc370c5bd, 0x7e2d69fb


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xd4d1c6f8, 0x7c839d87, 0xcaf2b8bc, 0x11f915bc
0x08080452, 0x6cbeeaf3, 0xc370c5bd, 0x7e2d69fb
0xdcd9c2aa, 0x103d7774, 0x09827d01, 0x6fd47c47

Inverse MixColumns block in and block out:
0xdcd9c2aa, 0x103d7774, 0x09827d01, 0x6fd47c47
0x861042b9, 0x88d3b3c6, 0xc1534025, 0xa209aa81

Inverse ShiftRows block in and block out:
0x861042b9, 0x88d3b3c6, 0xc1534025, 0xa209aa81
0x860940c6, 0x8810aa25, 0xc1d34281, 0xa253b3b9

Inside inv_substw:
b0 = 0x86, b1 = 0x09, b2 = 0x40, b3 = 0xc6
s0 = 0xdc, s1 = 0x40, s2 = 0x72, s3 = 0xc7
res = 0xdc4072c7
Inside inv_substw:
b0 = 0x88, b1 = 0x10, b2 = 0xaa, b3 = 0x25
s0 = 0x97, s1 = 0x7c, s2 = 0x62, s3 = 0xc2
res = 0x977c62c2
Inside inv_substw:
b0 = 0xc1, b1 = 0xd3, b2 = 0x42, b3 = 0x81
s0 = 0xdd, s1 = 0xa9, s2 = 0xf6, s3 = 0x91
res = 0xdda9f691
Inside inv_substw:
b0 = 0xa2, b1 = 0x53, b2 = 0xb3, b3 = 0xb9
s0 = 0x1a, s1 = 0x50, s2 = 0x4b, s3 = 0xdb
res = 0x1a504bdb
Inverse SubBytes block in and block out:
0x860940c6, 0x8810aa25, 0xc1d34281, 0xa253b3b9
0xdc4072c7, 0x977c62c2, 0xdda9f691, 0x1a504bdb


  Round 06
  ---------
AddRoundKey key, block in and block out:
0xef44a541, 0xa8525b7f, 0xb671253b, 0xdb0bad00
0xdc4072c7, 0x977c62c2, 0xdda9f691, 0x1a504bdb
0x3304d786, 0x3f2e39bd, 0x6bd8d3aa, 0xc15be6db

Inverse MixColumns block in and block out:
0x3304d786, 0x3f2e39bd, 0x6bd8d3aa, 0xc15be6db
0x9bfcb3b2, 0x542b6389, 0x00dd3720, 0x9ae4e831

Inverse ShiftRows block in and block out:
0x9bfcb3b2, 0x542b6389, 0x00dd3720, 0x9ae4e831
0x9be43789, 0x54fce820, 0x002bb331, 0x9add63b2

Inside inv_substw:
b0 = 0x9b, b1 = 0xe4, b2 = 0x37, b3 = 0x89
s0 = 0xe8, s1 = 0xae, s2 = 0xb2, s3 = 0xf2
res = 0xe8aeb2f2
Inside inv_substw:
b0 = 0x54, b1 = 0xfc, b2 = 0xe8, b3 = 0x20
s0 = 0xfd, s1 = 0x55, s2 = 0xc8, s3 = 0x54
res = 0xfd55c854
Inside inv_substw:
b0 = 0x00, b1 = 0x2b, b2 = 0xb3, b3 = 0x31
s0 = 0x52, s1 = 0x0b, s2 = 0x4b, s3 = 0x2e
res = 0x520b4b2e
Inside inv_substw:
b0 = 0x9a, b1 = 0xdd, b2 = 0x63, b3 = 0xb2
s0 = 0x37, s1 = 0xc9, s2 = 0x00, s3 = 0x3e
res = 0x37c9003e
Inverse SubBytes block in and block out:
0x9be43789, 0x54fce820, 0x002bb331, 0x9add63b2
0xe8aeb2f2, 0xfd55c854, 0x520b4b2e, 0x37c9003e


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x3d80477d, 0x4716fe3e, 0x1e237e44, 0x6d7a883b
0xe8aeb2f2, 0xfd55c854, 0x520b4b2e, 0x37c9003e
0xd52ef58f, 0xba43366a, 0x4c28356a, 0x5ab38805

Inverse MixColumns block in and block out:
0xd52ef58f, 0xba43366a, 0x4c28356a, 0x5ab38805
0x5dd4646c, 0xaff7728f, 0x83f98ccd, 0x9f42853c

Inverse ShiftRows block in and block out:
0x5dd4646c, 0xaff7728f, 0x83f98ccd, 0x9f42853c
0x5d428c8f, 0xafd485cd, 0x83f7643c, 0x9ff9726c

Inside inv_substw:
b0 = 0x5d, b1 = 0x42, b2 = 0x8c, b3 = 0x8f
s0 = 0x8d, s1 = 0xf6, s2 = 0xf0, s3 = 0x73
res = 0x8df6f073
Inside inv_substw:
b0 = 0xaf, b1 = 0xd4, b2 = 0x85, b3 = 0xcd
s0 = 0x1b, s1 = 0x19, s2 = 0x67, s3 = 0x80
res = 0x1b196780
Inside inv_substw:
b0 = 0x83, b1 = 0xf7, b2 = 0x64, b3 = 0x3c
s0 = 0x41, s1 = 0x26, s2 = 0x8c, s3 = 0x6d
res = 0x41268c6d
Inside inv_substw:
b0 = 0x9f, b1 = 0xf9, b2 = 0x72, b3 = 0x6c
s0 = 0x6e, s1 = 0x69, s2 = 0x1e, s3 = 0xb8
res = 0x6e691eb8
Inverse SubBytes block in and block out:
0x5d428c8f, 0xafd485cd, 0x83f7643c, 0x9ff9726c
0x8df6f073, 0x1b196780, 0x41268c6d, 0x6e691eb8


  Round 08
  ---------
AddRoundKey key, block in and block out:
0xf2c295f2, 0x7a96b943, 0x5935807a, 0x7359f67f
0x8df6f073, 0x1b196780, 0x41268c6d, 0x6e691eb8
0x7f346581, 0x618fdec3, 0x18130c17, 0x1d30e8c7

Inverse MixColumns block in and block out:
0x7f346581, 0x618fdec3, 0x18130c17, 0x1d30e8c7
0x21d47e24, 0x462c049d, 0xceadfa89, 0xac785d8b

Inverse ShiftRows block in and block out:
0x21d47e24, 0x462c049d, 0xceadfa89, 0xac785d8b
0x2178fa9d, 0x46d45d89, 0xce2c7e8b, 0xacad0424

Inside inv_substw:
b0 = 0x21, b1 = 0x78, b2 = 0xfa, b3 = 0x9d
s0 = 0x7b, s1 = 0xc1, s2 = 0x14, s3 = 0x75
res = 0x7bc11475
Inside inv_substw:
b0 = 0x46, b1 = 0xd4, b2 = 0x5d, b3 = 0x89
s0 = 0x98, s1 = 0x19, s2 = 0x8d, s3 = 0xf2
res = 0x98198df2
Inside inv_substw:
b0 = 0xce, b1 = 0x2c, b2 = 0x7e, b3 = 0x8b
s0 = 0xec, s1 = 0x42, s2 = 0x8a, s3 = 0xce
res = 0xec428ace
Inside inv_substw:
b0 = 0xac, b1 = 0xad, b2 = 0x04, b3 = 0x24
s0 = 0xaa, s1 = 0x18, s2 = 0x30, s3 = 0xa6
res = 0xaa1830a6
Inverse SubBytes block in and block out:
0x2178fa9d, 0x46d45d89, 0xce2c7e8b, 0xacad0424
0x7bc11475, 0x98198df2, 0xec428ace, 0xaa1830a6


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xa0fafe17, 0x88542cb1, 0x23a33939, 0x2a6c7605
0x7bc11475, 0x98198df2, 0xec428ace, 0xaa1830a6
0xdb3bea62, 0x104da143, 0xcfe1b3f7, 0x807446a3

Inverse MixColumns block in and block out:
0xdb3bea62, 0x104da143, 0xcfe1b3f7, 0x807446a3
0xc1f82071, 0x6886bced, 0x6f0ac7c8, 0xdff83b0d

Inverse ShiftRows block in and block out:
0xc1f82071, 0x6886bced, 0x6f0ac7c8, 0xdff83b0d
0xc1f8c7ed, 0x68f83bc8, 0x6f86200d, 0xdf0abc71

Inside inv_substw:
b0 = 0xc1, b1 = 0xf8, b2 = 0xc7, b3 = 0xed
s0 = 0xdd, s1 = 0xe1, s2 = 0x31, s3 = 0x53
res = 0xdde13153
Inside inv_substw:
b0 = 0x68, b1 = 0xf8, b2 = 0x3b, b3 = 0xc8
s0 = 0xf7, s1 = 0xe1, s2 = 0x49, s3 = 0xb1
res = 0xf7e149b1
Inside inv_substw:
b0 = 0x6f, b1 = 0x86, b2 = 0x20, b3 = 0x0d
s0 = 0x06, s1 = 0xdc, s2 = 0x54, s3 = 0xf3
res = 0x06dc54f3
Inside inv_substw:
b0 = 0xdf, b1 = 0x0a, b2 = 0xbc, b3 = 0x71
s0 = 0xef, s1 = 0xa3, s2 = 0x78, s3 = 0x2c
res = 0xefa3782c
Inverse SubBytes block in and block out:
0xc1f8c7ed, 0x68f83bc8, 0x6f86200d, 0xdf0abc71
0xdde13153, 0xf7e149b1, 0x06dc54f3, 0xefa3782c

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x2b7e1516, 0x28aed2a6, 0xabf71588, 0x09cf4f3c
0xdde13153, 0xf7e149b1, 0x06dc54f3, 0xefa3782c
0xf69f2445, 0xdf4f9b17, 0xad2b417b, 0xe66c3710

OK. Result matches expected.

Test 0 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xf3eed1bd, 0xb5d2a03c, 0x064b5a7e, 0x3db181f8
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial, partial round.
AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0xf3eed1bd, 0xb5d2a03c, 0x064b5a7e, 0x3db181f8
0x0da6416c, 0x53ca2d37, 0x0226a93a, 0x4ddde2e6

Inverse ShiftRows block in and block out:
0x0da6416c, 0x53ca2d37, 0x0226a93a, 0x4ddde2e6
0x0ddda937, 0x53a6e23a, 0x02ca41e6, 0x4d262d6c

Inside inv_substw:
b0 = 0x0d, b1 = 0xdd, b2 = 0xa9, b3 = 0x37
s0 = 0xf3, s1 = 0xc9, s2 = 0xb7, s3 = 0xb2
res = 0xf3c9b7b2
Inside inv_substw:
b0 = 0x53, b1 = 0xa6, b2 = 0xe2, b3 = 0x3a
s0 = 0x50, s1 = 0xc5, s2 = 0x3b, s3 = 0xa2
res = 0x50c53ba2
Inside inv_substw:
b0 = 0x02, b1 = 0xca, b2 = 0x41, b3 = 0xe6
s0 = 0x6a, s1 = 0x10, s2 = 0xf8, s3 = 0xf5
res = 0x6a10f8f5
Inside inv_substw:
b0 = 0x4d, b1 = 0x26, b2 = 0x2d, b3 = 0x6c
s0 = 0x65, s1 = 0x23, s2 = 0xfa, s3 = 0xb8
res = 0x6523fab8
Inverse SubBytes block in and block out:
0x0ddda937, 0x53a6e23a, 0x02ca41e6, 0x4d262d6c
0xf3c9b7b2, 0x50c53ba2, 0x6a10f8f5, 0x6523fab8


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xf3c9b7b2, 0x50c53ba2, 0x6a10f8f5, 0x6523fab8
0x39331d51, 0xb410a096, 0xf0cf923b, 0xd833e3b5

Inverse MixColumns block in and block out:
0x39331d51, 0xb410a096, 0xf0cf923b, 0xd833e3b5
0xfdbc5552, 0xd92bf292, 0x57c20201, 0xdb848163

Inverse ShiftRows block in and block out:
0xfdbc5552, 0xd92bf292, 0x57c20201, 0xdb848163
0xfd840292, 0xd9bc8101, 0x572b5563, 0xdbc2f252

Inside inv_substw:
b0 = 0xfd, b1 = 0x84, b2 = 0x02, b3 = 0x92
s0 = 0x21, s1 = 0x4f, s2 = 0x6a, s3 = 0x74
res = 0x214f6a74
Inside inv_substw:
b0 = 0xd9, b1 = 0xbc, b2 = 0x81, b3 = 0x01
s0 = 0xe5, s1 = 0x78, s2 = 0x91, s3 = 0x09
res = 0xe5789109
Inside inv_substw:
b0 = 0x57, b1 = 0x2b, b2 = 0x55, b3 = 0x63
s0 = 0xda, s1 = 0x0b, s2 = 0xed, s3 = 0x00
res = 0xda0bed00
Inside inv_substw:
b0 = 0xdb, b1 = 0xc2, b2 = 0xf2, b3 = 0x52
s0 = 0x9f, s1 = 0xa8, s2 = 0x04, s3 = 0x48
res = 0x9fa80448
Inverse SubBytes block in and block out:
0xfd840292, 0xd9bc8101, 0x572b5563, 0xdbc2f252
0x214f6a74, 0xe5789109, 0xda0bed00, 0x9fa80448


  Round 02
  ---------
AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0x214f6a74, 0xe5789109, 0xda0bed00, 0x9fa80448
0x55d32ddf, 0xfd288cd3, 0x387e934f, 0xeba99412

Inverse MixColumns block in and block out:
0x55d32ddf, 0xfd288cd3, 0x387e934f, 0xeba99412
0x40fdd019, 0x250c5bf8, 0x085d8c43, 0x36b7da9f

Inverse ShiftRows block in and block out:
0x40fdd019, 0x250c5bf8, 0x085d8c43, 0x36b7da9f
0x40b78cf8, 0x25fdda43, 0x080cd09f, 0x365d5b19

Inside inv_substw:
b0 = 0x40, b1 = 0xb7, b2 = 0x8c, b3 = 0xf8
s0 = 0x72, s1 = 0x20, s2 = 0xf0, s3 = 0xe1
res = 0x7220f0e1
Inside inv_substw:
b0 = 0x25, b1 = 0xfd, b2 = 0xda, b3 = 0x43
s0 = 0xc2, s1 = 0x21, s2 = 0x7a, s3 = 0x64
res = 0xc2217a64
Inside inv_substw:
b0 = 0x08, b1 = 0x0c, b2 = 0xd0, b3 = 0x9f
s0 = 0xbf, s1 = 0x81, s2 = 0x60, s3 = 0x6e
res = 0xbf81606e
Inside inv_substw:
b0 = 0x36, b1 = 0x5d, b2 = 0x5b, b3 = 0x19
s0 = 0x24, s1 = 0x8d, s2 = 0x57, s3 = 0x8e
res = 0x248d578e
Inverse SubBytes block in and block out:
0x40b78cf8, 0x25fdda43, 0x080cd09f, 0x365d5b19
0x7220f0e1, 0xc2217a64, 0xbf81606e, 0x248d578e


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x7220f0e1, 0xc2217a64, 0xbf81606e, 0x248d578e
0x2aa63abc, 0xec0e4bb3, 0xc18b9194, 0x0342244d

Inverse MixColumns block in and block out:
0x2aa63abc, 0xec0e4bb3, 0xc18b9194, 0x0342244d
0x33b737b9, 0x538cc005, 0x0fc2c143, 0x6ec1199e

Inverse ShiftRows block in and block out:
0x33b737b9, 0x538cc005, 0x0fc2c143, 0x6ec1199e
0x33c1c105, 0x53b71943, 0x0f8c379e, 0x6ec2c0b9

Inside inv_substw:
b0 = 0x33, b1 = 0xc1, b2 = 0xc1, b3 = 0x05
s0 = 0x66, s1 = 0xdd, s2 = 0xdd, s3 = 0x36
res = 0x66dddd36
Inside inv_substw:
b0 = 0x53, b1 = 0xb7, b2 = 0x19, b3 = 0x43
s0 = 0x50, s1 = 0x20, s2 = 0x8e, s3 = 0x64
res = 0x50208e64
Inside inv_substw:
b0 = 0x0f, b1 = 0x8c, b2 = 0x37, b3 = 0x9e
s0 = 0xfb, s1 = 0xf0, s2 = 0xb2, s3 = 0xdf
res = 0xfbf0b2df
Inside inv_substw:
b0 = 0x6e, b1 = 0xc2, b2 = 0xc0, b3 = 0xb9
s0 = 0x45, s1 = 0xa8, s2 = 0x1f, s3 = 0xdb
res = 0x45a81fdb
Inverse SubBytes block in and block out:
0x33c1c105, 0x53b71943, 0x0f8c379e, 0x6ec2c0b9
0x66dddd36, 0x50208e64, 0xfbf0b2df, 0x45a81fdb


  Round 04
  ---------
AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x66dddd36, 0x50208e64, 0xfbf0b2df, 0x45a81fdb
0xb8ceb451, 0x3cecd415, 0x01d5d14a, 0xd3dcf1ce

Inverse MixColumns block in and block out:
0xb8ceb451, 0x3cecd415, 0x01d5d14a, 0xd3dcf1ce
0x031732b5, 0x93cc5917, 0xde969097, 0xee65ac17

Inverse ShiftRows block in and block out:
0x031732b5, 0x93cc5917, 0xde969097, 0xee65ac17
0x03659017, 0x9317ac97, 0xdecc3217, 0xee9659b5

Inside inv_substw:
b0 = 0x03, b1 = 0x65, b2 = 0x90, b3 = 0x17
s0 = 0xd5, s1 = 0xbc, s2 = 0x96, s3 = 0x87
res = 0xd5bc9687
Inside inv_substw:
b0 = 0x93, b1 = 0x17, b2 = 0xac, b3 = 0x97
s0 = 0x22, s1 = 0x87, s2 = 0xaa, s3 = 0x85
res = 0x2287aa85
Inside inv_substw:
b0 = 0xde, b1 = 0xcc, b2 = 0x32, b3 = 0x17
s0 = 0x9c, s1 = 0x27, s2 = 0xa1, s3 = 0x87
res = 0x9c27a187
Inside inv_substw:
b0 = 0xee, b1 = 0x96, b2 = 0x59, b3 = 0xb5
s0 = 0x99, s1 = 0x35, s2 = 0x15, s3 = 0xd2
res = 0x993515d2
Inverse SubBytes block in and block out:
0x03659017, 0x9317ac97, 0xdecc3217, 0xee9659b5
0xd5bc9687, 0x2287aa85, 0x9c27a187, 0x993515d2


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xd5bc9687, 0x2287aa85, 0x9c27a187, 0x993515d2
0x1da87483, 0x542e510f, 0xcc0261aa, 0xc0f097eb

Inverse MixColumns block in and block out:
0x1da87483, 0x542e510f, 0xcc0261aa, 0xc0f097eb
0xb7c35a6c, 0xab4be622, 0xe47f43dd, 0xfd4832cb

Inverse ShiftRows block in and block out:
0xb7c35a6c, 0xab4be622, 0xe47f43dd, 0xfd4832cb
0xb7484322, 0xabc332dd, 0xe44b5acb, 0xfd7fe66c

Inside inv_substw:
b0 = 0xb7, b1 = 0x48, b2 = 0x43, b3 = 0x22
s0 = 0x20, s1 = 0xd4, s2 = 0x64, s3 = 0x94
res = 0x20d46494
Inside inv_substw:
b0 = 0xab, b1 = 0xc3, b2 = 0x32, b3 = 0xdd
s0 = 0x0e, s1 = 0x33, s2 = 0xa1, s3 = 0xc9
res = 0x0e33a1c9
Inside inv_substw:
b0 = 0xe4, b1 = 0x4b, b2 = 0x5a, b3 = 0xcb
s0 = 0xae, s1 = 0xcc, s2 = 0x46, s3 = 0x59
res = 0xaecc4659
Inside inv_substw:
b0 = 0xfd, b1 = 0x7f, b2 = 0xe6, b3 = 0x6c
s0 = 0x21, s1 = 0x6b, s2 = 0xf5, s3 = 0xb8
res = 0x216bf5b8
Inverse SubBytes block in and block out:
0xb7484322, 0xabc332dd, 0xe44b5acb, 0xfd7fe66c
0x20d46494, 0x0e33a1c9, 0xaecc4659, 0x216bf5b8


  Round 06
  ---------
AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x20d46494, 0x0e33a1c9, 0xaecc4659, 0x216bf5b8
0x48d41f38, 0xbcec92df, 0x38257fbd, 0x4d3a7838

Inverse MixColumns block in and block out:
0x48d41f38, 0xbcec92df, 0x38257fbd, 0x4d3a7838
0x38d00251, 0x51294520, 0x78ba9a87, 0xe322b84e

Inverse ShiftRows block in and block out:
0x38d00251, 0x51294520, 0x78ba9a87, 0xe322b84e
0x38229a20, 0x51d0b887, 0x7829024e, 0xe3ba4551

Inside inv_substw:
b0 = 0x38, b1 = 0x22, b2 = 0x9a, b3 = 0x20
s0 = 0x76, s1 = 0x94, s2 = 0x37, s3 = 0x54
res = 0x76943754
Inside inv_substw:
b0 = 0x51, b1 = 0xd0, b2 = 0xb8, b3 = 0x87
s0 = 0x70, s1 = 0x60, s2 = 0x9a, s3 = 0xea
res = 0x70609aea
Inside inv_substw:
b0 = 0x78, b1 = 0x29, b2 = 0x02, b3 = 0x4e
s0 = 0xc1, s1 = 0x4c, s2 = 0x6a, s3 = 0xb6
res = 0xc14c6ab6
Inside inv_substw:
b0 = 0xe3, b1 = 0xba, b2 = 0x45, b3 = 0x51
s0 = 0x4d, s1 = 0xc0, s2 = 0x68, s3 = 0x70
res = 0x4dc06870
Inverse SubBytes block in and block out:
0x38229a20, 0x51d0b887, 0x7829024e, 0xe3ba4551
0x76943754, 0x70609aea, 0xc14c6ab6, 0x4dc06870


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x76943754, 0x70609aea, 0xc14c6ab6, 0x4dc06870
0xee51889d, 0xcedd8364, 0xe7c05111, 0x44202a64

Inverse MixColumns block in and block out:
0xee51889d, 0xcedd8364, 0xe7c05111, 0x44202a64
0x8568aceb, 0xd2a66cec, 0x35e24dfd, 0x4e5e744e

Inverse ShiftRows block in and block out:
0x8568aceb, 0xd2a66cec, 0x35e24dfd, 0x4e5e744e
0x855e4dec, 0xd26874fd, 0x35a6ac4e, 0x4ee26ceb

Inside inv_substw:
b0 = 0x85, b1 = 0x5e, b2 = 0x4d, b3 = 0xec
s0 = 0x67, s1 = 0x9d, s2 = 0x65, s3 = 0x83
res = 0x679d6583
Inside inv_substw:
b0 = 0xd2, b1 = 0x68, b2 = 0x74, b3 = 0xfd
s0 = 0x7f, s1 = 0xf7, s2 = 0xca, s3 = 0x21
res = 0x7ff7ca21
Inside inv_substw:
b0 = 0x35, b1 = 0xa6, b2 = 0xac, b3 = 0x4e
s0 = 0xd9, s1 = 0xc5, s2 = 0xaa, s3 = 0xb6
res = 0xd9c5aab6
Inside inv_substw:
b0 = 0x4e, b1 = 0xe2, b2 = 0x6c, b3 = 0xeb
s0 = 0xb6, s1 = 0x3b, s2 = 0xb8, s3 = 0x3c
res = 0xb63bb83c
Inverse SubBytes block in and block out:
0x855e4dec, 0xd26874fd, 0x35a6ac4e, 0x4ee26ceb
0x679d6583, 0x7ff7ca21, 0xd9c5aab6, 0xb63bb83c


  Round 08
  ---------
AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x679d6583, 0x7ff7ca21, 0xd9c5aab6, 0xb63bb83c
0xe6b1e42e, 0xa528829b, 0xfdf3a044, 0x4c830c58

Inverse MixColumns block in and block out:
0xe6b1e42e, 0xa528829b, 0xfdf3a044, 0x4c830c58
0x59487af6, 0x60c57445, 0x7544e73c, 0xfde8901e

Inverse ShiftRows block in and block out:
0x59487af6, 0x60c57445, 0x7544e73c, 0xfde8901e
0x59e8e745, 0x6048903c, 0x75c57a1e, 0xfd4474f6

Inside inv_substw:
b0 = 0x59, b1 = 0xe8, b2 = 0xe7, b3 = 0x45
s0 = 0x15, s1 = 0xc8, s2 = 0xb0, s3 = 0x68
res = 0x15c8b068
Inside inv_substw:
b0 = 0x60, b1 = 0x48, b2 = 0x90, b3 = 0x3c
s0 = 0x90, s1 = 0xd4, s2 = 0x96, s3 = 0x6d
res = 0x90d4966d
Inside inv_substw:
b0 = 0x75, b1 = 0xc5, b2 = 0x7a, b3 = 0x1e
s0 = 0x3f, s1 = 0x07, s2 = 0xbd, s3 = 0xe9
res = 0x3f07bde9
Inside inv_substw:
b0 = 0xfd, b1 = 0x44, b2 = 0x74, b3 = 0xf6
s0 = 0x21, s1 = 0x86, s2 = 0xca, s3 = 0xd6
res = 0x2186cad6
Inverse SubBytes block in and block out:
0x59e8e745, 0x6048903c, 0x75c57a1e, 0xfd4474f6
0x15c8b068, 0x90d4966d, 0x3f07bde9, 0x2186cad6


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x15c8b068, 0x90d4966d, 0x3f07bde9, 0x2186cad6
0xa06182e2, 0xb6ac302a, 0xa7369fc0, 0x0eeab365

Inverse MixColumns block in and block out:
0xa06182e2, 0xb6ac302a, 0xa7369fc0, 0x0eeab365
0x6f581482, 0xaca12a27, 0x9a6e251f, 0xa6eb7f00

Inverse ShiftRows block in and block out:
0x6f581482, 0xaca12a27, 0x9a6e251f, 0xa6eb7f00
0x6feb2527, 0xac587f1f, 0x9aa11400, 0xa66e2a82

Inside inv_substw:
b0 = 0x6f, b1 = 0xeb, b2 = 0x25, b3 = 0x27
s0 = 0x06, s1 = 0x3c, s2 = 0xc2, s3 = 0x3d
res = 0x063cc23d
Inside inv_substw:
b0 = 0xac, b1 = 0x58, b2 = 0x7f, b3 = 0x1f
s0 = 0xaa, s1 = 0x5e, s2 = 0x6b, s3 = 0xcb
res = 0xaa5e6bcb
Inside inv_substw:
b0 = 0x9a, b1 = 0xa1, b2 = 0x14, b3 = 0x00
s0 = 0x37, s1 = 0xf1, s2 = 0x9b, s3 = 0x52
res = 0x37f19b52
Inside inv_substw:
b0 = 0xa6, b1 = 0x6e, b2 = 0x2a, b3 = 0x82
s0 = 0xc5, s1 = 0x45, s2 = 0x95, s3 = 0x11
res = 0xc5459511
Inverse SubBytes block in and block out:
0x6feb2527, 0xac587f1f, 0x9aa11400, 0xa66e2a82
0x063cc23d, 0xaa5e6bcb, 0x37f19b52, 0xc5459511


  Round 10
  ---------
AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0x063cc23d, 0xaa5e6bcb, 0x37f19b52, 0xc5459511
0xd3a62e85, 0xf1ada2dc, 0xc918d91a, 0x1bcb2b87

Inverse MixColumns block in and block out:
0xd3a62e85, 0xf1ada2dc, 0xc918d91a, 0x1bcb2b87
0x9455ced1, 0x37452070, 0xb20b862d, 0xd18a193e

Inverse ShiftRows block in and block out:
0x9455ced1, 0x37452070, 0xb20b862d, 0xd18a193e
0x948a8670, 0x3755192d, 0xb245ce3e, 0xd10b20d1

Inside inv_substw:
b0 = 0x94, b1 = 0x8a, b2 = 0x86, b3 = 0x70
s0 = 0xe7, s1 = 0xcf, s2 = 0xdc, s3 = 0xd0
res = 0xe7cfdcd0
Inside inv_substw:
b0 = 0x37, b1 = 0x55, b2 = 0x19, b3 = 0x2d
s0 = 0xb2, s1 = 0xed, s2 = 0x8e, s3 = 0xfa
res = 0xb2ed8efa
Inside inv_substw:
b0 = 0xb2, b1 = 0x45, b2 = 0xce, b3 = 0x3e
s0 = 0x3e, s1 = 0x68, s2 = 0xec, s3 = 0xd1
res = 0x3e68ecd1
Inside inv_substw:
b0 = 0xd1, b1 = 0x0b, b2 = 0x20, b3 = 0xd1
s0 = 0x51, s1 = 0x9e, s2 = 0x54, s3 = 0x51
res = 0x519e5451
Inverse SubBytes block in and block out:
0x948a8670, 0x3755192d, 0xb245ce3e, 0xd10b20d1
0xe7cfdcd0, 0xb2ed8efa, 0x3e68ecd1, 0x519e5451


  Round 11
  ---------
AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xe7cfdcd0, 0xb2ed8efa, 0x3e68ecd1, 0x519e5451
0x4f7f40ca, 0x213c1a37, 0x802168bf, 0xe6c30fcb

Inverse MixColumns block in and block out:
0x4f7f40ca, 0x213c1a37, 0x802168bf, 0xe6c30fcb
0x0efe6e24, 0x5cf7079c, 0xbf16bb64, 0x8dc8bd19

Inverse ShiftRows block in and block out:
0x0efe6e24, 0x5cf7079c, 0xbf16bb64, 0x8dc8bd19
0x0ec8bb9c, 0x5cfebd64, 0xbff76e19, 0x8d160724

Inside inv_substw:
b0 = 0x0e, b1 = 0xc8, b2 = 0xbb, b3 = 0x9c
s0 = 0xd7, s1 = 0xb1, s2 = 0xfe, s3 = 0x1c
res = 0xd7b1fe1c
Inside inv_substw:
b0 = 0x5c, b1 = 0xfe, b2 = 0xbd, b3 = 0x64
s0 = 0xa7, s1 = 0x0c, s2 = 0xcd, s3 = 0x8c
res = 0xa70ccd8c
Inside inv_substw:
b0 = 0xbf, b1 = 0xf7, b2 = 0x6e, b3 = 0x19
s0 = 0xf4, s1 = 0x26, s2 = 0x45, s3 = 0x8e
res = 0xf426458e
Inside inv_substw:
b0 = 0x8d, b1 = 0x16, b2 = 0x07, b3 = 0x24
s0 = 0xb4, s1 = 0xff, s2 = 0x38, s3 = 0xa6
res = 0xb4ff38a6
Inverse SubBytes block in and block out:
0x0ec8bb9c, 0x5cfebd64, 0xbff76e19, 0x8d160724
0xd7b1fe1c, 0xa70ccd8c, 0xf426458e, 0xb4ff38a6


  Round 12
  ---------
AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xd7b1fe1c, 0xa70ccd8c, 0xf426458e, 0xb4ff38a6
0x4c12aa0d, 0x2965e823, 0x513cced1, 0x9498c478

Inverse MixColumns block in and block out:
0x4c12aa0d, 0x2965e823, 0x513cced1, 0x9498c478
0x35753a83, 0x4bb49fe7, 0x0e95759c, 0x90cabb51

Inverse ShiftRows block in and block out:
0x35753a83, 0x4bb49fe7, 0x0e95759c, 0x90cabb51
0x35ca75e7, 0x4b75bb9c, 0x0eb43a51, 0x90959f83

Inside inv_substw:
b0 = 0x35, b1 = 0xca, b2 = 0x75, b3 = 0xe7
s0 = 0xd9, s1 = 0x10, s2 = 0x3f, s3 = 0xb0
res = 0xd9103fb0
Inside inv_substw:
b0 = 0x4b, b1 = 0x75, b2 = 0xbb, b3 = 0x9c
s0 = 0xcc, s1 = 0x3f, s2 = 0xfe, s3 = 0x1c
res = 0xcc3ffe1c
Inside inv_substw:
b0 = 0x0e, b1 = 0xb4, b2 = 0x3a, b3 = 0x51
s0 = 0xd7, s1 = 0xc6, s2 = 0xa2, s3 = 0x70
res = 0xd7c6a270
Inside inv_substw:
b0 = 0x90, b1 = 0x95, b2 = 0x9f, b3 = 0x83
s0 = 0x96, s1 = 0xad, s2 = 0x6e, s3 = 0x41
res = 0x96ad6e41
Inverse SubBytes block in and block out:
0x35ca75e7, 0x4b75bb9c, 0x0eb43a51, 0x90959f83
0xd9103fb0, 0xcc3ffe1c, 0xd7c6a270, 0x96ad6e41


  Round 13
  ---------
AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xd9103fb0, 0xcc3ffe1c, 0xd7c6a270, 0x96ad6e41
0xc62513b7, 0xf75ef6cb, 0xfa5eb2d3, 0x9fb9b1b5

Inverse MixColumns block in and block out:
0xc62513b7, 0xf75ef6cb, 0xfa5eb2d3, 0x9fb9b1b5
0x2b7e7062, 0xe22fd089, 0x2528fc34, 0x42b028f8

Inverse ShiftRows block in and block out:
0x2b7e7062, 0xe22fd089, 0x2528fc34, 0x42b028f8
0x2bb0fc89, 0xe27e2834, 0x252f70f8, 0x4228d062

Inside inv_substw:
b0 = 0x2b, b1 = 0xb0, b2 = 0xfc, b3 = 0x89
s0 = 0x0b, s1 = 0xfc, s2 = 0x55, s3 = 0xf2
res = 0x0bfc55f2
Inside inv_substw:
b0 = 0xe2, b1 = 0x7e, b2 = 0x28, b3 = 0x34
s0 = 0x3b, s1 = 0x8a, s2 = 0xee, s3 = 0x28
res = 0x3b8aee28
Inside inv_substw:
b0 = 0x25, b1 = 0x2f, b2 = 0x70, b3 = 0xf8
s0 = 0xc2, s1 = 0x4e, s2 = 0xd0, s3 = 0xe1
res = 0xc24ed0e1
Inside inv_substw:
b0 = 0x42, b1 = 0x28, b2 = 0xd0, b3 = 0x62
s0 = 0xf6, s1 = 0xee, s2 = 0x60, s3 = 0xab
res = 0xf6ee60ab
Inverse SubBytes block in and block out:
0x2bb0fc89, 0xe27e2834, 0x252f70f8, 0x4228d062
0x0bfc55f2, 0x3b8aee28, 0xc24ed0e1, 0xf6ee60ab

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x0bfc55f2, 0x3b8aee28, 0xc24ed0e1, 0xf6ee60ab
0x6bc1bee2, 0x2e409f96, 0xe93d7e11, 0x7393172a

OK. Result matches expected.

Test 1 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x591ccb10, 0xd410ed26, 0xdc5ba74a, 0x31362870
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial, partial round.
AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0x591ccb10, 0xd410ed26, 0xdc5ba74a, 0x31362870
0xa7545bc1, 0x3208602d, 0xd836540e, 0x415a4b6e

Inverse ShiftRows block in and block out:
0xa7545bc1, 0x3208602d, 0xd836540e, 0x415a4b6e
0xa75a542d, 0x32544b0e, 0xd8085b6e, 0x413660c1

Inside inv_substw:
b0 = 0xa7, b1 = 0x5a, b2 = 0x54, b3 = 0x2d
s0 = 0x89, s1 = 0x46, s2 = 0xfd, s3 = 0xfa
res = 0x8946fdfa
Inside inv_substw:
b0 = 0x32, b1 = 0x54, b2 = 0x4b, b3 = 0x0e
s0 = 0xa1, s1 = 0xfd, s2 = 0xcc, s3 = 0xd7
res = 0xa1fdccd7
Inside inv_substw:
b0 = 0xd8, b1 = 0x08, b2 = 0x5b, b3 = 0x6e
s0 = 0x2d, s1 = 0xbf, s2 = 0x57, s3 = 0x45
res = 0x2dbf5745
Inside inv_substw:
b0 = 0x41, b1 = 0x36, b2 = 0x60, b3 = 0xc1
s0 = 0xf8, s1 = 0x24, s2 = 0x90, s3 = 0xdd
res = 0xf82490dd
Inverse SubBytes block in and block out:
0xa75a542d, 0x32544b0e, 0xd8085b6e, 0x413660c1
0x8946fdfa, 0xa1fdccd7, 0x2dbf5745, 0xf82490dd


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0x8946fdfa, 0xa1fdccd7, 0x2dbf5745, 0xf82490dd
0x43bc5719, 0x452857e3, 0xb7603d8b, 0x453489d0

Inverse MixColumns block in and block out:
0x43bc5719, 0x452857e3, 0xb7603d8b, 0x453489d0
0xb89dd541, 0x9c9c27fe, 0x581f1036, 0xc99b552f

Inverse ShiftRows block in and block out:
0xb89dd541, 0x9c9c27fe, 0x581f1036, 0xc99b552f
0xb89b10fe, 0x9c9d5536, 0x589cd52f, 0xc91f2741

Inside inv_substw:
b0 = 0xb8, b1 = 0x9b, b2 = 0x10, b3 = 0xfe
s0 = 0x9a, s1 = 0xe8, s2 = 0x7c, s3 = 0x0c
res = 0x9ae87c0c
Inside inv_substw:
b0 = 0x9c, b1 = 0x9d, b2 = 0x55, b3 = 0x36
s0 = 0x1c, s1 = 0x75, s2 = 0xed, s3 = 0x24
res = 0x1c75ed24
Inside inv_substw:
b0 = 0x58, b1 = 0x9c, b2 = 0xd5, b3 = 0x2f
s0 = 0x5e, s1 = 0x1c, s2 = 0xb5, s3 = 0x4e
res = 0x5e1cb54e
Inside inv_substw:
b0 = 0xc9, b1 = 0x1f, b2 = 0x27, b3 = 0x41
s0 = 0x12, s1 = 0xcb, s2 = 0x3d, s3 = 0xf8
res = 0x12cb3df8
Inverse SubBytes block in and block out:
0xb89b10fe, 0x9c9d5536, 0x589cd52f, 0xc91f2741
0x9ae87c0c, 0x1c75ed24, 0x5e1cb54e, 0x12cb3df8


  Round 02
  ---------
AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0x9ae87c0c, 0x1c75ed24, 0x5e1cb54e, 0x12cb3df8
0xee743ba7, 0x0425f0fe, 0xbc69cb01, 0x66caada2

Inverse MixColumns block in and block out:
0xee743ba7, 0x0425f0fe, 0xbc69cb01, 0x66caada2
0x8ebd5762, 0xf7995d1c, 0x2d6a643c, 0xe8737e46

Inverse ShiftRows block in and block out:
0x8ebd5762, 0xf7995d1c, 0x2d6a643c, 0xe8737e46
0x8e73641c, 0xf7bd7e3c, 0x2d995746, 0xe86a5d62

Inside inv_substw:
b0 = 0x8e, b1 = 0x73, b2 = 0x64, b3 = 0x1c
s0 = 0xe6, s1 = 0x8f, s2 = 0x8c, s3 = 0xc4
res = 0xe68f8cc4
Inside inv_substw:
b0 = 0xf7, b1 = 0xbd, b2 = 0x7e, b3 = 0x3c
s0 = 0x26, s1 = 0xcd, s2 = 0x8a, s3 = 0x6d
res = 0x26cd8a6d
Inside inv_substw:
b0 = 0x2d, b1 = 0x99, b2 = 0x57, b3 = 0x46
s0 = 0xfa, s1 = 0xf9, s2 = 0xda, s3 = 0x98
res = 0xfaf9da98
Inside inv_substw:
b0 = 0xe8, b1 = 0x6a, b2 = 0x5d, b3 = 0x62
s0 = 0xc8, s1 = 0x58, s2 = 0x8d, s3 = 0xab
res = 0xc8588dab
Inverse SubBytes block in and block out:
0x8e73641c, 0xf7bd7e3c, 0x2d995746, 0xe86a5d62
0xe68f8cc4, 0x26cd8a6d, 0xfaf9da98, 0xc8588dab


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0xe68f8cc4, 0x26cd8a6d, 0xfaf9da98, 0xc8588dab
0xbe094699, 0x08e2bbba, 0x84f32b62, 0xef97fe68

Inverse MixColumns block in and block out:
0xbe094699, 0x08e2bbba, 0x84f32b62, 0xef97fe68
0x03e42ba4, 0xcfd9b14c, 0x35ffe612, 0x844b5273

Inverse ShiftRows block in and block out:
0x03e42ba4, 0xcfd9b14c, 0x35ffe612, 0x844b5273
0x034be64c, 0xcfe45212, 0x35d92b73, 0x84ffb1a4

Inside inv_substw:
b0 = 0x03, b1 = 0x4b, b2 = 0xe6, b3 = 0x4c
s0 = 0xd5, s1 = 0xcc, s2 = 0xf5, s3 = 0x5d
res = 0xd5ccf55d
Inside inv_substw:
b0 = 0xcf, b1 = 0xe4, b2 = 0x52, b3 = 0x12
s0 = 0x5f, s1 = 0xae, s2 = 0x48, s3 = 0x39
res = 0x5fae4839
Inside inv_substw:
b0 = 0x35, b1 = 0xd9, b2 = 0x2b, b3 = 0x73
s0 = 0xd9, s1 = 0xe5, s2 = 0x0b, s3 = 0x8f
res = 0xd9e50b8f
Inside inv_substw:
b0 = 0x84, b1 = 0xff, b2 = 0xb1, b3 = 0xa4
s0 = 0x4f, s1 = 0x7d, s2 = 0x56, s3 = 0x1d
res = 0x4f7d561d
Inverse SubBytes block in and block out:
0x034be64c, 0xcfe45212, 0x35d92b73, 0x84ffb1a4
0xd5ccf55d, 0x5fae4839, 0xd9e50b8f, 0x4f7d561d


  Round 04
  ---------
AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0xd5ccf55d, 0x5fae4839, 0xd9e50b8f, 0x4f7d561d
0x0bdf9c3a, 0x33621248, 0x23c0681a, 0xd909b808

Inverse MixColumns block in and block out:
0x0bdf9c3a, 0x33621248, 0x23c0681a, 0xd909b808
0x1d2f6e2e, 0x46797145, 0xbcbbce58, 0xb03911f8

Inverse ShiftRows block in and block out:
0x1d2f6e2e, 0x46797145, 0xbcbbce58, 0xb03911f8
0x1d39ce45, 0x462f1158, 0xbc796ef8, 0xb0bb712e

Inside inv_substw:
b0 = 0x1d, b1 = 0x39, b2 = 0xce, b3 = 0x45
s0 = 0xde, s1 = 0x5b, s2 = 0xec, s3 = 0x68
res = 0xde5bec68
Inside inv_substw:
b0 = 0x46, b1 = 0x2f, b2 = 0x11, b3 = 0x58
s0 = 0x98, s1 = 0x4e, s2 = 0xe3, s3 = 0x5e
res = 0x984ee35e
Inside inv_substw:
b0 = 0xbc, b1 = 0x79, b2 = 0x6e, b3 = 0xf8
s0 = 0x78, s1 = 0xaf, s2 = 0x45, s3 = 0xe1
res = 0x78af45e1
Inside inv_substw:
b0 = 0xb0, b1 = 0xbb, b2 = 0x71, b3 = 0x2e
s0 = 0xfc, s1 = 0xfe, s2 = 0x2c, s3 = 0xc3
res = 0xfcfe2cc3
Inverse SubBytes block in and block out:
0x1d39ce45, 0x462f1158, 0xbc796ef8, 0xb0bb712e
0xde5bec68, 0x984ee35e, 0x78af45e1, 0xfcfe2cc3


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde5bec68, 0x984ee35e, 0x78af45e1, 0xfcfe2cc3
0x164f0e6c, 0xeee718d4, 0x288a85cc, 0xa53baefa

Inverse MixColumns block in and block out:
0x164f0e6c, 0xeee718d4, 0x288a85cc, 0xa53baefa
0x3cb952ec, 0xbe79d9db, 0x076567ee, 0x6ee3eaad

Inverse ShiftRows block in and block out:
0x3cb952ec, 0xbe79d9db, 0x076567ee, 0x6ee3eaad
0x3ce367db, 0xbeb9eaee, 0x077952ad, 0x6e65d9ec

Inside inv_substw:
b0 = 0x3c, b1 = 0xe3, b2 = 0x67, b3 = 0xdb
s0 = 0x6d, s1 = 0x4d, s2 = 0x0a, s3 = 0x9f
res = 0x6d4d0a9f
Inside inv_substw:
b0 = 0xbe, b1 = 0xb9, b2 = 0xea, b3 = 0xee
s0 = 0x5a, s1 = 0xdb, s2 = 0xbb, s3 = 0x99
res = 0x5adbbb99
Inside inv_substw:
b0 = 0x07, b1 = 0x79, b2 = 0x52, b3 = 0xad
s0 = 0x38, s1 = 0xaf, s2 = 0x48, s3 = 0x18
res = 0x38af4818
Inside inv_substw:
b0 = 0x6e, b1 = 0x65, b2 = 0xd9, b3 = 0xec
s0 = 0x45, s1 = 0xbc, s2 = 0xe5, s3 = 0x83
res = 0x45bce583
Inverse SubBytes block in and block out:
0x3ce367db, 0xbeb9eaee, 0x077952ad, 0x6e65d9ec
0x6d4d0a9f, 0x5adbbb99, 0x38af4818, 0x45bce583


  Round 06
  ---------
AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x6d4d0a9f, 0x5adbbb99, 0x38af4818, 0x45bce583
0x054d7133, 0xe804888f, 0xae4671fc, 0x29ed6803

Inverse MixColumns block in and block out:
0x054d7133, 0xe804888f, 0xae4671fc, 0x29ed6803
0x048c64e6, 0x42efefa9, 0x549641e6, 0x05c90162

Inverse ShiftRows block in and block out:
0x048c64e6, 0x42efefa9, 0x549641e6, 0x05c90162
0x04c941a9, 0x428c01e6, 0x54ef6462, 0x0596efe6

Inside inv_substw:
b0 = 0x04, b1 = 0xc9, b2 = 0x41, b3 = 0xa9
s0 = 0x30, s1 = 0x12, s2 = 0xf8, s3 = 0xb7
res = 0x3012f8b7
Inside inv_substw:
b0 = 0x42, b1 = 0x8c, b2 = 0x01, b3 = 0xe6
s0 = 0xf6, s1 = 0xf0, s2 = 0x09, s3 = 0xf5
res = 0xf6f009f5
Inside inv_substw:
b0 = 0x54, b1 = 0xef, b2 = 0x64, b3 = 0x62
s0 = 0xfd, s1 = 0x61, s2 = 0x8c, s3 = 0xab
res = 0xfd618cab
Inside inv_substw:
b0 = 0x05, b1 = 0x96, b2 = 0xef, b3 = 0xe6
s0 = 0x36, s1 = 0x35, s2 = 0x61, s3 = 0xf5
res = 0x363561f5
Inverse SubBytes block in and block out:
0x04c941a9, 0x428c01e6, 0x54ef6462, 0x0596efe6
0x3012f8b7, 0xf6f009f5, 0xfd618cab, 0x363561f5


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x3012f8b7, 0xf6f009f5, 0xfd618cab, 0x363561f5
0xa8d7477e, 0x484d107b, 0xdbedb70c, 0x3fd523e1

Inverse MixColumns block in and block out:
0xa8d7477e, 0x484d107b, 0xdbedb70c, 0x3fd523e1
0x873ee41b, 0x0a1c8ef6, 0x9579f899, 0xf381bfe5

Inverse ShiftRows block in and block out:
0x873ee41b, 0x0a1c8ef6, 0x9579f899, 0xf381bfe5
0x8781f8f6, 0x0a3ebf99, 0x951ce4e5, 0xf3798e1b

Inside inv_substw:
b0 = 0x87, b1 = 0x81, b2 = 0xf8, b3 = 0xf6
s0 = 0xea, s1 = 0x91, s2 = 0xe1, s3 = 0xd6
res = 0xea91e1d6
Inside inv_substw:
b0 = 0x0a, b1 = 0x3e, b2 = 0xbf, b3 = 0x99
s0 = 0xa3, s1 = 0xd1, s2 = 0xf4, s3 = 0xf9
res = 0xa3d1f4f9
Inside inv_substw:
b0 = 0x95, b1 = 0x1c, b2 = 0xe4, b3 = 0xe5
s0 = 0xad, s1 = 0xc4, s2 = 0xae, s3 = 0x2a
res = 0xadc4ae2a
Inside inv_substw:
b0 = 0xf3, b1 = 0x79, b2 = 0x8e, b3 = 0x1b
s0 = 0x7e, s1 = 0xaf, s2 = 0xe6, s3 = 0x44
res = 0x7eafe644
Inverse SubBytes block in and block out:
0x8781f8f6, 0x0a3ebf99, 0x951ce4e5, 0xf3798e1b
0xea91e1d6, 0xa3d1f4f9, 0xadc4ae2a, 0x7eafe644


  Round 08
  ---------
AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0xea91e1d6, 0xa3d1f4f9, 0xadc4ae2a, 0x7eafe644
0x6bbd607b, 0x790ebc43, 0x89f2a4d8, 0x84175220

Inverse MixColumns block in and block out:
0x6bbd607b, 0x790ebc43, 0x89f2a4d8, 0x84175220
0x0fd68591, 0x0afac4bc, 0xf4c9d7ed, 0x64e96b07

Inverse ShiftRows block in and block out:
0x0fd68591, 0x0afac4bc, 0xf4c9d7ed, 0x64e96b07
0x0fe9d7bc, 0x0ad66bed, 0xf4fa8507, 0x64c9c491

Inside inv_substw:
b0 = 0x0f, b1 = 0xe9, b2 = 0xd7, b3 = 0xbc
s0 = 0xfb, s1 = 0xeb, s2 = 0x0d, s3 = 0x78
res = 0xfbeb0d78
Inside inv_substw:
b0 = 0x0a, b1 = 0xd6, b2 = 0x6b, b3 = 0xed
s0 = 0xa3, s1 = 0x4a, s2 = 0x05, s3 = 0x53
res = 0xa34a0553
Inside inv_substw:
b0 = 0xf4, b1 = 0xfa, b2 = 0x85, b3 = 0x07
s0 = 0xba, s1 = 0x14, s2 = 0x67, s3 = 0x38
res = 0xba146738
Inside inv_substw:
b0 = 0x64, b1 = 0xc9, b2 = 0xc4, b3 = 0x91
s0 = 0x8c, s1 = 0x12, s2 = 0x88, s3 = 0xac
res = 0x8c1288ac
Inverse SubBytes block in and block out:
0x0fe9d7bc, 0x0ad66bed, 0xf4fa8507, 0x64c9c491
0xfbeb0d78, 0xa34a0553, 0xba146738, 0x8c1288ac


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0xfbeb0d78, 0xa34a0553, 0xba146738, 0x8c1288ac
0x4e423ff2, 0x8532a314, 0x22254511, 0xa37ef11f

Inverse MixColumns block in and block out:
0x4e423ff2, 0x8532a314, 0x22254511, 0xa37ef11f
0x1addf2f4, 0x68934eb5, 0x56c8975a, 0xe154d553

Inverse ShiftRows block in and block out:
0x1addf2f4, 0x68934eb5, 0x56c8975a, 0xe154d553
0x1a5497b5, 0x68ddd55a, 0x5693f253, 0xe1c84ef4

Inside inv_substw:
b0 = 0x1a, b1 = 0x54, b2 = 0x97, b3 = 0xb5
s0 = 0x43, s1 = 0xfd, s2 = 0x85, s3 = 0xd2
res = 0x43fd85d2
Inside inv_substw:
b0 = 0x68, b1 = 0xdd, b2 = 0xd5, b3 = 0x5a
s0 = 0xf7, s1 = 0xc9, s2 = 0xb5, s3 = 0x46
res = 0xf7c9b546
Inside inv_substw:
b0 = 0x56, b1 = 0x93, b2 = 0xf2, b3 = 0x53
s0 = 0xb9, s1 = 0x22, s2 = 0x04, s3 = 0x50
res = 0xb9220450
Inside inv_substw:
b0 = 0xe1, b1 = 0xc8, b2 = 0x4e, b3 = 0xf4
s0 = 0xe0, s1 = 0xb1, s2 = 0xb6, s3 = 0xba
res = 0xe0b1b6ba
Inverse SubBytes block in and block out:
0x1a5497b5, 0x68ddd55a, 0x5693f253, 0xe1c84ef4
0x43fd85d2, 0xf7c9b546, 0xb9220450, 0xe0b1b6ba


  Round 10
  ---------
AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0x43fd85d2, 0xf7c9b546, 0xb9220450, 0xe0b1b6ba
0x9667696a, 0xac3a7c51, 0x47cb4618, 0x3e3f082c

Inverse MixColumns block in and block out:
0x9667696a, 0xac3a7c51, 0x47cb4618, 0x3e3f082c
0x9d6c9d9e, 0xe2155f13, 0x58b3e6df, 0xf20b8e52

Inverse ShiftRows block in and block out:
0x9d6c9d9e, 0xe2155f13, 0x58b3e6df, 0xf20b8e52
0x9d0be613, 0xe26c8edf, 0x58159d52, 0xf2b35f9e

Inside inv_substw:
b0 = 0x9d, b1 = 0x0b, b2 = 0xe6, b3 = 0x13
s0 = 0x75, s1 = 0x9e, s2 = 0xf5, s3 = 0x82
res = 0x759ef582
Inside inv_substw:
b0 = 0xe2, b1 = 0x6c, b2 = 0x8e, b3 = 0xdf
s0 = 0x3b, s1 = 0xb8, s2 = 0xe6, s3 = 0xef
res = 0x3bb8e6ef
Inside inv_substw:
b0 = 0x58, b1 = 0x15, b2 = 0x9d, b3 = 0x52
s0 = 0x5e, s1 = 0x2f, s2 = 0x75, s3 = 0x48
res = 0x5e2f7548
Inside inv_substw:
b0 = 0xf2, b1 = 0xb3, b2 = 0x5f, b3 = 0x9e
s0 = 0x04, s1 = 0x4b, s2 = 0x84, s3 = 0xdf
res = 0x044b84df
Inverse SubBytes block in and block out:
0x9d0be613, 0xe26c8edf, 0x58159d52, 0xf2b35f9e
0x759ef582, 0x3bb8e6ef, 0x5e2f7548, 0x044b84df


  Round 11
  ---------
AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0x759ef582, 0x3bb8e6ef, 0x5e2f7548, 0x044b84df
0xdd2e6998, 0xa8697222, 0xe066f126, 0xb316df45

Inverse MixColumns block in and block out:
0xdd2e6998, 0xa8697222, 0xe066f126, 0xb316df45
0xd45c64ee, 0x011de26f, 0x5ca7ef45, 0x95148739

Inverse ShiftRows block in and block out:
0xd45c64ee, 0x011de26f, 0x5ca7ef45, 0x95148739
0xd414ef6f, 0x015c8745, 0x5c1d6439, 0x95a7e2ee

Inside inv_substw:
b0 = 0xd4, b1 = 0x14, b2 = 0xef, b3 = 0x6f
s0 = 0x19, s1 = 0x9b, s2 = 0x61, s3 = 0x06
res = 0x199b6106
Inside inv_substw:
b0 = 0x01, b1 = 0x5c, b2 = 0x87, b3 = 0x45
s0 = 0x09, s1 = 0xa7, s2 = 0xea, s3 = 0x68
res = 0x09a7ea68
Inside inv_substw:
b0 = 0x5c, b1 = 0x1d, b2 = 0x64, b3 = 0x39
s0 = 0xa7, s1 = 0xde, s2 = 0x8c, s3 = 0x5b
res = 0xa7de8c5b
Inside inv_substw:
b0 = 0x95, b1 = 0xa7, b2 = 0xe2, b3 = 0xee
s0 = 0xad, s1 = 0x89, s2 = 0x3b, s3 = 0x99
res = 0xad893b99
Inverse SubBytes block in and block out:
0xd414ef6f, 0x015c8745, 0x5c1d6439, 0x95a7e2ee
0x199b6106, 0x09a7ea68, 0xa7de8c5b, 0xad893b99


  Round 12
  ---------
AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0x199b6106, 0x09a7ea68, 0xa7de8c5b, 0xad893b99
0x82383517, 0x87cecfc7, 0x02c40704, 0x8deec747

Inverse MixColumns block in and block out:
0x82383517, 0x87cecfc7, 0x02c40704, 0x8deec747
0x33aaafae, 0x51979b1c, 0x36c3a292, 0xc29455e0

Inverse ShiftRows block in and block out:
0x33aaafae, 0x51979b1c, 0x36c3a292, 0xc29455e0
0x3394a21c, 0x51aa5592, 0x3697afe0, 0xc2c39bae

Inside inv_substw:
b0 = 0x33, b1 = 0x94, b2 = 0xa2, b3 = 0x1c
s0 = 0x66, s1 = 0xe7, s2 = 0x1a, s3 = 0xc4
res = 0x66e71ac4
Inside inv_substw:
b0 = 0x51, b1 = 0xaa, b2 = 0x55, b3 = 0x92
s0 = 0x70, s1 = 0x62, s2 = 0xed, s3 = 0x74
res = 0x7062ed74
Inside inv_substw:
b0 = 0x36, b1 = 0x97, b2 = 0xaf, b3 = 0xe0
s0 = 0x24, s1 = 0x85, s2 = 0x1b, s3 = 0xa0
res = 0x24851ba0
Inside inv_substw:
b0 = 0xc2, b1 = 0xc3, b2 = 0x9b, b3 = 0xae
s0 = 0xa8, s1 = 0x33, s2 = 0xe8, s3 = 0xbe
res = 0xa833e8be
Inverse SubBytes block in and block out:
0x3394a21c, 0x51aa5592, 0x3697afe0, 0xc2c39bae
0x66e71ac4, 0x7062ed74, 0x24851ba0, 0xa833e8be


  Round 13
  ---------
AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x66e71ac4, 0x7062ed74, 0x24851ba0, 0xa833e8be
0x79d236c3, 0x4b03e5a3, 0x091d0b03, 0xa127374a

Inverse MixColumns block in and block out:
0x79d236c3, 0x4b03e5a3, 0x091d0b03, 0xa127374a
0x8bdd7870, 0x2b1c99a0, 0xd5b5ef93, 0xbacac14a

Inverse ShiftRows block in and block out:
0x8bdd7870, 0x2b1c99a0, 0xd5b5ef93, 0xbacac14a
0x8bcaefa0, 0x2bddc193, 0xd51c784a, 0xbab59970

Inside inv_substw:
b0 = 0x8b, b1 = 0xca, b2 = 0xef, b3 = 0xa0
s0 = 0xce, s1 = 0x10, s2 = 0x61, s3 = 0x47
res = 0xce106147
Inside inv_substw:
b0 = 0x2b, b1 = 0xdd, b2 = 0xc1, b3 = 0x93
s0 = 0x0b, s1 = 0xc9, s2 = 0xdd, s3 = 0x22
res = 0x0bc9dd22
Inside inv_substw:
b0 = 0xd5, b1 = 0x1c, b2 = 0x78, b3 = 0x4a
s0 = 0xb5, s1 = 0xc4, s2 = 0xc1, s3 = 0x5c
res = 0xb5c4c15c
Inside inv_substw:
b0 = 0xba, b1 = 0xb5, b2 = 0x99, b3 = 0x70
s0 = 0xc0, s1 = 0xd2, s2 = 0xf9, s3 = 0xd0
res = 0xc0d2f9d0
Inverse SubBytes block in and block out:
0x8bcaefa0, 0x2bddc193, 0xd51c784a, 0xbab59970
0xce106147, 0x0bc9dd22, 0xb5c4c15c, 0xc0d2f9d0

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0xce106147, 0x0bc9dd22, 0xb5c4c15c, 0xc0d2f9d0
0xae2d8a57, 0x1e03ac9c, 0x9eb76fac, 0x45af8e51

OK. Result matches expected.

Test 2 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xb6ed21b9, 0x9ca6f4f9, 0xf153e7b1, 0xbeafed1d
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial, partial round.
AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0xb6ed21b9, 0x9ca6f4f9, 0xf153e7b1, 0xbeafed1d
0x48a5b168, 0x7abe79f2, 0xf53e14f5, 0xcec38e03

Inverse ShiftRows block in and block out:
0x48a5b168, 0x7abe79f2, 0xf53e14f5, 0xcec38e03
0x48c314f2, 0x7aa58ef5, 0xf5beb103, 0xce3e7968

Inside inv_substw:
b0 = 0x48, b1 = 0xc3, b2 = 0x14, b3 = 0xf2
s0 = 0xd4, s1 = 0x33, s2 = 0x9b, s3 = 0x04
res = 0xd4339b04
Inside inv_substw:
b0 = 0x7a, b1 = 0xa5, b2 = 0x8e, b3 = 0xf5
s0 = 0xbd, s1 = 0x29, s2 = 0xe6, s3 = 0x77
res = 0xbd29e677
Inside inv_substw:
b0 = 0xf5, b1 = 0xbe, b2 = 0xb1, b3 = 0x03
s0 = 0x77, s1 = 0x5a, s2 = 0x56, s3 = 0xd5
res = 0x775a56d5
Inside inv_substw:
b0 = 0xce, b1 = 0x3e, b2 = 0x79, b3 = 0x68
s0 = 0xec, s1 = 0xd1, s2 = 0xaf, s3 = 0xf7
res = 0xecd1aff7
Inverse SubBytes block in and block out:
0x48c314f2, 0x7aa58ef5, 0xf5beb103, 0xce3e7968
0xd4339b04, 0xbd29e677, 0x775a56d5, 0xecd1aff7


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xd4339b04, 0xbd29e677, 0x775a56d5, 0xecd1aff7
0x1ec931e7, 0x59fc7d43, 0xed853c1b, 0x51c1b6fa

Inverse MixColumns block in and block out:
0x1ec931e7, 0x59fc7d43, 0xed853c1b, 0x51c1b6fa
0x1e9333bf, 0xb700be92, 0x55a31aa3, 0xbda5f93d

Inverse ShiftRows block in and block out:
0x1e9333bf, 0xb700be92, 0x55a31aa3, 0xbda5f93d
0x1ea51a92, 0xb793f9a3, 0x5500333d, 0xbda3bebf

Inside inv_substw:
b0 = 0x1e, b1 = 0xa5, b2 = 0x1a, b3 = 0x92
s0 = 0xe9, s1 = 0x29, s2 = 0x43, s3 = 0x74
res = 0xe9294374
Inside inv_substw:
b0 = 0xb7, b1 = 0x93, b2 = 0xf9, b3 = 0xa3
s0 = 0x20, s1 = 0x22, s2 = 0x69, s3 = 0x71
res = 0x20226971
Inside inv_substw:
b0 = 0x55, b1 = 0x00, b2 = 0x33, b3 = 0x3d
s0 = 0xed, s1 = 0x52, s2 = 0x66, s3 = 0x8b
res = 0xed52668b
Inside inv_substw:
b0 = 0xbd, b1 = 0xa3, b2 = 0xbe, b3 = 0xbf
s0 = 0xcd, s1 = 0x71, s2 = 0x5a, s3 = 0xf4
res = 0xcd715af4
Inverse SubBytes block in and block out:
0x1ea51a92, 0xb793f9a3, 0x5500333d, 0xbda3bebf
0xe9294374, 0x20226971, 0xed52668b, 0xcd715af4


  Round 02
  ---------
AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xe9294374, 0x20226971, 0xed52668b, 0xcd715af4
0x9db504df, 0x387274ab, 0x0f2718c4, 0xb970caae

Inverse MixColumns block in and block out:
0x9db504df, 0x387274ab, 0x0f2718c4, 0xb970caae
0xb555d1c2, 0xd666ab8e, 0x16edf2fd, 0x55f86767

Inverse ShiftRows block in and block out:
0xb555d1c2, 0xd666ab8e, 0x16edf2fd, 0x55f86767
0xb5f8f28e, 0xd65567fd, 0x1666d167, 0x55edabc2

Inside inv_substw:
b0 = 0xb5, b1 = 0xf8, b2 = 0xf2, b3 = 0x8e
s0 = 0xd2, s1 = 0xe1, s2 = 0x04, s3 = 0xe6
res = 0xd2e104e6
Inside inv_substw:
b0 = 0xd6, b1 = 0x55, b2 = 0x67, b3 = 0xfd
s0 = 0x4a, s1 = 0xed, s2 = 0x0a, s3 = 0x21
res = 0x4aed0a21
Inside inv_substw:
b0 = 0x16, b1 = 0x66, b2 = 0xd1, b3 = 0x67
s0 = 0xff, s1 = 0xd3, s2 = 0x51, s3 = 0x0a
res = 0xffd3510a
Inside inv_substw:
b0 = 0x55, b1 = 0xed, b2 = 0xab, b3 = 0xc2
s0 = 0xed, s1 = 0x53, s2 = 0x0e, s3 = 0xa8
res = 0xed530ea8
Inverse SubBytes block in and block out:
0xb5f8f28e, 0xd65567fd, 0x1666d167, 0x55edabc2
0xd2e104e6, 0x4aed0a21, 0xffd3510a, 0xed530ea8


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0xd2e104e6, 0x4aed0a21, 0xffd3510a, 0xed530ea8
0x8a67cebb, 0x64c23bf6, 0x81d9a0f0, 0xca9c7d6b

Inverse MixColumns block in and block out:
0x8a67cebb, 0x64c23bf6, 0x81d9a0f0, 0xca9c7d6b
0x74471bb0, 0x4ae5c307, 0xfdc7ccfe, 0xfac2cdb5

Inverse ShiftRows block in and block out:
0x74471bb0, 0x4ae5c307, 0xfdc7ccfe, 0xfac2cdb5
0x74c2cc07, 0x4a47cdfe, 0xfde51bb5, 0xfac7c3b0

Inside inv_substw:
b0 = 0x74, b1 = 0xc2, b2 = 0xcc, b3 = 0x07
s0 = 0xca, s1 = 0xa8, s2 = 0x27, s3 = 0x38
res = 0xcaa82738
Inside inv_substw:
b0 = 0x4a, b1 = 0x47, b2 = 0xcd, b3 = 0xfe
s0 = 0x5c, s1 = 0x16, s2 = 0x80, s3 = 0x0c
res = 0x5c16800c
Inside inv_substw:
b0 = 0xfd, b1 = 0xe5, b2 = 0x1b, b3 = 0xb5
s0 = 0x21, s1 = 0x2a, s2 = 0x44, s3 = 0xd2
res = 0x212a44d2
Inside inv_substw:
b0 = 0xfa, b1 = 0xc7, b2 = 0xc3, b3 = 0xb0
s0 = 0x14, s1 = 0x31, s2 = 0x33, s3 = 0xfc
res = 0x143133fc
Inverse SubBytes block in and block out:
0x74c2cc07, 0x4a47cdfe, 0xfde51bb5, 0xfac7c3b0
0xcaa82738, 0x5c16800c, 0x212a44d2, 0x143133fc


  Round 04
  ---------
AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0xcaa82738, 0x5c16800c, 0x212a44d2, 0x143133fc
0x14bb4e5f, 0x30dada7d, 0xdb0f2747, 0x8245dde9

Inverse MixColumns block in and block out:
0x14bb4e5f, 0x30dada7d, 0xdb0f2747, 0x8245dde9
0x1bce264d, 0x6963195e, 0xd607593c, 0x5ac2f893

Inverse ShiftRows block in and block out:
0x1bce264d, 0x6963195e, 0xd607593c, 0x5ac2f893
0x1bc2595e, 0x69cef83c, 0xd6632693, 0x5a07194d

Inside inv_substw:
b0 = 0x1b, b1 = 0xc2, b2 = 0x59, b3 = 0x5e
s0 = 0x44, s1 = 0xa8, s2 = 0x15, s3 = 0x9d
res = 0x44a8159d
Inside inv_substw:
b0 = 0x69, b1 = 0xce, b2 = 0xf8, b3 = 0x3c
s0 = 0xe4, s1 = 0xec, s2 = 0xe1, s3 = 0x6d
res = 0xe4ece16d
Inside inv_substw:
b0 = 0xd6, b1 = 0x63, b2 = 0x26, b3 = 0x93
s0 = 0x4a, s1 = 0x00, s2 = 0x23, s3 = 0x22
res = 0x4a002322
Inside inv_substw:
b0 = 0x5a, b1 = 0x07, b2 = 0x19, b3 = 0x4d
s0 = 0x46, s1 = 0x38, s2 = 0x8e, s3 = 0x65
res = 0x46388e65
Inverse SubBytes block in and block out:
0x1bc2595e, 0x69cef83c, 0xd6632693, 0x5a07194d
0x44a8159d, 0xe4ece16d, 0x4a002322, 0x46388e65


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0x44a8159d, 0xe4ece16d, 0x4a002322, 0x46388e65
0x8cbcf799, 0x92451ae7, 0x1a25e30f, 0x1ffd0c5c

Inverse MixColumns block in and block out:
0x8cbcf799, 0x92451ae7, 0x1a25e30f, 0x1ffd0c5c
0x832644bf, 0x50248cd2, 0xbc0bf89c, 0xd9e3b53d

Inverse ShiftRows block in and block out:
0x832644bf, 0x50248cd2, 0xbc0bf89c, 0xd9e3b53d
0x83e3f8d2, 0x5026b59c, 0xbc24443d, 0xd90b8cbf

Inside inv_substw:
b0 = 0x83, b1 = 0xe3, b2 = 0xf8, b3 = 0xd2
s0 = 0x41, s1 = 0x4d, s2 = 0xe1, s3 = 0x7f
res = 0x414de17f
Inside inv_substw:
b0 = 0x50, b1 = 0x26, b2 = 0xb5, b3 = 0x9c
s0 = 0x6c, s1 = 0x23, s2 = 0xd2, s3 = 0x1c
res = 0x6c23d21c
Inside inv_substw:
b0 = 0xbc, b1 = 0x24, b2 = 0x44, b3 = 0x3d
s0 = 0x78, s1 = 0xa6, s2 = 0x86, s3 = 0x8b
res = 0x78a6868b
Inside inv_substw:
b0 = 0xd9, b1 = 0x0b, b2 = 0x8c, b3 = 0xbf
s0 = 0xe5, s1 = 0x9e, s2 = 0xf0, s3 = 0xf4
res = 0xe59ef0f4
Inverse SubBytes block in and block out:
0x83e3f8d2, 0x5026b59c, 0xbc24443d, 0xd90b8cbf
0x414de17f, 0x6c23d21c, 0x78a6868b, 0xe59ef0f4


  Round 06
  ---------
AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x414de17f, 0x6c23d21c, 0x78a6868b, 0xe59ef0f4
0x294d9ad3, 0xdefce10a, 0xee4fbf6f, 0x89cf7d74

Inverse MixColumns block in and block out:
0x294d9ad3, 0xdefce10a, 0xee4fbf6f, 0x89cf7d74
0x45e8ac2c, 0xbde80b97, 0x3ce08f22, 0xf96b934e

Inverse ShiftRows block in and block out:
0x45e8ac2c, 0xbde80b97, 0x3ce08f22, 0xf96b934e
0x456b8f97, 0xbde89322, 0x3ce8ac4e, 0xf9e00b2c

Inside inv_substw:
b0 = 0x45, b1 = 0x6b, b2 = 0x8f, b3 = 0x97
s0 = 0x68, s1 = 0x05, s2 = 0x73, s3 = 0x85
res = 0x68057385
Inside inv_substw:
b0 = 0xbd, b1 = 0xe8, b2 = 0x93, b3 = 0x22
s0 = 0xcd, s1 = 0xc8, s2 = 0x22, s3 = 0x94
res = 0xcdc82294
Inside inv_substw:
b0 = 0x3c, b1 = 0xe8, b2 = 0xac, b3 = 0x4e
s0 = 0x6d, s1 = 0xc8, s2 = 0xaa, s3 = 0xb6
res = 0x6dc8aab6
Inside inv_substw:
b0 = 0xf9, b1 = 0xe0, b2 = 0x0b, b3 = 0x2c
s0 = 0x69, s1 = 0xa0, s2 = 0x9e, s3 = 0x42
res = 0x69a09e42
Inverse SubBytes block in and block out:
0x456b8f97, 0xbde89322, 0x3ce8ac4e, 0xf9e00b2c
0x68057385, 0xcdc82294, 0x6dc8aab6, 0x69a09e42


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68057385, 0xcdc82294, 0x6dc8aab6, 0x69a09e42
0xf0c0cc4c, 0x73753b1a, 0x4b449111, 0x6040dc56

Inverse MixColumns block in and block out:
0xf0c0cc4c, 0x73753b1a, 0x4b449111, 0x6040dc56
0x2799606e, 0x404a466b, 0x8b215471, 0x6bb698ef

Inverse ShiftRows block in and block out:
0x2799606e, 0x404a466b, 0x8b215471, 0x6bb698ef
0x27b6546b, 0x40999871, 0x8b4a60ef, 0x6b21466e

Inside inv_substw:
b0 = 0x27, b1 = 0xb6, b2 = 0x54, b3 = 0x6b
s0 = 0x3d, s1 = 0x79, s2 = 0xfd, s3 = 0x05
res = 0x3d79fd05
Inside inv_substw:
b0 = 0x40, b1 = 0x99, b2 = 0x98, b3 = 0x71
s0 = 0x72, s1 = 0xf9, s2 = 0xe2, s3 = 0x2c
res = 0x72f9e22c
Inside inv_substw:
b0 = 0x8b, b1 = 0x4a, b2 = 0x60, b3 = 0xef
s0 = 0xce, s1 = 0x5c, s2 = 0x90, s3 = 0x61
res = 0xce5c9061
Inside inv_substw:
b0 = 0x6b, b1 = 0x21, b2 = 0x46, b3 = 0x6e
s0 = 0x05, s1 = 0x7b, s2 = 0x98, s3 = 0x45
res = 0x057b9845
Inverse SubBytes block in and block out:
0x27b6546b, 0x40999871, 0x8b4a60ef, 0x6b21466e
0x3d79fd05, 0x72f9e22c, 0xce5c9061, 0x057b9845


  Round 08
  ---------
AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x3d79fd05, 0x72f9e22c, 0xce5c9061, 0x057b9845
0xbc557ca8, 0xa826aa96, 0xea6a9a93, 0xffc32c21

Inverse MixColumns block in and block out:
0xbc557ca8, 0xa826aa96, 0xea6a9a93, 0xffc32c21
0x96102c97, 0xf2868f49, 0x87f5fe05, 0x4401f581

Inverse ShiftRows block in and block out:
0x96102c97, 0xf2868f49, 0x87f5fe05, 0x4401f581
0x9601fe49, 0xf210f505, 0x87862c81, 0x44f58f97

Inside inv_substw:
b0 = 0x96, b1 = 0x01, b2 = 0xfe, b3 = 0x49
s0 = 0x35, s1 = 0x09, s2 = 0x0c, s3 = 0xa4
res = 0x35090ca4
Inside inv_substw:
b0 = 0xf2, b1 = 0x10, b2 = 0xf5, b3 = 0x05
s0 = 0x04, s1 = 0x7c, s2 = 0x77, s3 = 0x36
res = 0x047c7736
Inside inv_substw:
b0 = 0x87, b1 = 0x86, b2 = 0x2c, b3 = 0x81
s0 = 0xea, s1 = 0xdc, s2 = 0x42, s3 = 0x91
res = 0xeadc4291
Inside inv_substw:
b0 = 0x44, b1 = 0xf5, b2 = 0x8f, b3 = 0x97
s0 = 0x86, s1 = 0x77, s2 = 0x73, s3 = 0x85
res = 0x86777385
Inverse SubBytes block in and block out:
0x9601fe49, 0xf210f505, 0x87862c81, 0x44f58f97
0x35090ca4, 0x047c7736, 0xeadc4291, 0x86777385


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x35090ca4, 0x047c7736, 0xeadc4291, 0x86777385
0x80a03e2e, 0x2204d171, 0x72ed60b8, 0xa91b0a36

Inverse MixColumns block in and block out:
0x80a03e2e, 0x2204d171, 0x72ed60b8, 0xa91b0a36
0xa5227bcc, 0x55a0b1c2, 0x56eaca31, 0xfe1f5a35

Inverse ShiftRows block in and block out:
0xa5227bcc, 0x55a0b1c2, 0x56eaca31, 0xfe1f5a35
0xa51fcac2, 0x55225a31, 0x56a07b35, 0xfeeab1cc

Inside inv_substw:
b0 = 0xa5, b1 = 0x1f, b2 = 0xca, b3 = 0xc2
s0 = 0x29, s1 = 0xcb, s2 = 0x10, s3 = 0xa8
res = 0x29cb10a8
Inside inv_substw:
b0 = 0x55, b1 = 0x22, b2 = 0x5a, b3 = 0x31
s0 = 0xed, s1 = 0x94, s2 = 0x46, s3 = 0x2e
res = 0xed94462e
Inside inv_substw:
b0 = 0x56, b1 = 0xa0, b2 = 0x7b, b3 = 0x35
s0 = 0xb9, s1 = 0x47, s2 = 0x03, s3 = 0xd9
res = 0xb94703d9
Inside inv_substw:
b0 = 0xfe, b1 = 0xea, b2 = 0xb1, b3 = 0xcc
s0 = 0x0c, s1 = 0xbb, s2 = 0x56, s3 = 0x27
res = 0x0cbb5627
Inverse SubBytes block in and block out:
0xa51fcac2, 0x55225a31, 0x56a07b35, 0xfeeab1cc
0x29cb10a8, 0xed94462e, 0xb94703d9, 0x0cbb5627


  Round 10
  ---------
AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0x29cb10a8, 0xed94462e, 0xb94703d9, 0x0cbb5627
0xfc51fc10, 0xb6678f39, 0x47ae4191, 0xd235e8b1

Inverse MixColumns block in and block out:
0xfc51fc10, 0xb6678f39, 0x47ae4191, 0xd235e8b1
0xc27040b3, 0x99bd6e2d, 0x7c7d0830, 0xd68b8b68

Inverse ShiftRows block in and block out:
0xc27040b3, 0x99bd6e2d, 0x7c7d0830, 0xd68b8b68
0xc28b082d, 0x99708b30, 0x7cbd4068, 0xd67d6eb3

Inside inv_substw:
b0 = 0xc2, b1 = 0x8b, b2 = 0x08, b3 = 0x2d
s0 = 0xa8, s1 = 0xce, s2 = 0xbf, s3 = 0xfa
res = 0xa8cebffa
Inside inv_substw:
b0 = 0x99, b1 = 0x70, b2 = 0x8b, b3 = 0x30
s0 = 0xf9, s1 = 0xd0, s2 = 0xce, s3 = 0x08
res = 0xf9d0ce08
Inside inv_substw:
b0 = 0x7c, b1 = 0xbd, b2 = 0x40, b3 = 0x68
s0 = 0x01, s1 = 0xcd, s2 = 0x72, s3 = 0xf7
res = 0x01cd72f7
Inside inv_substw:
b0 = 0xd6, b1 = 0x7d, b2 = 0x6e, b3 = 0xb3
s0 = 0x4a, s1 = 0x13, s2 = 0x45, s3 = 0x4b
res = 0x4a13454b
Inverse SubBytes block in and block out:
0xc28b082d, 0x99708b30, 0x7cbd4068, 0xd67d6eb3
0xa8cebffa, 0xf9d0ce08, 0x01cd72f7, 0x4a13454b


  Round 11
  ---------
AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xa8cebffa, 0xf9d0ce08, 0x01cd72f7, 0x4a13454b
0x007e23e0, 0x6a015ac5, 0xbf84f699, 0xfd4e1ed1

Inverse MixColumns block in and block out:
0x007e23e0, 0x6a015ac5, 0xbf84f699, 0xfd4e1ed1
0x52a81057, 0x699faaa8, 0x34d6d563, 0x90158b72

Inverse ShiftRows block in and block out:
0x52a81057, 0x699faaa8, 0x34d6d563, 0x90158b72
0x5215d5a8, 0x69a88b63, 0x349f1072, 0x90d6aa57

Inside inv_substw:
b0 = 0x52, b1 = 0x15, b2 = 0xd5, b3 = 0xa8
s0 = 0x48, s1 = 0x2f, s2 = 0xb5, s3 = 0x6f
res = 0x482fb56f
Inside inv_substw:
b0 = 0x69, b1 = 0xa8, b2 = 0x8b, b3 = 0x63
s0 = 0xe4, s1 = 0x6f, s2 = 0xce, s3 = 0x00
res = 0xe46fce00
Inside inv_substw:
b0 = 0x34, b1 = 0x9f, b2 = 0x10, b3 = 0x72
s0 = 0x28, s1 = 0x6e, s2 = 0x7c, s3 = 0x1e
res = 0x286e7c1e
Inside inv_substw:
b0 = 0x90, b1 = 0xd6, b2 = 0xaa, b3 = 0x57
s0 = 0x96, s1 = 0x4a, s2 = 0x62, s3 = 0xda
res = 0x964a62da
Inverse SubBytes block in and block out:
0x5215d5a8, 0x69a88b63, 0x349f1072, 0x90d6aa57
0x482fb56f, 0xe46fce00, 0x286e7c1e, 0x964a62da


  Round 12
  ---------
AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0x482fb56f, 0xe46fce00, 0x286e7c1e, 0x964a62da
0xd38ce17e, 0x6a06ebaf, 0x8d74f741, 0xb62d9e04

Inverse MixColumns block in and block out:
0xd38ce17e, 0x6a06ebaf, 0x8d74f741, 0xb62d9e04
0x3f299640, 0xf32622df, 0x96bc7217, 0x32fd18d6

Inverse ShiftRows block in and block out:
0x3f299640, 0xf32622df, 0x96bc7217, 0x32fd18d6
0x3ffd72df, 0xf3291817, 0x962696d6, 0x32bc2240

Inside inv_substw:
b0 = 0x3f, b1 = 0xfd, b2 = 0x72, b3 = 0xdf
s0 = 0x25, s1 = 0x21, s2 = 0x1e, s3 = 0xef
res = 0x25211eef
Inside inv_substw:
b0 = 0xf3, b1 = 0x29, b2 = 0x18, b3 = 0x17
s0 = 0x7e, s1 = 0x4c, s2 = 0x34, s3 = 0x87
res = 0x7e4c3487
Inside inv_substw:
b0 = 0x96, b1 = 0x26, b2 = 0x96, b3 = 0xd6
s0 = 0x35, s1 = 0x23, s2 = 0x35, s3 = 0x4a
res = 0x3523354a
Inside inv_substw:
b0 = 0x32, b1 = 0xbc, b2 = 0x22, b3 = 0x40
s0 = 0xa1, s1 = 0x78, s2 = 0x94, s3 = 0x72
res = 0xa1789472
Inverse SubBytes block in and block out:
0x3ffd72df, 0xf3291817, 0x962696d6, 0x32bc2240
0x25211eef, 0x7e4c3487, 0x3523354a, 0xa1789472


  Round 13
  ---------
AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x25211eef, 0x7e4c3487, 0x3523354a, 0xa1789472
0x3a1432e8, 0x452d3c50, 0x18bb25e9, 0xa86c4b86

Inverse MixColumns block in and block out:
0x3a1432e8, 0x452d3c50, 0x18bb25e9, 0xa86c4b86
0x5390a89f, 0x4ec43fb1, 0x8bf56879, 0xdbe62a1e

Inverse ShiftRows block in and block out:
0x5390a89f, 0x4ec43fb1, 0x8bf56879, 0xdbe62a1e
0x53e668b1, 0x4e902a79, 0x8bc4a81e, 0xdbf53f9f

Inside inv_substw:
b0 = 0x53, b1 = 0xe6, b2 = 0x68, b3 = 0xb1
s0 = 0x50, s1 = 0xf5, s2 = 0xf7, s3 = 0x56
res = 0x50f5f756
Inside inv_substw:
b0 = 0x4e, b1 = 0x90, b2 = 0x2a, b3 = 0x79
s0 = 0xb6, s1 = 0x96, s2 = 0x95, s3 = 0xaf
res = 0xb69695af
Inside inv_substw:
b0 = 0x8b, b1 = 0xc4, b2 = 0xa8, b3 = 0x1e
s0 = 0xce, s1 = 0x88, s2 = 0x6f, s3 = 0xe9
res = 0xce886fe9
Inside inv_substw:
b0 = 0xdb, b1 = 0xf5, b2 = 0x3f, b3 = 0x9f
s0 = 0x9f, s1 = 0x77, s2 = 0x25, s3 = 0x6e
res = 0x9f77256e
Inverse SubBytes block in and block out:
0x53e668b1, 0x4e902a79, 0x8bc4a81e, 0xdbf53f9f
0x50f5f756, 0xb69695af, 0xce886fe9, 0x9f77256e

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x50f5f756, 0xb69695af, 0xce886fe9, 0x9f77256e
0x30c81c46, 0xa35ce411, 0xe5fbc119, 0x1a0a52ef

OK. Result matches expected.

Test 3 for AES-256.
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x23304b7a, 0x39f9f3ff, 0x067d8d8f, 0x9e24ecc7
Inside substw:
b0 = 0x14, b1 = 0xdf, b2 = 0xf4, b3 = 0x09
s0 = 0xfa, s1 = 0x9e, s2 = 0xbf, s3 = 0x01
res = 0xfa9ebf01
next_256bit_key_a:
w0 = 0x603deb10, w0 = 0x15ca71be, w0 = 0x2b73aef0, w0 = 0x857d7781
w4 = 0x1f352c07, w5 = 0x3b6108d7, w6 = 0x2d9810a3, w7 = 0x0914dff4
t = 0xfb9ebf01, sw = 0xfa9ebf01, rw = 0x01000000
k0 = 0x9ba35411, k0 = 0x8e6925af, k0 = 0xa51a8b5f, k0 = 0x2067fcde

Inside substw:
b0 = 0x20, b1 = 0x67, b2 = 0xfc, b3 = 0xde
s0 = 0xb7, s1 = 0x85, s2 = 0xb0, s3 = 0x1d
res = 0xb785b01d
next_256bit_key_b:
w0 = 0x1f352c07, w0 = 0x3b6108d7, w0 = 0x2d9810a3, w0 = 0x0914dff4
w4 = 0x9ba35411, w5 = 0x8e6925af, w6 = 0xa51a8b5f, w7 = 0x2067fcde
t = 0xb785b01d
k0 = 0xa8b09c1a, k0 = 0x93d194cd, k0 = 0xbe49846e, k0 = 0xb75d5b9a

Inside substw:
b0 = 0x5d, b1 = 0x5b, b2 = 0x9a, b3 = 0xb7
s0 = 0x4c, s1 = 0x39, s2 = 0xb8, s3 = 0xa9
res = 0x4c39b8a9
next_256bit_key_a:
w0 = 0x9ba35411, w0 = 0x8e6925af, w0 = 0xa51a8b5f, w0 = 0x2067fcde
w4 = 0xa8b09c1a, w5 = 0x93d194cd, w6 = 0xbe49846e, w7 = 0xb75d5b9a
t = 0x4e39b8a9, sw = 0x4c39b8a9, rw = 0x02000000
k0 = 0xd59aecb8, k0 = 0x5bf3c917, k0 = 0xfee94248, k0 = 0xde8ebe96

Inside substw:
b0 = 0xde, b1 = 0x8e, b2 = 0xbe, b3 = 0x96
s0 = 0x1d, s1 = 0x19, s2 = 0xae, s3 = 0x90
res = 0x1d19ae90
next_256bit_key_b:
w0 = 0xa8b09c1a, w0 = 0x93d194cd, w0 = 0xbe49846e, w0 = 0xb75d5b9a
w4 = 0xd59aecb8, w5 = 0x5bf3c917, w6 = 0xfee94248, w7 = 0xde8ebe96
t = 0x1d19ae90
k0 = 0xb5a9328a, k0 = 0x2678a647, k0 = 0x98312229, k0 = 0x2f6c79b3

Inside substw:
b0 = 0x6c, b1 = 0x79, b2 = 0xb3, b3 = 0x2f
s0 = 0x50, s1 = 0xb6, s2 = 0x6d, s3 = 0x15
res = 0x50b66d15
next_256bit_key_a:
w0 = 0xd59aecb8, w0 = 0x5bf3c917, w0 = 0xfee94248, w0 = 0xde8ebe96
w4 = 0xb5a9328a, w5 = 0x2678a647, w6 = 0x98312229, w7 = 0x2f6c79b3
t = 0x54b66d15, sw = 0x50b66d15, rw = 0x04000000
k0 = 0x812c81ad, k0 = 0xdadf48ba, k0 = 0x24360af2, k0 = 0xfab8b464

Inside substw:
b0 = 0xfa, b1 = 0xb8, b2 = 0xb4, b3 = 0x64
s0 = 0x2d, s1 = 0x6c, s2 = 0x8d, s3 = 0x43
res = 0x2d6c8d43
next_256bit_key_b:
w0 = 0xb5a9328a, w0 = 0x2678a647, w0 = 0x98312229, w0 = 0x2f6c79b3
w4 = 0x812c81ad, w5 = 0xdadf48ba, w6 = 0x24360af2, w7 = 0xfab8b464
t = 0x2d6c8d43
k0 = 0x98c5bfc9, k0 = 0xbebd198e, k0 = 0x268c3ba7, k0 = 0x09e04214

Inside substw:
b0 = 0xe0, b1 = 0x42, b2 = 0x14, b3 = 0x09
s0 = 0xe1, s1 = 0x2c, s2 = 0xfa, s3 = 0x01
res = 0xe12cfa01
next_256bit_key_a:
w0 = 0x812c81ad, w0 = 0xdadf48ba, w0 = 0x24360af2, w0 = 0xfab8b464
w4 = 0x98c5bfc9, w5 = 0xbebd198e, w6 = 0x268c3ba7, w7 = 0x09e04214
t = 0xe92cfa01, sw = 0xe12cfa01, rw = 0x08000000
k0 = 0x68007bac, k0 = 0xb2df3316, k0 = 0x96e939e4, k0 = 0x6c518d80

Inside substw:
b0 = 0x6c, b1 = 0x51, b2 = 0x8d, b3 = 0x80
s0 = 0x50, s1 = 0xd1, s2 = 0x5d, s3 = 0xcd
res = 0x50d15dcd
next_256bit_key_b:
w0 = 0x98c5bfc9, w0 = 0xbebd198e, w0 = 0x268c3ba7, w0 = 0x09e04214
w4 = 0x68007bac, w5 = 0xb2df3316, w6 = 0x96e939e4, w7 = 0x6c518d80
t = 0x50d15dcd
k0 = 0xc814e204, k0 = 0x76a9fb8a, k0 = 0x5025c02d, k0 = 0x59c58239

Inside substw:
b0 = 0xc5, b1 = 0x82, b2 = 0x39, b3 = 0x59
s0 = 0xa6, s1 = 0x13, s2 = 0x12, s3 = 0xcb
res = 0xa61312cb
next_256bit_key_a:
w0 = 0x68007bac, w0 = 0xb2df3316, w0 = 0x96e939e4, w0 = 0x6c518d80
w4 = 0xc814e204, w5 = 0x76a9fb8a, w6 = 0x5025c02d, w7 = 0x59c58239
t = 0xb61312cb, sw = 0xa61312cb, rw = 0x10000000
k0 = 0xde136967, k0 = 0x6ccc5a71, k0 = 0xfa256395, k0 = 0x9674ee15

Inside substw:
b0 = 0x96, b1 = 0x74, b2 = 0xee, b3 = 0x15
s0 = 0x90, s1 = 0x92, s2 = 0x28, s3 = 0x59
res = 0x90922859
next_256bit_key_b:
w0 = 0xc814e204, w0 = 0x76a9fb8a, w0 = 0x5025c02d, w0 = 0x59c58239
w4 = 0xde136967, w5 = 0x6ccc5a71, w6 = 0xfa256395, w7 = 0x9674ee15
t = 0x90922859
k0 = 0x5886ca5d, k0 = 0x2e2f31d7, k0 = 0x7e0af1fa, k0 = 0x27cf73c3

Inside substw:
b0 = 0xcf, b1 = 0x73, b2 = 0xc3, b3 = 0x27
s0 = 0x8a, s1 = 0x8f, s2 = 0x2e, s3 = 0xcc
res = 0x8a8f2ecc
next_256bit_key_a:
w0 = 0xde136967, w0 = 0x6ccc5a71, w0 = 0xfa256395, w0 = 0x9674ee15
w4 = 0x5886ca5d, w5 = 0x2e2f31d7, w6 = 0x7e0af1fa, w7 = 0x27cf73c3
t = 0xaa8f2ecc, sw = 0x8a8f2ecc, rw = 0x20000000
k0 = 0x749c47ab, k0 = 0x18501dda, k0 = 0xe2757e4f, k0 = 0x7401905a

Inside substw:
b0 = 0x74, b1 = 0x01, b2 = 0x90, b3 = 0x5a
s0 = 0x92, s1 = 0x7c, s2 = 0x60, s3 = 0xbe
res = 0x927c60be
next_256bit_key_b:
w0 = 0x5886ca5d, w0 = 0x2e2f31d7, w0 = 0x7e0af1fa, w0 = 0x27cf73c3
w4 = 0x749c47ab, w5 = 0x18501dda, w6 = 0xe2757e4f, w7 = 0x7401905a
t = 0x927c60be
k0 = 0xcafaaae3, k0 = 0xe4d59b34, k0 = 0x9adf6ace, k0 = 0xbd10190d

Inside substw:
b0 = 0x10, b1 = 0x19, b2 = 0x0d, b3 = 0xbd
s0 = 0xca, s1 = 0xd4, s2 = 0xd7, s3 = 0x7a
res = 0xcad4d77a
next_256bit_key_a:
w0 = 0x749c47ab, w0 = 0x18501dda, w0 = 0xe2757e4f, w0 = 0x7401905a
w4 = 0xcafaaae3, w5 = 0xe4d59b34, w6 = 0x9adf6ace, w7 = 0xbd10190d
t = 0x8ad4d77a, sw = 0xcad4d77a, rw = 0x40000000
k0 = 0xfe4890d1, k0 = 0xe6188d0b, k0 = 0x046df344, k0 = 0x706c631e

Input key:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4

Generated keys:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e

  Initial, partial round.
AddRoundKey key, block in and block out:
0xfe4890d1, 0xe6188d0b, 0x046df344, 0x706c631e
0x23304b7a, 0x39f9f3ff, 0x067d8d8f, 0x9e24ecc7
0xdd78dbab, 0xdfe17ef4, 0x02107ecb, 0xee488fd9

Inverse ShiftRows block in and block out:
0xdd78dbab, 0xdfe17ef4, 0x02107ecb, 0xee488fd9
0xdd487ef4, 0xdf788fcb, 0x02e1dbd9, 0xee107eab

Inside inv_substw:
b0 = 0xdd, b1 = 0x48, b2 = 0x7e, b3 = 0xf4
s0 = 0xc9, s1 = 0xd4, s2 = 0x8a, s3 = 0xba
res = 0xc9d48aba
Inside inv_substw:
b0 = 0xdf, b1 = 0x78, b2 = 0x8f, b3 = 0xcb
s0 = 0xef, s1 = 0xc1, s2 = 0x73, s3 = 0x59
res = 0xefc17359
Inside inv_substw:
b0 = 0x02, b1 = 0xe1, b2 = 0xdb, b3 = 0xd9
s0 = 0x6a, s1 = 0xe0, s2 = 0x9f, s3 = 0xe5
res = 0x6ae09fe5
Inside inv_substw:
b0 = 0xee, b1 = 0x10, b2 = 0x7e, b3 = 0xab
s0 = 0x99, s1 = 0x7c, s2 = 0x8a, s3 = 0x0e
res = 0x997c8a0e
Inverse SubBytes block in and block out:
0xdd487ef4, 0xdf788fcb, 0x02e1dbd9, 0xee107eab
0xc9d48aba, 0xefc17359, 0x6ae09fe5, 0x997c8a0e


  Round 01
  ---------
AddRoundKey key, block in and block out:
0xcafaaae3, 0xe4d59b34, 0x9adf6ace, 0xbd10190d
0xc9d48aba, 0xefc17359, 0x6ae09fe5, 0x997c8a0e
0x032e2059, 0x0b14e86d, 0xf03ff52b, 0x246c9303

Inverse MixColumns block in and block out:
0x032e2059, 0x0b14e86d, 0xf03ff52b, 0x246c9303
0x17379ce8, 0xb22e7e78, 0xf879df4f, 0x1c6c00a8

Inverse ShiftRows block in and block out:
0x17379ce8, 0xb22e7e78, 0xf879df4f, 0x1c6c00a8
0x176cdf78, 0xb237004f, 0xf82e9ca8, 0x1c797ee8

Inside inv_substw:
b0 = 0x17, b1 = 0x6c, b2 = 0xdf, b3 = 0x78
s0 = 0x87, s1 = 0xb8, s2 = 0xef, s3 = 0xc1
res = 0x87b8efc1
Inside inv_substw:
b0 = 0xb2, b1 = 0x37, b2 = 0x00, b3 = 0x4f
s0 = 0x3e, s1 = 0xb2, s2 = 0x52, s3 = 0x92
res = 0x3eb25292
Inside inv_substw:
b0 = 0xf8, b1 = 0x2e, b2 = 0x9c, b3 = 0xa8
s0 = 0xe1, s1 = 0xc3, s2 = 0x1c, s3 = 0x6f
res = 0xe1c31c6f
Inside inv_substw:
b0 = 0x1c, b1 = 0x79, b2 = 0x7e, b3 = 0xe8
s0 = 0xc4, s1 = 0xaf, s2 = 0x8a, s3 = 0xc8
res = 0xc4af8ac8
Inverse SubBytes block in and block out:
0x176cdf78, 0xb237004f, 0xf82e9ca8, 0x1c797ee8
0x87b8efc1, 0x3eb25292, 0xe1c31c6f, 0xc4af8ac8


  Round 02
  ---------
AddRoundKey key, block in and block out:
0x749c47ab, 0x18501dda, 0xe2757e4f, 0x7401905a
0x87b8efc1, 0x3eb25292, 0xe1c31c6f, 0xc4af8ac8
0xf324a86a, 0x26e24f48, 0x03b66220, 0xb0ae1a92

Inverse MixColumns block in and block out:
0xf324a86a, 0x26e24f48, 0x03b66220, 0xb0ae1a92
0x8cb9fddd, 0x8bbc7f8b, 0xe3657706, 0x5867c56c

Inverse ShiftRows block in and block out:
0x8cb9fddd, 0x8bbc7f8b, 0xe3657706, 0x5867c56c
0x8c67778b, 0x8bb9c506, 0xe3bcfd6c, 0x58657fdd

Inside inv_substw:
b0 = 0x8c, b1 = 0x67, b2 = 0x77, b3 = 0x8b
s0 = 0xf0, s1 = 0x0a, s2 = 0x02, s3 = 0xce
res = 0xf00a02ce
Inside inv_substw:
b0 = 0x8b, b1 = 0xb9, b2 = 0xc5, b3 = 0x06
s0 = 0xce, s1 = 0xdb, s2 = 0x07, s3 = 0xa5
res = 0xcedb07a5
Inside inv_substw:
b0 = 0xe3, b1 = 0xbc, b2 = 0xfd, b3 = 0x6c
s0 = 0x4d, s1 = 0x78, s2 = 0x21, s3 = 0xb8
res = 0x4d7821b8
Inside inv_substw:
b0 = 0x58, b1 = 0x65, b2 = 0x7f, b3 = 0xdd
s0 = 0x5e, s1 = 0xbc, s2 = 0x6b, s3 = 0xc9
res = 0x5ebc6bc9
Inverse SubBytes block in and block out:
0x8c67778b, 0x8bb9c506, 0xe3bcfd6c, 0x58657fdd
0xf00a02ce, 0xcedb07a5, 0x4d7821b8, 0x5ebc6bc9


  Round 03
  ---------
AddRoundKey key, block in and block out:
0x5886ca5d, 0x2e2f31d7, 0x7e0af1fa, 0x27cf73c3
0xf00a02ce, 0xcedb07a5, 0x4d7821b8, 0x5ebc6bc9
0xa88cc893, 0xe0f43672, 0x3372d042, 0x7973180a

Inverse MixColumns block in and block out:
0xa88cc893, 0xe0f43672, 0x3372d042, 0x7973180a
0xd1d24f33, 0x5ba32d85, 0x01fc5f71, 0x2a827bcb

Inverse ShiftRows block in and block out:
0xd1d24f33, 0x5ba32d85, 0x01fc5f71, 0x2a827bcb
0xd1825f85, 0x5bd27b71, 0x01a34fcb, 0x2afc2d33

Inside inv_substw:
b0 = 0xd1, b1 = 0x82, b2 = 0x5f, b3 = 0x85
s0 = 0x51, s1 = 0x11, s2 = 0x84, s3 = 0x67
res = 0x51118467
Inside inv_substw:
b0 = 0x5b, b1 = 0xd2, b2 = 0x7b, b3 = 0x71
s0 = 0x57, s1 = 0x7f, s2 = 0x03, s3 = 0x2c
res = 0x577f032c
Inside inv_substw:
b0 = 0x01, b1 = 0xa3, b2 = 0x4f, b3 = 0xcb
s0 = 0x09, s1 = 0x71, s2 = 0x92, s3 = 0x59
res = 0x09719259
Inside inv_substw:
b0 = 0x2a, b1 = 0xfc, b2 = 0x2d, b3 = 0x33
s0 = 0x95, s1 = 0x55, s2 = 0xfa, s3 = 0x66
res = 0x9555fa66
Inverse SubBytes block in and block out:
0xd1825f85, 0x5bd27b71, 0x01a34fcb, 0x2afc2d33
0x51118467, 0x577f032c, 0x09719259, 0x9555fa66


  Round 04
  ---------
AddRoundKey key, block in and block out:
0xde136967, 0x6ccc5a71, 0xfa256395, 0x9674ee15
0x51118467, 0x577f032c, 0x09719259, 0x9555fa66
0x8f02ed00, 0x3bb3595d, 0xf354f1cc, 0x03211473

Inverse MixColumns block in and block out:
0x8f02ed00, 0x3bb3595d, 0xf354f1cc, 0x03211473
0x5082f240, 0x23694284, 0x8875a5c2, 0x4043dd9b

Inverse ShiftRows block in and block out:
0x5082f240, 0x23694284, 0x8875a5c2, 0x4043dd9b
0x5043a584, 0x2382ddc2, 0x8869f29b, 0x40754240

Inside inv_substw:
b0 = 0x50, b1 = 0x43, b2 = 0xa5, b3 = 0x84
s0 = 0x6c, s1 = 0x64, s2 = 0x29, s3 = 0x4f
res = 0x6c64294f
Inside inv_substw:
b0 = 0x23, b1 = 0x82, b2 = 0xdd, b3 = 0xc2
s0 = 0x32, s1 = 0x11, s2 = 0xc9, s3 = 0xa8
res = 0x3211c9a8
Inside inv_substw:
b0 = 0x88, b1 = 0x69, b2 = 0xf2, b3 = 0x9b
s0 = 0x97, s1 = 0xe4, s2 = 0x04, s3 = 0xe8
res = 0x97e404e8
Inside inv_substw:
b0 = 0x40, b1 = 0x75, b2 = 0x42, b3 = 0x40
s0 = 0x72, s1 = 0x3f, s2 = 0xf6, s3 = 0x72
res = 0x723ff672
Inverse SubBytes block in and block out:
0x5043a584, 0x2382ddc2, 0x8869f29b, 0x40754240
0x6c64294f, 0x3211c9a8, 0x97e404e8, 0x723ff672


  Round 05
  ---------
AddRoundKey key, block in and block out:
0xc814e204, 0x76a9fb8a, 0x5025c02d, 0x59c58239
0x6c64294f, 0x3211c9a8, 0x97e404e8, 0x723ff672
0xa470cb4b, 0x44b83222, 0xc7c1c4c5, 0x2bfa744b

Inverse MixColumns block in and block out:
0xa470cb4b, 0x44b83222, 0xc7c1c4c5, 0x2bfa744b
0x7233b5a0, 0xa9241c7d, 0xf8e4f5ee, 0x2ad0b2a6

Inverse ShiftRows block in and block out:
0x7233b5a0, 0xa9241c7d, 0xf8e4f5ee, 0x2ad0b2a6
0x72d0f57d, 0xa933b2ee, 0xf824b5a6, 0x2ae41ca0

Inside inv_substw:
b0 = 0x72, b1 = 0xd0, b2 = 0xf5, b3 = 0x7d
s0 = 0x1e, s1 = 0x60, s2 = 0x77, s3 = 0x13
res = 0x1e607713
Inside inv_substw:
b0 = 0xa9, b1 = 0x33, b2 = 0xb2, b3 = 0xee
s0 = 0xb7, s1 = 0x66, s2 = 0x3e, s3 = 0x99
res = 0xb7663e99
Inside inv_substw:
b0 = 0xf8, b1 = 0x24, b2 = 0xb5, b3 = 0xa6
s0 = 0xe1, s1 = 0xa6, s2 = 0xd2, s3 = 0xc5
res = 0xe1a6d2c5
Inside inv_substw:
b0 = 0x2a, b1 = 0xe4, b2 = 0x1c, b3 = 0xa0
s0 = 0x95, s1 = 0xae, s2 = 0xc4, s3 = 0x47
res = 0x95aec447
Inverse SubBytes block in and block out:
0x72d0f57d, 0xa933b2ee, 0xf824b5a6, 0x2ae41ca0
0x1e607713, 0xb7663e99, 0xe1a6d2c5, 0x95aec447


  Round 06
  ---------
AddRoundKey key, block in and block out:
0x68007bac, 0xb2df3316, 0x96e939e4, 0x6c518d80
0x1e607713, 0xb7663e99, 0xe1a6d2c5, 0x95aec447
0x76600cbf, 0x05b90d8f, 0x774feb21, 0xf9ff49c7

Inverse MixColumns block in and block out:
0x76600cbf, 0x05b90d8f, 0x774feb21, 0xf9ff49c7
0x5313789d, 0x93c7e78d, 0x629c010d, 0xa7cc1cff

Inverse ShiftRows block in and block out:
0x5313789d, 0x93c7e78d, 0x629c010d, 0xa7cc1cff
0x53cc018d, 0x93131c0d, 0x62c778ff, 0xa79ce79d

Inside inv_substw:
b0 = 0x53, b1 = 0xcc, b2 = 0x01, b3 = 0x8d
s0 = 0x50, s1 = 0x27, s2 = 0x09, s3 = 0xb4
res = 0x502709b4
Inside inv_substw:
b0 = 0x93, b1 = 0x13, b2 = 0x1c, b3 = 0x0d
s0 = 0x22, s1 = 0x82, s2 = 0xc4, s3 = 0xf3
res = 0x2282c4f3
Inside inv_substw:
b0 = 0x62, b1 = 0xc7, b2 = 0x78, b3 = 0xff
s0 = 0xab, s1 = 0x31, s2 = 0xc1, s3 = 0x7d
res = 0xab31c17d
Inside inv_substw:
b0 = 0xa7, b1 = 0x9c, b2 = 0xe7, b3 = 0x9d
s0 = 0x89, s1 = 0x1c, s2 = 0xb0, s3 = 0x75
res = 0x891cb075
Inverse SubBytes block in and block out:
0x53cc018d, 0x93131c0d, 0x62c778ff, 0xa79ce79d
0x502709b4, 0x2282c4f3, 0xab31c17d, 0x891cb075


  Round 07
  ---------
AddRoundKey key, block in and block out:
0x98c5bfc9, 0xbebd198e, 0x268c3ba7, 0x09e04214
0x502709b4, 0x2282c4f3, 0xab31c17d, 0x891cb075
0xc8e2b67d, 0x9c3fdd7d, 0x8dbdfada, 0x80fcf261

Inverse MixColumns block in and block out:
0xc8e2b67d, 0x9c3fdd7d, 0x8dbdfada, 0x80fcf261
0xd7a870ee, 0xc5e882ac, 0xba24ed63, 0x7d74ca2c

Inverse ShiftRows block in and block out:
0xd7a870ee, 0xc5e882ac, 0xba24ed63, 0x7d74ca2c
0xd774edac, 0xc5a8ca63, 0xbae8702c, 0x7d2482ee

Inside inv_substw:
b0 = 0xd7, b1 = 0x74, b2 = 0xed, b3 = 0xac
s0 = 0x0d, s1 = 0xca, s2 = 0x53, s3 = 0xaa
res = 0x0dca53aa
Inside inv_substw:
b0 = 0xc5, b1 = 0xa8, b2 = 0xca, b3 = 0x63
s0 = 0x07, s1 = 0x6f, s2 = 0x10, s3 = 0x00
res = 0x076f1000
Inside inv_substw:
b0 = 0xba, b1 = 0xe8, b2 = 0x70, b3 = 0x2c
s0 = 0xc0, s1 = 0xc8, s2 = 0xd0, s3 = 0x42
res = 0xc0c8d042
Inside inv_substw:
b0 = 0x7d, b1 = 0x24, b2 = 0x82, b3 = 0xee
s0 = 0x13, s1 = 0xa6, s2 = 0x11, s3 = 0x99
res = 0x13a61199
Inverse SubBytes block in and block out:
0xd774edac, 0xc5a8ca63, 0xbae8702c, 0x7d2482ee
0x0dca53aa, 0x076f1000, 0xc0c8d042, 0x13a61199


  Round 08
  ---------
AddRoundKey key, block in and block out:
0x812c81ad, 0xdadf48ba, 0x24360af2, 0xfab8b464
0x0dca53aa, 0x076f1000, 0xc0c8d042, 0x13a61199
0x8ce6d207, 0xddb058ba, 0xe4fedab0, 0xe91ea5fd

Inverse MixColumns block in and block out:
0x8ce6d207, 0xddb058ba, 0xe4fedab0, 0xe91ea5fd
0x0b173093, 0xbec83ec7, 0xf5482be6, 0x97729ed4

Inverse ShiftRows block in and block out:
0x0b173093, 0xbec83ec7, 0xf5482be6, 0x97729ed4
0x0b722bc7, 0xbe179ee6, 0xf5c830d4, 0x97483e93

Inside inv_substw:
b0 = 0x0b, b1 = 0x72, b2 = 0x2b, b3 = 0xc7
s0 = 0x9e, s1 = 0x1e, s2 = 0x0b, s3 = 0x31
res = 0x9e1e0b31
Inside inv_substw:
b0 = 0xbe, b1 = 0x17, b2 = 0x9e, b3 = 0xe6
s0 = 0x5a, s1 = 0x87, s2 = 0xdf, s3 = 0xf5
res = 0x5a87dff5
Inside inv_substw:
b0 = 0xf5, b1 = 0xc8, b2 = 0x30, b3 = 0xd4
s0 = 0x77, s1 = 0xb1, s2 = 0x08, s3 = 0x19
res = 0x77b10819
Inside inv_substw:
b0 = 0x97, b1 = 0x48, b2 = 0x3e, b3 = 0x93
s0 = 0x85, s1 = 0xd4, s2 = 0xd1, s3 = 0x22
res = 0x85d4d122
Inverse SubBytes block in and block out:
0x0b722bc7, 0xbe179ee6, 0xf5c830d4, 0x97483e93
0x9e1e0b31, 0x5a87dff5, 0x77b10819, 0x85d4d122


  Round 09
  ---------
AddRoundKey key, block in and block out:
0xb5a9328a, 0x2678a647, 0x98312229, 0x2f6c79b3
0x9e1e0b31, 0x5a87dff5, 0x77b10819, 0x85d4d122
0x2bb739bb, 0x7cff79b2, 0xef802a30, 0xaab8a891

Inverse MixColumns block in and block out:
0x2bb739bb, 0x7cff79b2, 0xef802a30, 0xaab8a891
0xae6e805e, 0x4bf9de24, 0xf8c9d793, 0xee54ba2b

Inverse ShiftRows block in and block out:
0xae6e805e, 0x4bf9de24, 0xf8c9d793, 0xee54ba2b
0xae54d724, 0x4b6eba93, 0xf8f9802b, 0xeec9de5e

Inside inv_substw:
b0 = 0xae, b1 = 0x54, b2 = 0xd7, b3 = 0x24
s0 = 0xbe, s1 = 0xfd, s2 = 0x0d, s3 = 0xa6
res = 0xbefd0da6
Inside inv_substw:
b0 = 0x4b, b1 = 0x6e, b2 = 0xba, b3 = 0x93
s0 = 0xcc, s1 = 0x45, s2 = 0xc0, s3 = 0x22
res = 0xcc45c022
Inside inv_substw:
b0 = 0xf8, b1 = 0xf9, b2 = 0x80, b3 = 0x2b
s0 = 0xe1, s1 = 0x69, s2 = 0x3a, s3 = 0x0b
res = 0xe1693a0b
Inside inv_substw:
b0 = 0xee, b1 = 0xc9, b2 = 0xde, b3 = 0x5e
s0 = 0x99, s1 = 0x12, s2 = 0x9c, s3 = 0x9d
res = 0x99129c9d
Inverse SubBytes block in and block out:
0xae54d724, 0x4b6eba93, 0xf8f9802b, 0xeec9de5e
0xbefd0da6, 0xcc45c022, 0xe1693a0b, 0x99129c9d


  Round 10
  ---------
AddRoundKey key, block in and block out:
0xd59aecb8, 0x5bf3c917, 0xfee94248, 0xde8ebe96
0xbefd0da6, 0xcc45c022, 0xe1693a0b, 0x99129c9d
0x6b67e11e, 0x97b60935, 0x1f807843, 0x479c220b

Inverse MixColumns block in and block out:
0x6b67e11e, 0x97b60935, 0x1f807843, 0x479c220b
0x47a53021, 0x6e1ccaa5, 0x4eb97a29, 0x46b2dcda

Inverse ShiftRows block in and block out:
0x47a53021, 0x6e1ccaa5, 0x4eb97a29, 0x46b2dcda
0x47b27aa5, 0x6ea5dc29, 0x4e1c30da, 0x46b9ca21

Inside inv_substw:
b0 = 0x47, b1 = 0xb2, b2 = 0x7a, b3 = 0xa5
s0 = 0x16, s1 = 0x3e, s2 = 0xbd, s3 = 0x29
res = 0x163ebd29
Inside inv_substw:
b0 = 0x6e, b1 = 0xa5, b2 = 0xdc, b3 = 0x29
s0 = 0x45, s1 = 0x29, s2 = 0x93, s3 = 0x4c
res = 0x4529934c
Inside inv_substw:
b0 = 0x4e, b1 = 0x1c, b2 = 0x30, b3 = 0xda
s0 = 0xb6, s1 = 0xc4, s2 = 0x08, s3 = 0x7a
res = 0xb6c4087a
Inside inv_substw:
b0 = 0x46, b1 = 0xb9, b2 = 0xca, b3 = 0x21
s0 = 0x98, s1 = 0xdb, s2 = 0x10, s3 = 0x7b
res = 0x98db107b
Inverse SubBytes block in and block out:
0x47b27aa5, 0x6ea5dc29, 0x4e1c30da, 0x46b9ca21
0x163ebd29, 0x4529934c, 0xb6c4087a, 0x98db107b


  Round 11
  ---------
AddRoundKey key, block in and block out:
0xa8b09c1a, 0x93d194cd, 0xbe49846e, 0xb75d5b9a
0x163ebd29, 0x4529934c, 0xb6c4087a, 0x98db107b
0xbe8e2133, 0xd6f80781, 0x088d8c14, 0x2f864be1

Inverse MixColumns block in and block out:
0xbe8e2133, 0xd6f80781, 0x088d8c14, 0x2f864be1
0xbd2066d9, 0x7c7de64f, 0xca28748b, 0xf69b94fa

Inverse ShiftRows block in and block out:
0xbd2066d9, 0x7c7de64f, 0xca28748b, 0xf69b94fa
0xbd9b744f, 0x7c20948b, 0xca7d66fa, 0xf628e6d9

Inside inv_substw:
b0 = 0xbd, b1 = 0x9b, b2 = 0x74, b3 = 0x4f
s0 = 0xcd, s1 = 0xe8, s2 = 0xca, s3 = 0x92
res = 0xcde8ca92
Inside inv_substw:
b0 = 0x7c, b1 = 0x20, b2 = 0x94, b3 = 0x8b
s0 = 0x01, s1 = 0x54, s2 = 0xe7, s3 = 0xce
res = 0x0154e7ce
Inside inv_substw:
b0 = 0xca, b1 = 0x7d, b2 = 0x66, b3 = 0xfa
s0 = 0x10, s1 = 0x13, s2 = 0xd3, s3 = 0x14
res = 0x1013d314
Inside inv_substw:
b0 = 0xf6, b1 = 0x28, b2 = 0xe6, b3 = 0xd9
s0 = 0xd6, s1 = 0xee, s2 = 0xf5, s3 = 0xe5
res = 0xd6eef5e5
Inverse SubBytes block in and block out:
0xbd9b744f, 0x7c20948b, 0xca7d66fa, 0xf628e6d9
0xcde8ca92, 0x0154e7ce, 0x1013d314, 0xd6eef5e5


  Round 12
  ---------
AddRoundKey key, block in and block out:
0x9ba35411, 0x8e6925af, 0xa51a8b5f, 0x2067fcde
0xcde8ca92, 0x0154e7ce, 0x1013d314, 0xd6eef5e5
0x564b9e83, 0x8f3dc261, 0xb509584b, 0xf689093b

Inverse MixColumns block in and block out:
0x564b9e83, 0x8f3dc261, 0xb509584b, 0xf689093b
0x61f7a93f, 0x462a2954, 0xef18471f, 0xca7faf57

Inverse ShiftRows block in and block out:
0x61f7a93f, 0x462a2954, 0xef18471f, 0xca7faf57
0x617f4754, 0x46f7af1f, 0xef2aa957, 0xca18293f

Inside inv_substw:
b0 = 0x61, b1 = 0x7f, b2 = 0x47, b3 = 0x54
s0 = 0xd8, s1 = 0x6b, s2 = 0x16, s3 = 0xfd
res = 0xd86b16fd
Inside inv_substw:
b0 = 0x46, b1 = 0xf7, b2 = 0xaf, b3 = 0x1f
s0 = 0x98, s1 = 0x26, s2 = 0x1b, s3 = 0xcb
res = 0x98261bcb
Inside inv_substw:
b0 = 0xef, b1 = 0x2a, b2 = 0xa9, b3 = 0x57
s0 = 0x61, s1 = 0x95, s2 = 0xb7, s3 = 0xda
res = 0x6195b7da
Inside inv_substw:
b0 = 0xca, b1 = 0x18, b2 = 0x29, b3 = 0x3f
s0 = 0x10, s1 = 0x34, s2 = 0x4c, s3 = 0x25
res = 0x10344c25
Inverse SubBytes block in and block out:
0x617f4754, 0x46f7af1f, 0xef2aa957, 0xca18293f
0xd86b16fd, 0x98261bcb, 0x6195b7da, 0x10344c25


  Round 13
  ---------
AddRoundKey key, block in and block out:
0x1f352c07, 0x3b6108d7, 0x2d9810a3, 0x0914dff4
0xd86b16fd, 0x98261bcb, 0x6195b7da, 0x10344c25
0xc75e3afa, 0xa347131c, 0x4c0da779, 0x192093d1

Inverse MixColumns block in and block out:
0xc75e3afa, 0xa347131c, 0x4c0da779, 0x192093d1
0x9097df81, 0x746a09fc, 0x44828ad3, 0xfb3a873d

Inverse ShiftRows block in and block out:
0x9097df81, 0x746a09fc, 0x44828ad3, 0xfb3a873d
0x903a8afc, 0x749787d3, 0x446adf3d, 0xfb820981

Inside inv_substw:
b0 = 0x90, b1 = 0x3a, b2 = 0x8a, b3 = 0xfc
s0 = 0x96, s1 = 0xa2, s2 = 0xcf, s3 = 0x55
res = 0x96a2cf55
Inside inv_substw:
b0 = 0x74, b1 = 0x97, b2 = 0x87, b3 = 0xd3
s0 = 0xca, s1 = 0x85, s2 = 0xea, s3 = 0xa9
res = 0xca85eaa9
Inside inv_substw:
b0 = 0x44, b1 = 0x6a, b2 = 0xdf, b3 = 0x3d
s0 = 0x86, s1 = 0x58, s2 = 0xef, s3 = 0x8b
res = 0x8658ef8b
Inside inv_substw:
b0 = 0xfb, b1 = 0x82, b2 = 0x09, b3 = 0x81
s0 = 0x63, s1 = 0x11, s2 = 0x40, s3 = 0x91
res = 0x63114091
Inverse SubBytes block in and block out:
0x903a8afc, 0x749787d3, 0x446adf3d, 0xfb820981
0x96a2cf55, 0xca85eaa9, 0x8658ef8b, 0x63114091

  Final AddRoundKeys round.
AddRoundKey key, block in and block out:
0x603deb10, 0x15ca71be, 0x2b73aef0, 0x857d7781
0x96a2cf55, 0xca85eaa9, 0x8658ef8b, 0x63114091
0xf69f2445, 0xdf4f9b17, 0xad2b417b, 0xe66c3710

OK. Result matches expected.

Number of test cases executed: 16
All test cases OK.
